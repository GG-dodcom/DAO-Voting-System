import MagicString from 'magic-string';
import { FilterPattern } from '@rollup/pluginutils';

interface Options {
    /**
     * Provide path which will be transformed
     *
     * @default process.cwd()
     */
    rootDir?: string;
    /**
     * Should generate d.ts file
     *
     * @default false
     */
    dts?: boolean | Partial<Omit<GenerateDtsOptions, 'components'>>;
    /**
     * Should generate d.ts file
     *
     * @default true
     */
    local?: boolean;
    /**
     * RegExp or glob to match files to be transformed
     */
    include?: FilterPattern;
    /**
     * RegExp or glob to match files to NOT be transformed
     */
    exclude?: FilterPattern;
    /**
     * Pass a custom function to resolve the component importing path from the component name.
     *
     */
    resolvers?: Resolvers;
}
interface ImportInfo {
    as?: string;
    name?: string;
    default?: string;
    from: string;
}
declare type ExportType = 'Export' | 'ExportDefault';
interface ComponentsContext {
    name: string;
    path: string;
    type: ExportType | 'Declaration';
}
interface ResolverReturnType {
    name: string;
    from: string;
    type: ExportType;
    originalName: string;
    style?: string;
}
declare type ResolverComponent = () => ResolverReturnType[] | Promise<ResolverReturnType[]>;
declare type Resolvers = Promise<ResolverComponent>[] | ResolverComponent[];
declare type Components = Set<ComponentsContext>;
interface TransformOptions {
    id: string;
    code: MagicString;
    components: Components;
    rootDir: string;
    resolvers: Resolvers;
    local: boolean;
}
interface GenerateDtsOptions {
    components: Components;
    rootPath: string;
    filename: string;
    resolvers: Resolvers;
    local: boolean;
}
interface SearchGlobOptions {
    rootPath: string;
}
interface BaseResolverOptions {
    prefix?: boolean | string;
}

export { BaseResolverOptions, Components, ComponentsContext, ExportType, GenerateDtsOptions, ImportInfo, Options, ResolverComponent, ResolverReturnType, Resolvers, SearchGlobOptions, TransformOptions };
