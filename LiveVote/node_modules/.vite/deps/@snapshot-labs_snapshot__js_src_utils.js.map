{
  "version": 3,
  "sources": ["../../@snapshot-labs/snapshot.js/src/utils.ts", "../../@snapshot-labs/snapshot.js/src/utils/multicaller.ts", "../../@snapshot-labs/snapshot.js/src/utils/blockfinder.ts", "../../@snapshot-labs/snapshot.js/src/utils/provider.ts", "../../@snapshot-labs/snapshot.js/src/utils/web3.ts", "../../@snapshot-labs/snapshot.js/src/verify/starknet.ts", "../../@snapshot-labs/snapshot.js/src/verify/evm.ts", "../../@snapshot-labs/snapshot.js/src/verify/index.ts", "../../@snapshot-labs/snapshot.js/src/gateways.json", "../../@snapshot-labs/snapshot.js/src/networks.json", "../../@snapshot-labs/snapshot.js/src/voting/singleChoice.ts", "../../@snapshot-labs/snapshot.js/src/voting/approval.ts", "../../@snapshot-labs/snapshot.js/src/voting/quadratic.ts", "../../@snapshot-labs/snapshot.js/src/voting/rankedChoice.ts", "../../@snapshot-labs/snapshot.js/src/voting/weighted.ts", "../../@snapshot-labs/snapshot.js/src/voting/index.ts", "../../@snapshot-labs/snapshot.js/src/delegationSubgraphs.json", "../../@snapshot-labs/snapshot.js/src/utils/delegation.ts"],
  "sourcesContent": ["import fetch from 'cross-fetch';\nimport { Interface } from '@ethersproject/abi';\nimport { Contract } from '@ethersproject/contracts';\nimport { getAddress, isAddress } from '@ethersproject/address';\nimport { parseUnits } from '@ethersproject/units';\nimport { namehash, ensNormalize } from '@ethersproject/hash';\nimport { jsonToGraphQLQuery } from 'json-to-graphql-query';\nimport Ajv from 'ajv';\nimport addFormats from 'ajv-formats';\nimport addErrors from 'ajv-errors';\nimport Multicaller from './utils/multicaller';\nimport { getSnapshots } from './utils/blockfinder';\nimport getProvider from './utils/provider';\nimport { signMessage, getBlockNumber } from './utils/web3';\nimport { getHash, verify } from './verify';\nimport gateways from './gateways.json';\nimport networks from './networks.json';\nimport voting from './voting';\nimport getDelegatesBySpace, { SNAPSHOT_SUBGRAPH_URL } from './utils/delegation';\nimport { validateAndParseAddress } from 'starknet';\n\ninterface Options {\n  url?: string;\n  headers?: any;\n}\n\ninterface Strategy {\n  name: string;\n  network?: string;\n  params: any;\n}\n\nconst ENS_REGISTRY = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e';\nconst ENS_ABI = [\n  'function text(bytes32 node, string calldata key) external view returns (string memory)',\n  'function resolver(bytes32 node) view returns (address)' // ENS registry ABI\n];\nconst EMPTY_ADDRESS = '0x0000000000000000000000000000000000000000';\nconst STARKNET_NETWORKS = {\n  '0x534e5f4d41494e': {\n    name: 'Starknet',\n    testnet: false\n  },\n  '0x534e5f5345504f4c4941': {\n    name: 'Starknet Sepolia',\n    testnet: true\n  }\n};\n\nconst scoreApiHeaders = {\n  Accept: 'application/json',\n  'Content-Type': 'application/json'\n};\n\nconst DEFAULT_SCORE_API_URL = 'https://score.snapshot.org';\n\nfunction formatScoreAPIUrl(\n  url = DEFAULT_SCORE_API_URL,\n  options = {\n    path: ''\n  }\n) {\n  const scoreURL = new URL(url);\n  if (options.path) scoreURL.pathname = options.path;\n  const apiKey = scoreURL.searchParams.get('apiKey');\n  let headers: any = { ...scoreApiHeaders };\n  if (apiKey) {\n    scoreURL.searchParams.delete('apiKey');\n    headers = { ...scoreApiHeaders, 'X-API-KEY': apiKey };\n  }\n  return {\n    url: scoreURL.toString(),\n    headers\n  };\n}\n\nasync function parseScoreAPIResponse(res: any) {\n  let data: any = await res.text();\n  try {\n    data = JSON.parse(data);\n  } catch (e: any) {\n    return Promise.reject({\n      code: res.status || 500,\n      message: 'Failed to parse response from score API',\n      data\n    });\n  }\n  if (data.error) return Promise.reject(data.error);\n  return data;\n}\n\nconst ajv = new Ajv({\n  allErrors: true,\n  allowUnionTypes: true,\n  $data: true,\n  passContext: true\n});\n// @ts-ignore\naddFormats(ajv);\naddErrors(ajv);\n\najv.addFormat('address', {\n  validate: (value: string) => {\n    try {\n      return value === getAddress(value);\n    } catch (e: any) {\n      return false;\n    }\n  }\n});\n\najv.addFormat('evmAddress', {\n  validate: (value: string) => {\n    try {\n      getAddress(value);\n      return true;\n    } catch (e: any) {\n      return false;\n    }\n  }\n});\n\najv.addFormat('starknetAddress', {\n  validate: (value: string) => {\n    try {\n      return validateAndParseAddress(value) === value;\n    } catch (e: any) {\n      return false;\n    }\n  }\n});\n\najv.addFormat('long', {\n  validate: () => true\n});\n\najv.addFormat('lowercase', {\n  validate: (value: string) => value === value.toLowerCase()\n});\n\najv.addFormat('color', {\n  validate: (value: string) => {\n    if (!value) return false;\n    return !!value.match(/^#[0-9A-F]{6}$/);\n  }\n});\n\najv.addFormat('ethValue', {\n  validate: (value: string) => {\n    if (!value.match(/^([0-9]|[1-9][0-9]+)(\\.[0-9]+)?$/)) return false;\n\n    try {\n      parseUnits(value, 18);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n});\n\nconst networksIds = Object.keys(networks);\nconst mainnetNetworkIds = Object.keys(networks).filter(\n  (id) => !networks[id].testnet\n);\n\najv.addKeyword({\n  keyword: 'snapshotNetwork',\n  validate: function (schema, data) {\n    // @ts-ignore\n    const snapshotEnv = this.snapshotEnv || 'default';\n    if (snapshotEnv === 'mainnet') return mainnetNetworkIds.includes(data);\n    return networksIds.includes(data);\n  },\n  error: {\n    message: 'network not allowed'\n  }\n});\n\najv.addKeyword({\n  keyword: 'starknetNetwork',\n  validate: function (schema, data) {\n    // @ts-ignore\n    const snapshotEnv = this.snapshotEnv || 'default';\n    if (snapshotEnv === 'mainnet') {\n      return Object.keys(STARKNET_NETWORKS)\n        .filter((id) => !STARKNET_NETWORKS[id].testnet)\n        .includes(data);\n    }\n\n    return Object.keys(STARKNET_NETWORKS).includes(data);\n  },\n  error: {\n    message: 'network not allowed'\n  }\n});\n\najv.addKeyword({\n  keyword: 'maxLengthWithSpaceType',\n  validate: function validate(schema, data) {\n    // @ts-ignore\n    const spaceType = this.spaceType || 'default';\n    const isValid = data.length <= schema[spaceType];\n    if (!isValid) {\n      // @ts-ignore\n      validate.errors = [\n        {\n          keyword: 'maxLengthWithSpaceType',\n          message: `must not have more than ${schema[spaceType]}`,\n          params: { limit: schema[spaceType] }\n        }\n      ];\n    }\n    return isValid;\n  },\n  errors: true\n});\n\najv.addKeyword({\n  keyword: 'maxItemsWithSpaceType',\n  validate: function validate(schema, data) {\n    // @ts-ignore\n    const spaceType = this.spaceType || 'default';\n    const isValid = data.length <= schema[spaceType];\n    if (!isValid) {\n      // @ts-ignore\n      validate.errors = [\n        {\n          keyword: 'maxItemsWithSpaceType',\n          message: `must NOT have more than ${schema[spaceType]} items`,\n          params: { limit: schema[spaceType] }\n        }\n      ];\n    }\n    return isValid;\n  },\n  errors: true\n});\n\n// Custom URL format to allow empty string values\n// https://github.com/snapshot-labs/snapshot.js/pull/541/files\najv.addFormat('customUrl', {\n  type: 'string',\n  validate: (str) => {\n    if (!str.length) return true;\n    return (\n      str.startsWith('http://') ||\n      str.startsWith('https://') ||\n      str.startsWith('ipfs://') ||\n      str.startsWith('ipns://') ||\n      str.startsWith('snapshot://')\n    );\n  }\n});\n\nexport async function call(provider, abi: any[], call: any[], options?) {\n  const contract = new Contract(call[0], abi, provider);\n  try {\n    const params = call[2] || [];\n    return await contract[call[1]](...params, options || {});\n  } catch (e: any) {\n    return Promise.reject(e);\n  }\n}\n\nexport async function multicall(\n  network: string,\n  provider,\n  abi: any[],\n  calls: any[],\n  options?\n) {\n  const multicallAbi = [\n    'function aggregate(tuple(address target, bytes callData)[] calls) view returns (uint256 blockNumber, bytes[] returnData)'\n  ];\n  const multicallAddress =\n    options?.multicallAddress || networks[network].multicall;\n  const multi = new Contract(multicallAddress, multicallAbi, provider);\n  const itf = new Interface(abi);\n  try {\n    const max = options?.limit || 500;\n    if (options?.limit) delete options.limit;\n    const pages = Math.ceil(calls.length / max);\n    const promises: any = [];\n    Array.from(Array(pages)).forEach((x, i) => {\n      const callsInPage = calls.slice(max * i, max * (i + 1));\n      promises.push(\n        multi.aggregate(\n          callsInPage.map((call) => [\n            call[0].toLowerCase(),\n            itf.encodeFunctionData(call[1], call[2])\n          ]),\n          options || {}\n        )\n      );\n    });\n    let results: any = await Promise.all(promises);\n    results = results.reduce((prev: any, [, res]: any) => prev.concat(res), []);\n    return results.map((call, i) =>\n      itf.decodeFunctionResult(calls[i][1], call)\n    );\n  } catch (e: any) {\n    return Promise.reject(e);\n  }\n}\n\nexport async function subgraphRequest(url: string, query, options: any = {}) {\n  const body: Record<string, any> = { query: jsonToGraphQLQuery({ query }) };\n  if (options.variables) body.variables = options.variables;\n  const res = await fetch(url, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      ...options?.headers\n    },\n    body: JSON.stringify(body)\n  });\n  let responseData: any = await res.text();\n  try {\n    responseData = JSON.parse(responseData);\n  } catch (e: any) {\n    throw new Error(\n      `Errors found in subgraphRequest: URL: ${url}, Status: ${\n        res.status\n      }, Response: ${responseData.substring(0, 400)}`\n    );\n  }\n  if (responseData.errors) {\n    throw new Error(\n      `Errors found in subgraphRequest: URL: ${url}, Status: ${\n        res.status\n      },  Response: ${JSON.stringify(responseData.errors).substring(0, 400)}`\n    );\n  }\n  const { data } = responseData;\n  return data || {};\n}\n\nexport function getUrl(uri, gateway = gateways[0]) {\n  const ipfsGateway = `https://${gateway}`;\n  if (!uri) return null;\n  if (\n    !uri.startsWith('ipfs://') &&\n    !uri.startsWith('ipns://') &&\n    !uri.startsWith('https://') &&\n    !uri.startsWith('http://')\n  )\n    return `${ipfsGateway}/ipfs/${uri}`;\n  const uriScheme = uri.split('://')[0];\n  if (uriScheme === 'ipfs')\n    return uri.replace('ipfs://', `${ipfsGateway}/ipfs/`);\n  if (uriScheme === 'ipns')\n    return uri.replace('ipns://', `${ipfsGateway}/ipns/`);\n  return uri;\n}\n\nexport async function getJSON(uri, options: any = {}) {\n  const url = getUrl(uri, options.gateways);\n  return fetch(url).then((res) => res.json());\n}\n\nexport async function ipfsGet(\n  gateway: string,\n  ipfsHash: string,\n  protocolType = 'ipfs'\n) {\n  const url = `https://${gateway}/${protocolType}/${ipfsHash}`;\n  return fetch(url).then((res) => res.json());\n}\n\nexport async function sendTransaction(\n  web3,\n  contractAddress: string,\n  abi: any[],\n  action: string,\n  params: any[],\n  overrides = {}\n) {\n  const signer = web3.getSigner();\n  const contract = new Contract(contractAddress, abi, web3);\n  const contractWithSigner = contract.connect(signer);\n  // overrides.gasLimit = 12e6;\n  return await contractWithSigner[action](...params, overrides);\n}\n\nexport async function getScores(\n  space: string,\n  strategies: Strategy[],\n  network: string,\n  addresses: string[],\n  snapshot: number | string = 'latest',\n  scoreApiUrl = DEFAULT_SCORE_API_URL,\n  options: any = {}\n) {\n  if (!Array.isArray(addresses)) {\n    return inputError('addresses should be an array of addresses');\n  }\n  if (addresses.length === 0) {\n    return inputError('addresses can not be empty');\n  }\n  const invalidAddress = addresses.find((address) => !isValidAddress(address));\n  if (invalidAddress) {\n    return inputError(`Invalid address: ${invalidAddress}`);\n  }\n  if (!isValidNetwork(network)) {\n    return inputError(`Invalid network: ${network}`);\n  }\n  const invalidStrategy = strategies.find(\n    (strategy) => strategy.network && !isValidNetwork(strategy.network)\n  );\n  if (invalidStrategy) {\n    return inputError(\n      `Invalid network (${invalidStrategy.network}) in strategy ${invalidStrategy.name}`\n    );\n  }\n  if (!isValidSnapshot(snapshot, network)) {\n    return inputError(\n      `Snapshot (${snapshot}) must be 'latest' or greater than network start block (${networks[network].start})`\n    );\n  }\n\n  const urlObject = new URL(scoreApiUrl);\n  urlObject.pathname = '/api/scores';\n  const { url, headers } = formatScoreAPIUrl(scoreApiUrl, {\n    path: '/api/scores'\n  });\n\n  try {\n    const params = {\n      space,\n      network,\n      snapshot,\n      strategies,\n      addresses\n    };\n    const res = await fetch(url, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify({ params })\n    });\n    const response = await parseScoreAPIResponse(res);\n\n    return options.returnValue === 'all'\n      ? response.result\n      : response.result[options.returnValue || 'scores'];\n  } catch (e: any) {\n    if (e.errno) {\n      return Promise.reject({ code: e.errno, message: e.toString(), data: '' });\n    }\n    return Promise.reject(e);\n  }\n}\n\nexport async function getVp(\n  address: string,\n  network: string,\n  strategies: Strategy[],\n  snapshot: number | 'latest',\n  space: string,\n  delegation: boolean,\n  options?: Options\n) {\n  const { url, headers } = formatScoreAPIUrl(options?.url);\n  if (!isValidAddress(address)) {\n    return inputError(`Invalid voter address: ${address}`);\n  }\n  if (!isValidNetwork(network)) {\n    return inputError(`Invalid network: ${network}`);\n  }\n  const invalidStrategy = strategies.find(\n    (strategy) => strategy.network && !isValidNetwork(strategy.network)\n  );\n\n  if (invalidStrategy) {\n    return inputError(\n      `Invalid network (${invalidStrategy.network}) in strategy ${invalidStrategy.name}`\n    );\n  }\n  if (!isValidSnapshot(snapshot, network)) {\n    return inputError(\n      `Snapshot (${snapshot}) must be 'latest' or greater than network start block (${networks[network].start})`\n    );\n  }\n\n  const init = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify({\n      jsonrpc: '2.0',\n      method: 'get_vp',\n      params: {\n        address,\n        network,\n        strategies,\n        snapshot,\n        space,\n        delegation\n      }\n    })\n  };\n\n  try {\n    const res = await fetch(url, init);\n    const response = await parseScoreAPIResponse(res);\n    return response.result;\n  } catch (e: any) {\n    if (e.errno) {\n      return Promise.reject({ code: e.errno, message: e.toString(), data: '' });\n    }\n    return Promise.reject(e);\n  }\n}\n\nexport async function validate(\n  validation: string,\n  author: string,\n  space: string,\n  network: string,\n  snapshot: number | 'latest',\n  params: any,\n  options?: Options\n) {\n  if (!isValidAddress(author)) {\n    return inputError(`Invalid author: ${author}`);\n  }\n\n  if (!isValidNetwork(network)) {\n    return inputError(`Invalid network: ${network}`);\n  }\n  if (!isValidSnapshot(snapshot, network)) {\n    return inputError(\n      `Snapshot (${snapshot}) must be 'latest' or greater than network start block (${networks[network].start})`\n    );\n  }\n\n  if (!options) options = {};\n  const { url, headers } = formatScoreAPIUrl(options.url);\n\n  const init = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify({\n      jsonrpc: '2.0',\n      method: 'validate',\n      params: {\n        validation,\n        author,\n        space,\n        network,\n        snapshot,\n        params\n      }\n    })\n  };\n\n  try {\n    const res = await fetch(url, init);\n    const response = await parseScoreAPIResponse(res);\n    return response.result;\n  } catch (e: any) {\n    if (e.errno) {\n      return Promise.reject({ code: e.errno, message: e.toString(), data: '' });\n    }\n    return Promise.reject(e);\n  }\n}\n\ninterface validateSchemaOptions {\n  snapshotEnv?: string;\n  spaceType?: string;\n}\n\nexport function validateSchema(\n  schema,\n  data,\n  options: validateSchemaOptions = {\n    snapshotEnv: 'default',\n    spaceType: 'default'\n  }\n) {\n  const ajvValidate = ajv.compile(schema);\n  const valid = ajvValidate.call(options, data);\n  return valid ? valid : ajvValidate.errors;\n}\n\nexport async function getEnsTextRecord(\n  ens: string,\n  record: string,\n  network = '1',\n  options: any = {}\n) {\n  const {\n    ensResolvers = networks[network]?.ensResolvers ||\n      networks['1'].ensResolvers,\n    broviderUrl,\n    ...multicallOptions\n  } = options;\n\n  let ensHash: string;\n\n  try {\n    ensHash = namehash(ensNormalize(ens));\n  } catch (e: any) {\n    return null;\n  }\n\n  const provider = getProvider(network, { broviderUrl });\n\n  const calls = [\n    [ENS_REGISTRY, 'resolver', [ensHash]], // Query for resolver from registry\n    ...ensResolvers.map((address: string) => [\n      address,\n      'text',\n      [ensHash, record]\n    ]) // Query for text record from each resolver\n  ];\n\n  const [[resolverAddress], ...textRecords]: string[][] = await multicall(\n    network,\n    provider,\n    ENS_ABI,\n    calls,\n    multicallOptions\n  );\n\n  const resolverIndex = ensResolvers.indexOf(resolverAddress);\n  return resolverIndex !== -1 ? textRecords[resolverIndex]?.[0] : null;\n}\n\nexport async function getSpaceUri(\n  id: string,\n  network = '1',\n  options: any = {}\n): Promise<string | null> {\n  try {\n    return await getEnsTextRecord(id, 'snapshot', network, options);\n  } catch (e: any) {\n    console.log(e);\n    return null;\n  }\n}\n\nexport async function getEnsOwner(\n  ens: string,\n  network = '1',\n  options: any = {}\n): Promise<string | null> {\n  const provider = getProvider(network, options);\n  const ensRegistry = new Contract(\n    ENS_REGISTRY,\n    ['function owner(bytes32) view returns (address)'],\n    provider\n  );\n\n  let ensHash: string;\n\n  try {\n    ensHash = namehash(ensNormalize(ens));\n  } catch (e: any) {\n    return null;\n  }\n\n  const ensNameWrapper =\n    options.ensNameWrapper || networks[network].ensNameWrapper;\n  let owner = await ensRegistry.owner(ensHash);\n  // If owner is the ENSNameWrapper contract, resolve the owner of the name\n  if (owner === ensNameWrapper) {\n    const ensNameWrapperContract = new Contract(\n      ensNameWrapper,\n      ['function ownerOf(uint256) view returns (address)'],\n      provider\n    );\n    owner = await ensNameWrapperContract.ownerOf(ensHash);\n  }\n  return owner;\n}\n\nexport async function getSpaceController(\n  id: string,\n  network = '1',\n  options: any = {}\n): Promise<string | null> {\n  const spaceUri = await getSpaceUri(id, network, options);\n  if (spaceUri) {\n    let isUriAddress = isAddress(spaceUri);\n    if (isUriAddress) return spaceUri;\n\n    const uriParts = spaceUri.split('/');\n    const position = uriParts.includes('testnet') ? 5 : 4;\n    const address = uriParts[position];\n    isUriAddress = isAddress(address);\n    if (isUriAddress) return address;\n  }\n  return await getEnsOwner(id, network, options);\n}\n\nexport function clone(item) {\n  return JSON.parse(JSON.stringify(item));\n}\n\nexport async function sleep(time) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, time);\n  });\n}\n\nexport function getNumberWithOrdinal(n) {\n  const s = ['th', 'st', 'nd', 'rd'],\n    v = n % 100;\n  return n + (s[(v - 20) % 10] || s[v] || s[0]);\n}\n\nfunction isValidNetwork(network: string) {\n  return !!networks[network];\n}\n\nfunction isValidAddress(address: string) {\n  return isAddress(address) && address !== EMPTY_ADDRESS;\n}\n\nfunction isValidSnapshot(snapshot: number | string, network: string) {\n  return (\n    snapshot === 'latest' ||\n    (typeof snapshot === 'number' && snapshot >= networks[network].start)\n  );\n}\n\nexport function isStarknetAddress(address: string): boolean {\n  if (!address) return false;\n\n  try {\n    validateAndParseAddress(address);\n    return true;\n  } catch (e: any) {\n    return false;\n  }\n}\n\nexport function isEvmAddress(address: string): boolean {\n  return isAddress(address);\n}\n\nexport function getFormattedAddress(\n  address: string,\n  format: 'evm' | 'starknet'\n): string {\n  if (format === 'evm' && isEvmAddress(address)) return getAddress(address);\n  if (format === 'starknet' && isStarknetAddress(address))\n    return validateAndParseAddress(address);\n\n  throw new Error(`Invalid address: ${address}`);\n}\n\nfunction inputError(message: string) {\n  return Promise.reject(new Error(message));\n}\n\nexport { getDelegatesBySpace, SNAPSHOT_SUBGRAPH_URL };\n\nexport default {\n  call,\n  multicall,\n  subgraphRequest,\n  ipfsGet,\n  getUrl,\n  getJSON,\n  sendTransaction,\n  getScores,\n  getVp,\n  validateSchema,\n  getEnsTextRecord,\n  getSpaceUri,\n  getEnsOwner,\n  getSpaceController,\n  getDelegatesBySpace,\n  clone,\n  sleep,\n  getNumberWithOrdinal,\n  voting,\n  getProvider,\n  signMessage,\n  getBlockNumber,\n  Multicaller,\n  getSnapshots,\n  getHash,\n  verify,\n  validate,\n  isStarknetAddress,\n  isEvmAddress,\n  getFormattedAddress,\n  SNAPSHOT_SUBGRAPH_URL\n};\n", "import { StaticJsonRpcProvider } from '@ethersproject/providers';\nimport set from 'lodash.set';\nimport { multicall } from '../utils';\n\nexport default class Multicaller {\n  public network: string;\n  public provider: StaticJsonRpcProvider;\n  public abi: any[];\n  public options: any = {};\n  public calls: any[] = [];\n  public paths: any[] = [];\n\n  constructor(\n    network: string,\n    provider: StaticJsonRpcProvider,\n    abi: any[],\n    options?\n  ) {\n    this.network = network;\n    this.provider = provider;\n    this.abi = abi;\n    this.options = options || {};\n  }\n\n  call(path, address, fn, params?): Multicaller {\n    this.calls.push([address, fn, params]);\n    this.paths.push(path);\n    return this;\n  }\n\n  async execute(from?: any): Promise<any> {\n    const obj = from || {};\n    const result = await multicall(\n      this.network,\n      this.provider,\n      this.abi,\n      this.calls,\n      this.options\n    );\n    result.forEach((r, i) => set(obj, this.paths[i], r.length > 1 ? r : r[0]));\n    this.calls = [];\n    this.paths = [];\n    return obj;\n  }\n}\n", "import { subgraphRequest } from '../utils';\n\nlet cache: Record<string, any> = {};\nlet expirationTime = 0;\n\nexport async function getSnapshots(\n  network,\n  snapshot,\n  provider,\n  networks,\n  options: any = {}\n) {\n  // If snapshot is latest, return all latest\n  const snapshots = {};\n  networks.forEach((n) => (snapshots[n] = 'latest'));\n  if (snapshot === 'latest') return snapshots;\n\n  // Check if cache is valid\n  const cacheKey = `${network}-${snapshot}-${networks.join('-')}`;\n  const cachedEntry = cache[cacheKey];\n  const now = Date.now();\n  if (cachedEntry && expirationTime > now) {\n    return cachedEntry;\n  }\n  // Reset cache every hour\n  if (expirationTime < now) {\n    cache = {};\n    // Set expiration time to next hour\n    expirationTime = now + 60 * 60 * 1000 - (now % (60 * 60 * 1000));\n  }\n\n  snapshots[network] = snapshot;\n  const networkIn = Object.keys(snapshots).filter((s) => network !== s);\n  if (networkIn.length === 0) return snapshots;\n  const block = await provider.getBlock(snapshot);\n  const query = {\n    blocks: {\n      __args: {\n        where: {\n          ts: block.timestamp,\n          network_in: networkIn\n        }\n      },\n      network: true,\n      number: true\n    }\n  };\n  const url = options.blockFinderUrl || 'https://blockfinder.snapshot.org';\n  const data = await subgraphRequest(url, query);\n  data.blocks.forEach((block) => (snapshots[block.network] = block.number));\n  cache[cacheKey] = snapshots;\n  return snapshots;\n}\n", "import {\n  JsonRpcBatchProvider,\n  StaticJsonRpcProvider\n} from '@ethersproject/providers';\n\nconst providers = {};\nconst batchedProviders = {};\n\nexport type ProviderOptions = {\n  broviderUrl?: string;\n};\n\nconst DEFAULT_BROVIDER_URL = 'https://rpc.snapshot.org';\n\nexport default function getProvider(\n  network,\n  { broviderUrl = DEFAULT_BROVIDER_URL }: ProviderOptions = {}\n) {\n  const url = `${broviderUrl}/${network}`;\n  if (!providers[network])\n    providers[network] = new StaticJsonRpcProvider(\n      {\n        url,\n        timeout: 25000,\n        allowGzip: true\n      },\n      Number(network)\n    );\n  return providers[network];\n}\n\nexport function getBatchedProvider(\n  network,\n  { broviderUrl = DEFAULT_BROVIDER_URL }: ProviderOptions = {}\n) {\n  const url = `${broviderUrl}/${network}`;\n  if (!batchedProviders[network])\n    batchedProviders[network] = new JsonRpcBatchProvider({\n      url,\n      timeout: 25000,\n      allowGzip: true\n    });\n  return batchedProviders[network];\n}\n", "import { hexlify } from '@ethersproject/bytes';\n\nexport async function signMessage(web3, msg, address) {\n  msg = hexlify(new Buffer(msg, 'utf8'));\n  return await web3.send('personal_sign', [msg, address]);\n}\n\nexport async function getBlockNumber(provider) {\n  try {\n    const blockNumber: any = await provider.getBlockNumber();\n    return parseInt(blockNumber);\n  } catch (e: any) {\n    return Promise.reject();\n  }\n}\n", "import { Contract, RpcProvider, typedData } from 'starknet';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport type { SignaturePayload } from '.';\nimport type { ProviderOptions } from '../utils/provider';\n\nexport type NetworkType = 'SN_MAIN' | 'SN_SEPOLIA';\n\nconst RPC_URLS: Record<NetworkType, string> = {\n  SN_MAIN: 'https://starknet-mainnet.public.blastapi.io',\n  SN_SEPOLIA: 'https://starknet-sepolia.public.blastapi.io'\n};\n\nconst ABI = [\n  {\n    name: 'argent::common::account::IAccount',\n    type: 'interface',\n    items: [\n      {\n        name: 'is_valid_signature',\n        type: 'function',\n        inputs: [\n          {\n            name: 'hash',\n            type: 'core::felt252'\n          },\n          {\n            name: 'signature',\n            type: 'core::array::Array::<core::felt252>'\n          }\n        ],\n        outputs: [\n          {\n            type: 'core::felt252'\n          }\n        ],\n        state_mutability: 'view'\n      }\n    ]\n  }\n];\n\nfunction getProvider(network: NetworkType, options: ProviderOptions) {\n  if (!RPC_URLS[network]) throw new Error('Invalid network');\n\n  return new RpcProvider({\n    nodeUrl: options?.broviderUrl ?? RPC_URLS[network]\n  });\n}\n\nexport function isStarknetMessage(data: SignaturePayload): boolean {\n  return !!data.primaryType && !!data.types.StarkNetDomain;\n}\n\nexport function getHash(data: SignaturePayload, address: string): string {\n  const { domain, types, primaryType, message } =\n    data as Required<SignaturePayload>;\n\n  return typedData.getMessageHash(\n    { types, primaryType, domain, message },\n    address\n  );\n}\n\nexport default async function verify(\n  address: string,\n  sig: string[],\n  data: SignaturePayload,\n  network: NetworkType = 'SN_MAIN',\n  options: ProviderOptions = {}\n): Promise<boolean> {\n  try {\n    const contractAccount = new Contract(\n      ABI,\n      address,\n      getProvider(network, options)\n    );\n\n    if (sig.length < 2) {\n      throw new Error('Invalid signature format');\n    }\n\n    const result = await contractAccount.is_valid_signature(\n      getHash(data, address),\n      sig.slice(-2)\n    );\n\n    return BigNumber.from(result).eq(BigNumber.from('370462705988'));\n  } catch (e: any) {\n    if (e.message.includes('Contract not found')) {\n      throw new Error('Contract not deployed');\n    }\n\n    throw e;\n  }\n}\n", "import { verifyTypedData } from '@ethersproject/wallet';\nimport { _TypedDataEncoder } from '@ethersproject/hash';\nimport { arrayify, concat } from '@ethersproject/bytes';\nimport getProvider, { type ProviderOptions } from '../utils/provider';\nimport { call } from '../utils';\nimport type { SignaturePayload } from '.';\nimport type { StaticJsonRpcProvider } from '@ethersproject/providers';\nimport { AbiCoder } from '@ethersproject/abi';\n\nconst ERC6492_DETECTION_SUFFIX =\n  '6492649264926492649264926492649264926492649264926492649264926492';\n\nfunction isEqual(a: string, b: string): boolean {\n  return a.toLowerCase() === b.toLowerCase();\n}\n\nexport function getHash(data: SignaturePayload): string {\n  const { domain, types, message } = data;\n  return _TypedDataEncoder.hash(domain, types, message);\n}\n\nexport default async function verify(\n  address: string,\n  sig: string,\n  data: SignaturePayload,\n  network = '1',\n  options: ProviderOptions = {}\n): Promise<boolean> {\n  const { domain, types, message } = data;\n\n  try {\n    const recoverAddress = verifyTypedData(domain, types, message, sig);\n    if (isEqual(address, recoverAddress)) return true;\n  } catch (e: any) {}\n\n  const provider = getProvider(network, options);\n  const hash = getHash(data);\n\n  // Handle EIP-6492\n  // https://eips.ethereum.org/EIPS/eip-6492\n  //\n  // We can actually replace verifyTypedData and verifyDefault with the following code,\n  // but https://github.com/AmbireTech/signature-validator/blob/main/contracts/DeploylessUniversalSigValidator.sol\n  // also can send an extra network request to the provider. (with verifyTypedData we don't send any extra request)\n  //\n  if (sig.endsWith(ERC6492_DETECTION_SUFFIX)) {\n    try {\n      return (\n        '0x01' ===\n        (await provider.call({\n          data: concat([\n            '0x60806040523480156200001157600080fd5b50604051620007003803806200070083398101604081905262000034916200056f565b6000620000438484846200004f565b9050806000526001601ff35b600080846001600160a01b0316803b806020016040519081016040528181526000908060200190933c90507f6492649264926492649264926492649264926492649264926492649264926492620000a68462000451565b036200021f57600060608085806020019051810190620000c79190620005ce565b8651929550909350915060000362000192576000836001600160a01b031683604051620000f5919062000643565b6000604051808303816000865af19150503d806000811462000134576040519150601f19603f3d011682016040523d82523d6000602084013e62000139565b606091505b5050905080620001905760405162461bcd60e51b815260206004820152601e60248201527f5369676e617475726556616c696461746f723a206465706c6f796d656e74000060448201526064015b60405180910390fd5b505b604051630b135d3f60e11b808252906001600160a01b038a1690631626ba7e90620001c4908b90869060040162000661565b602060405180830381865afa158015620001e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200020891906200069d565b6001600160e01b031916149450505050506200044a565b805115620002b157604051630b135d3f60e11b808252906001600160a01b03871690631626ba7e9062000259908890889060040162000661565b602060405180830381865afa15801562000277573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200029d91906200069d565b6001600160e01b031916149150506200044a565b8251604114620003195760405162461bcd60e51b815260206004820152603a6024820152600080516020620006e083398151915260448201527f3a20696e76616c6964207369676e6174757265206c656e677468000000000000606482015260840162000187565b620003236200046b565b506020830151604080850151855186939260009185919081106200034b576200034b620006c9565b016020015160f81c9050601b81148015906200036b57508060ff16601c14155b15620003cf5760405162461bcd60e51b815260206004820152603b6024820152600080516020620006e083398151915260448201527f3a20696e76616c6964207369676e617475726520762076616c75650000000000606482015260840162000187565b6040805160008152602081018083528a905260ff83169181019190915260608101849052608081018390526001600160a01b038a169060019060a0016020604051602081039080840390855afa1580156200042e573d6000803e3d6000fd5b505050602060405103516001600160a01b031614955050505050505b9392505050565b60006020825110156200046357600080fd5b508051015190565b60405180606001604052806003906020820280368337509192915050565b6001600160a01b03811681146200049f57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620004d5578181015183820152602001620004bb565b50506000910152565b600082601f830112620004f057600080fd5b81516001600160401b03808211156200050d576200050d620004a2565b604051601f8301601f19908116603f01168101908282118183101715620005385762000538620004a2565b816040528381528660208588010111156200055257600080fd5b62000565846020830160208901620004b8565b9695505050505050565b6000806000606084860312156200058557600080fd5b8351620005928162000489565b6020850151604086015191945092506001600160401b03811115620005b657600080fd5b620005c486828701620004de565b9150509250925092565b600080600060608486031215620005e457600080fd5b8351620005f18162000489565b60208501519093506001600160401b03808211156200060f57600080fd5b6200061d87838801620004de565b935060408601519150808211156200063457600080fd5b50620005c486828701620004de565b6000825162000657818460208701620004b8565b9190910192915050565b828152604060208201526000825180604084015262000688816060850160208701620004b8565b601f01601f1916919091016060019392505050565b600060208284031215620006b057600080fd5b81516001600160e01b0319811681146200044a57600080fd5b634e487b7160e01b600052603260045260246000fdfe5369676e617475726556616c696461746f72237265636f7665725369676e6572',\n            new AbiCoder().encode(\n              ['address', 'bytes32', 'bytes'],\n              [address, arrayify(hash), sig]\n            )\n          ])\n        }))\n      );\n    } catch (error) {\n      return false;\n    }\n  }\n\n  // Handle EIP-1271\n  if (await verifyDefault(address, sig, hash, provider)) return true;\n  return await verifyOldVersion(address, sig, hash, provider);\n}\n\nasync function verifyDefault(\n  address: string,\n  sig: string,\n  hash: string,\n  provider: StaticJsonRpcProvider\n): Promise<boolean> {\n  let returnValue: string;\n  const magicValue = '0x1626ba7e';\n  const abi =\n    'function isValidSignature(bytes32 _hash, bytes memory _signature) public view returns (bytes4 magicValue)';\n  try {\n    returnValue = await call(\n      provider,\n      [abi],\n      [address, 'isValidSignature', [arrayify(hash), sig]]\n    );\n  } catch (e: any) {\n    if (e.message.startsWith('missing revert data in call exception')) {\n      return false;\n    }\n    throw e;\n  }\n\n  return isEqual(returnValue, magicValue);\n}\n\nasync function verifyOldVersion(\n  address: string,\n  sig: string,\n  hash: string,\n  provider: StaticJsonRpcProvider\n): Promise<boolean> {\n  const magicValue = '0x20c13b0b';\n  const abi =\n    'function isValidSignature(bytes _hash, bytes memory _signature) public view returns (bytes4 magicValue)';\n\n  const returnValue = await call(\n    provider,\n    [abi],\n    [address, 'isValidSignature', [arrayify(hash), sig]]\n  );\n  return isEqual(returnValue, magicValue);\n}\n", "import * as starknet from './starknet';\nimport * as evm from './evm';\nimport { isEvmAddress, isStarknetAddress } from '../utils';\nimport type { StarkNetType } from 'starknet';\nimport type { TypedDataField } from '@ethersproject/abstract-signer';\nimport type { ProviderOptions } from '../utils/provider';\n\nexport type SignaturePayload = {\n  domain: Record<string, string | number>;\n  types: Record<string, StarkNetType[] | TypedDataField[]>;\n  primaryType?: string;\n  message: Record<string, any>;\n};\n\nexport function getHash(data: SignaturePayload, address?: string): string {\n  const networkType = starknet.isStarknetMessage(data) ? starknet : evm;\n\n  return networkType.getHash(data, address as string);\n}\n\nexport async function verify(\n  address: string,\n  sig: string | string[],\n  data: SignaturePayload,\n  network = '1',\n  options: ProviderOptions = {}\n): Promise<boolean> {\n  if (!isStarknetAddress(address) && !isEvmAddress(address)) {\n    throw new Error('Invalid address');\n  }\n\n  const networkType = starknet.isStarknetMessage(data) ? starknet : evm;\n\n  return await networkType.default(\n    address,\n    sig as any,\n    data,\n    network as any,\n    options\n  );\n}\n", "[\n  \"snapshot.4everland.link\",\n  \"ipfs.io\",\n  \"ipfs.fleek.co\",\n  \"gateway.pinata.cloud\",\n  \"dweb.link\",\n  \"ipfs.infura.io\"\n]\n", "{\n  \"1\": {\n    \"key\": \"1\",\n    \"name\": \"Ethereum\",\n    \"chainId\": 1,\n    \"network\": \"homestead\",\n    \"multicall\": \"0xeefba1e63905ef1d7acba5a8513c70307c1ce441\",\n    \"ensResolvers\": [\n      \"0x231b0Ee14048e9dCcD1d247744d114a4EB5E8E63\",\n      \"0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41\"\n    ],\n    \"ensNameWrapper\": \"0xD4416b13d2b3a9aBae7AcD5D6C2BbDBE25686401\",\n    \"ensSubgraph\": \"https://subgrapher.snapshot.org/subgraph/arbitrum/5XqPmWe6gjyrJtFn9cLy237i4cWw2j9HcUJEXsP5qGtH\",\n    \"rpc\": [\n      \"https://rpc.ankr.com/eth\",\n      {\n        \"url\": \"https://api-geth-archive.ankr.com\",\n        \"user\": \"balancer_user\",\n        \"password\": \"balancerAnkr20201015\"\n      },\n      \"https://speedy-nodes-nyc.moralis.io/b9aed21e7bb7bdeb35972c9a/eth/mainnet/archive\",\n      \"https://apis.ankr.com/e62bc219f9c9462b8749defe472d2dc5/6106d4a3ec1d1bcc87ec72158f8fd089/eth/archive/main\",\n      \"https://eth-archival.gateway.pokt.network/v1/5f76124fb90218002e9ce985\",\n      \"https://eth-mainnet.alchemyapi.io/v2/4bdDVB5QAaorY2UE-GBUbM2yQB3QJqzv\"\n    ],\n    \"light\": [\n      \"https://cloudflare-eth.com\"\n    ],\n    \"ws\": [\n      \"wss://eth-mainnet.ws.alchemyapi.io/v2/4bdDVB5QAaorY2UE-GBUbM2yQB3QJqzv\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://etherscan.io\",\n      \"apiUrl\": \"https://api.etherscan.io\"\n    },\n    \"start\": 7929876,\n    \"logo\": \"ipfs://bafkreid7ndxh6y2ljw2jhbisodiyrhcy2udvnwqgon5wgells3kh4si5z4\"\n  },\n  \"8\": {\n    \"key\": \"8\",\n    \"name\": \"Ubiq\",\n    \"chainId\": 8,\n    \"network\": \"Ubiq\",\n    \"multicall\": \"0x6668750957e4083725926B71C41bDF1434C73262\",\n    \"rpc\": [\n      \"https://rpc.octano.dev\"\n    ],\n    \"ws\": [\n      \"wss://ws.octano.dev\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://ubiqscan.io\"\n    },\n    \"start\": 1,\n    \"logo\": \"ipfs://Qmec3HLoN4QhwZAhw4XTi2aN8Wwmcko5hHN22sHARzb9tw\"\n  },\n  \"10\": {\n    \"key\": \"10\",\n    \"name\": \"Optimism\",\n    \"chainId\": 10,\n    \"network\": \"Optimism mainnet\",\n    \"multicall\": \"0x35A6Cdb2C9AD4a45112df4a04147EB07dFA01aB7\",\n    \"rpc\": [\n      \"https://opt-mainnet.g.alchemy.com/v2/JzmIL4Q3jBj7it2duxLFeuCa9Wobmm7D\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://optimistic.etherscan.io\",\n      \"apiUrl\": \"https://api-optimistic.etherscan.io\"\n    },\n    \"start\": 657806,\n    \"logo\": \"ipfs://QmfF4kwhGL8QosUXvgq2KWCmavhKBvwD6kbhs7L4p5ZAWb\"\n  },\n  \"19\": {\n    \"key\": \"19\",\n    \"name\": \"Songbird Canary-Network\",\n    \"shortName\": \"Songbird\",\n    \"chainId\": 19,\n    \"network\": \"songbird\",\n    \"multicall\": \"0x17032Ea9c3a13Ed337665145364c0d2aD1108c91\",\n    \"rpc\": [\n      \"https://songbird-api.flare.network/ext/C/rpc\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://songbird-explorer.flare.network\"\n    },\n    \"start\": 21807126,\n    \"logo\": \"ipfs://QmXyvnrZY8FUxSULfnKKA99sAEkjAHtvhRx5WeHixgaEdu\"\n  },\n  \"24\": {\n    \"key\": \"24\",\n    \"name\": \"KardiaChain Mainnet\",\n    \"shortName\": \"KAI\",\n    \"chainId\": 24,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xd9c92F2287B7802A37eC9BEce96Aa65fb5f31E1b\",\n    \"rpc\": [\n      \"https://kai-internal.kardiachain.io\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://explorer.kardiachain.io\"\n    },\n    \"start\": 8260245,\n    \"logo\": \"ipfs://bafkreig73yfyqzbxydv6e3dbj5nks3f57px2iez7tywayey4rilfhhrr34\"\n  },\n  \"25\": {\n    \"key\": \"25\",\n    \"name\": \"Cronos\",\n    \"shortName\": \"Cronos\",\n    \"chainId\": 25,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x6F522a3982e8F9A50A2EDc9E46ed1A3aE2B3FD3a\",\n    \"rpc\": [\n      \"https://evm-cronos.crypto.org\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://cronos.crypto.org/explorer\"\n    },\n    \"start\": 4067,\n    \"logo\": \"ipfs://QmfSJbtirJoa3Pt7o5Fdm85wbyw9V1hpzqLr5PQbdnfsAj\"\n  },\n  \"30\": {\n    \"key\": \"30\",\n    \"name\": \"RSK\",\n    \"chainId\": 30,\n    \"network\": \"rsk mainnet\",\n    \"multicall\": \"0x4eeebb5580769ba6d26bfd07be636300076d1831\",\n    \"rpc\": [\n      \"https://public-node.rsk.co\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://explorer.rsk.co\"\n    },\n    \"start\": 2516442,\n    \"logo\": \"ipfs://QmXTwpE1SqoNZmyY4c3fYWy6qUgQELsyWKbgJo2Pg6K6V9\"\n  },\n  \"46\": {\n    \"key\": \"46\",\n    \"name\": \"Darwinia Network\",\n    \"shortName\": \"Darwinia\",\n    \"chainId\": 46,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x67f9ae42EaA9a8aBf065D60ec6Ab3C1A11370607\",\n    \"rpc\": [\n      \"https://rpc.darwinia.network\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://darwinia.subscan.io\"\n    },\n    \"start\": 141853,\n    \"logo\": \"ipfs://bafkreicf55maidhx46pyu3mwsshlr43xbewr6tkckkonh4nesbkp7krwkm\"\n  },\n  \"56\": {\n    \"key\": \"56\",\n    \"name\": \"BNB Smart Chain\",\n    \"shortName\": \"BSC\",\n    \"chainId\": 56,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x1ee38d535d541c55c9dae27b12edf090c608e6fb\",\n    \"rpc\": [\n      \"https://speedy-nodes-nyc.moralis.io/b9aed21e7bb7bdeb35972c9a/bsc/mainnet/archive\",\n      \"https://rpc.ankr.com/bsc\",\n      \"https://bsc.getblock.io/mainnet/?api_key=91f8195f-bf46-488f-846a-73d6853790e7\",\n      \"https://bsc-private-dataseed1.nariox.org\",\n      \"https://bsc-dataseed1.ninicoin.io\",\n      \"https://bsc-dataseed1.binance.org\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://bscscan.com\"\n    },\n    \"start\": 461230,\n    \"logo\": \"ipfs://bafkreibll4la7wqerzs7zwxjne2j7ayynbg2wlenemssoahxxj5rbt6c64\"\n  },\n  \"61\": {\n    \"key\": \"61\",\n    \"name\": \"Ethereum Classic\",\n    \"shortName\": \"Ethereum Classic\",\n    \"chainId\": 61,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x51be3a92C56ae7E207C5b5Fd87F7798Ce82C1AC2\",\n    \"rpc\": [\n      \"https://www.ethercluster.com/etc\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://blockscout.com/etc/mainnet\"\n    },\n    \"start\": 13307544,\n    \"logo\": \"ipfs://QmVegc28DvA7LjKUFysab81c9BSuN4wQVDQkRXyAtuEBis\"\n  },\n  \"66\": {\n    \"key\": \"66\",\n    \"name\": \"OKExChain\",\n    \"shortName\": \"OEC Mainnet\",\n    \"chainId\": 66,\n    \"network\": \"oec mainnet\",\n    \"multicall\": \"0x6EB187d8197Ac265c945b69f3c3064A6f3831866\",\n    \"rpc\": [\n      \"https://exchainrpc.okex.org\"\n    ],\n    \"ws\": [\n      \"wss://exchainws.okex.org:8443\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://www.oklink.com/okexchain\"\n    },\n    \"start\": 5076543,\n    \"logo\": \"ipfs://Qmd7dKnNwHRZ4HRCbCXUbkNV7gP28fGqPdjbHtjRtT9sQF\"\n  },\n  \"75\": {\n    \"key\": \"75\",\n    \"name\": \"Decimal\",\n    \"shortName\": \"mainnet\",\n    \"chainId\": 75,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x949d1A0757803C51F2EfFFEb5472C861A898B8E8\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://explorer.decimalchain.com\"\n    },\n    \"start\": 16031065,\n    \"logo\": \"ipfs://bafkreihkdhbce5rkogl63xegaarlirjrvbfarxbtbf5mqme3s5grvbjyxm\"\n  },\n  \"81\": {\n    \"key\": \"81\",\n    \"name\": \"Shibuya Network\",\n    \"shortName\": \"Shibuya\",\n    \"chainId\": 81,\n    \"network\": \"testnet\",\n    \"testnet\": true,\n    \"multicall\": \"0x3E90A35839ff0Aa32992d33d861f24dC95BBf74d\",\n    \"rpc\": [\n      \"https://rpc.shibuya.astar.network:8545\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://blockscout.com/shibuya\"\n    },\n    \"start\": 856303,\n    \"logo\": \"ipfs://QmZLQVsUqHBDXutu6ywTvcYXDZG2xBstMfHkfJSzUNpZsc\"\n  },\n  \"82\": {\n    \"key\": \"82\",\n    \"name\": \"Meter\",\n    \"shortName\": \"Meter\",\n    \"chainId\": 82,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x579De77CAEd0614e3b158cb738fcD5131B9719Ae\",\n    \"rpc\": [\n      \"https://rpc.meter.io\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://scan.meter.io\"\n    },\n    \"start\": 4992871,\n    \"logo\": \"ipfs://QmSZvT9w9eUDvV1YVaq3BKKEbubtNVqu1Rin44FuN4wz11\"\n  },\n  \"97\": {\n    \"key\": \"97\",\n    \"name\": \"BNB Smart Chain Testnet\",\n    \"shortName\": \"BSC Testnet\",\n    \"chainId\": 97,\n    \"network\": \"testnet\",\n    \"testnet\": true,\n    \"multicall\": \"0x8b54247c6BAe96A6ccAFa468ebae96c4D7445e46\",\n    \"rpc\": [\n      \"https://data-seed-prebsc-1-s1.binance.org:8545\",\n      \"https://speedy-nodes-nyc.moralis.io/f2963e29bec0de5787da3164/bsc/testnet/archive\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://testnet.bscscan.com\"\n    },\n    \"start\": 3599656,\n    \"logo\": \"ipfs://bafkreibll4la7wqerzs7zwxjne2j7ayynbg2wlenemssoahxxj5rbt6c64\"\n  },\n  \"100\": {\n    \"key\": \"100\",\n    \"name\": \"Gnosis Chain\",\n    \"shortName\": \"xDAI\",\n    \"chainId\": 100,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xb5b692a88bdfc81ca69dcb1d924f59f0413a602a\",\n    \"rpc\": [\n      \"https://gno.getblock.io/mainnet/6c1d1e6e-75d9-452f-a863-a694bff93d5c/\",\n      \"https://xdai-archive.blockscout.com\",\n      \"https://poa-xdai.gateway.pokt.network/v1/5f76124fb90218002e9ce985\",\n      \"https://rpc.gnosischain.com\"\n    ],\n    \"light\": [\n      \"https://rpc.gnosischain.com\"\n    ],\n    \"ws\": [\n      \"wss://rpc.xdaichain.com/wss\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://gnosis.blockscout.com\"\n    },\n    \"start\": 4108192,\n    \"logo\": \"ipfs://QmZeiy8Ax4133wzxUQM9ky8z5XFVf6YLFjJMmTWbWVniZR\"\n  },\n  \"108\": {\n    \"key\": \"108\",\n    \"name\": \"Thundercore\",\n    \"chainId\": 108,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x3017086deef56679e267f67f66c4415109b7a97f\",\n    \"rpc\": [\n      \"https://mainnet-rpc.thundercore.com/archived/SNAPSHOTEuR82a75fLYA\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://viewblock.io/thundercore\"\n    },\n    \"start\": 94425385,\n    \"logo\": \"ipfs://bafkreifc5z5vtvqx2luzgateyvoocwpd2ifv2hwufxdnyl2a767wa6icli\"\n  },\n  \"122\": {\n    \"key\": \"122\",\n    \"name\": \"Fuse\",\n    \"shortName\": \"Fuse\",\n    \"chainId\": 122,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x7a59441fb06666F6d2D766393d876945D06a169c\",\n    \"rpc\": [\n      \"https://explorer-node.fuse.io/\",\n      \"https://oefusefull1.liquify.info/\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://explorer.fuse.io\"\n    },\n    \"start\": 11923459,\n    \"logo\": \"ipfs://QmXjWb64nako7voaVEifgdjAbDbswpTY8bghsiHpv8yWtb\"\n  },\n  \"137\": {\n    \"key\": \"137\",\n    \"name\": \"Polygon PoS\",\n    \"shortName\": \"Polygon\",\n    \"chainId\": 137,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xCBca837161be50EfA5925bB9Cc77406468e76751\",\n    \"rpc\": [\n      \"https://rpc.ankr.com/polygon\",\n      \"https://speedy-nodes-nyc.moralis.io/b9aed21e7bb7bdeb35972c9a/polygon/mainnet/archive\",\n      \"https://speedy-nodes-nyc.moralis.io/f2963e29bec0de5787da3164/polygon/mainnet/archive\",\n      \"https://rpc-mainnet.maticvigil.com/v1/1cfd7598e5ba6dcf0b4db58e8be484badc6ea08e\"\n    ],\n    \"ws\": [\n      \"wss://ws-mainnet.matic.network\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://polygonscan.com\",\n      \"apiUrl\": \"https://api.polygonscan.com\"\n    },\n    \"start\": 9834491,\n    \"logo\": \"ipfs://bafkreihgr7zy7vi5kqddybfaezwuhvssg57qluwmyan4qq7l57nr7w7wey\"\n  },\n  \"144\": {\n    \"key\": \"144\",\n    \"name\": \"PHI Network\",\n    \"shortName\": \"PHI\",\n    \"chainId\": 144,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xc2f41B404a6757863AAeF49ff93039421acCd630\",\n    \"rpc\": [\n      \"https://connect.phi.network\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://phiscan.com\"\n    },\n    \"start\": 360030,\n    \"logo\": \"ipfs://bafkreid6pm3mic7izp3a6zlfwhhe7etd276bjfsq2xash6a4s2vmcdf65a\"\n  },\n  \"148\": {\n    \"key\": \"148\",\n    \"name\": \"ShimmerEVM\",\n    \"shortName\": \"ShimmerEVM\",\n    \"chainId\": 148,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://explorer.evm.shimmer.network/\"\n    },\n    \"start\": 1290,\n    \"logo\": \"ipfs://bafkreib4xhbgbhrwkmizp4d4nz3wzbpyhdm6wpz2v2pbkk7jxsgg3hdt74\"\n  },\n  \"169\": {\n    \"key\": \"169\",\n    \"name\": \"Manta Pacific\",\n    \"shortName\": \"Manta\",\n    \"chainId\": 169,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://www.oklink.com/manta\"\n    },\n    \"start\": 332890,\n    \"logo\": \"ipfs://bafkreibbrwgwdcfh755dqh4ndta6tja77qbaa36bfv4pstub6prhhore7a\"\n  },\n  \"204\": {\n    \"key\": \"204\",\n    \"name\": \"opBNB\",\n    \"shortName\": \"mainnet\",\n    \"chainId\": 204,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"http://opbnbscan.com/\"\n    },\n    \"start\": 512881,\n    \"logo\": \"ipfs://bafkreibll4la7wqerzs7zwxjne2j7ayynbg2wlenemssoahxxj5rbt6c64\"\n  },\n  \"246\": {\n    \"key\": \"246\",\n    \"name\": \"Energy Web Chain\",\n    \"shortName\": \"EWC\",\n    \"chainId\": 246,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x0767F26d0D568aB61A98b279C0b28a4164A6f05e\",\n    \"rpc\": [\n      \"https://voting-rpc.carbonswap.exchange\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://explorer.energyweb.org\"\n    },\n    \"start\": 12086501,\n    \"logo\": \"ipfs://Qmai7AGHgs8NpeGeXgbMZz7pS2i4kw44qubCJYGrZW2f3a\"\n  },\n  \"250\": {\n    \"key\": \"250\",\n    \"name\": \"Fantom Opera\",\n    \"shortName\": \"fantom\",\n    \"chainId\": 250,\n    \"network\": \"Mainnet\",\n    \"multicall\": \"0x7f6A10218264a22B4309F3896745687E712962a0\",\n    \"rpc\": [\n      \"https://rpc.ankr.com/fantom\",\n      \"https://rpc.ftm.tools\",\n      \"https://rpcapi.fantom.network\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://ftmscan.com\"\n    },\n    \"start\": 2497732,\n    \"logo\": \"ipfs://QmVEgNeQDKnXygeGxfY9FywZpNGQu98ktZtRJ9bToYF6g7\"\n  },\n  \"252\": {\n    \"key\": \"252\",\n    \"name\": \"Fraxtal\",\n    \"shortName\": \"mainnet\",\n    \"chainId\": 252,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://fraxscan.com\"\n    },\n    \"start\": 1,\n    \"logo\": \"ipfs://bafkreieflj4wq6tx7k5kq47z3xnsrdrn2xgm4bxa3uovrnndcb2vqqwlyu\"\n  },\n  \"269\": {\n    \"key\": \"269\",\n    \"name\": \"High Performance Blockchain\",\n    \"shortName\": \"HPB\",\n    \"chainId\": 269,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x67D0f263aef2F6167FA77353695D75b582Ff4Bca\",\n    \"rpc\": [\n      \"https://hpbnode.com\"\n    ],\n    \"ws\": [\n      \"wss://ws.hpbnode.com\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://hscan.org\"\n    },\n    \"start\": 13960096,\n    \"logo\": \"ipfs://QmU7f1MyRz8rLELFfypnWZQjGbDGYgZtC9rjw47jYMYrnu\"\n  },\n  \"300\": {\n    \"key\": \"300\",\n    \"name\": \"zkSync Sepolia Testnet\",\n    \"shortName\": \"testnet\",\n    \"chainId\": 300,\n    \"network\": \"testnet\",\n    \"multicall\": \"0xF9cda624FBC7e059355ce98a31693d299FACd963\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://sepolia.explorer.zksync.dev/\"\n    },\n    \"start\": 2292,\n    \"logo\": \"ipfs://bafkreih6y7ri7h667cwxe5miisxghfheiidtbw2747y75stoxt3gp3a2yy\",\n    \"testnet\": true\n  },\n  \"314\": {\n    \"key\": \"314\",\n    \"name\": \"Filecoin\",\n    \"shortName\": \"mainnet\",\n    \"chainId\": 314,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://filfox.io\"\n    },\n    \"start\": 3328594,\n    \"logo\": \"ipfs://bafybeibyvjfmk6aqlfdrczvth55jkmnoadtrch7ht3rdmvqmy2bfxynecm\"\n  },\n  \"321\": {\n    \"key\": \"321\",\n    \"name\": \"KCC\",\n    \"shortName\": \"KCC\",\n    \"chainId\": 321,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xa64D6AFb48225BDA3259246cfb418c0b91de6D7a\",\n    \"rpc\": [\n      \"https://rpc-mainnet.kcc.network\"\n    ],\n    \"ws\": [\n      \"wss://rpc-ws-mainnet.kcc.network\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://explorer.kcc.io\"\n    },\n    \"start\": 1487453,\n    \"logo\": \"ipfs://QmRdzYGhFRG8QLzMJahHrw3vETE2YZ9sywQbEkenSjKEvb\"\n  },\n  \"324\": {\n    \"key\": \"324\",\n    \"name\": \"zkSync Era\",\n    \"shortName\": \"zkSync-era\",\n    \"chainId\": 324,\n    \"network\": \"zkSync Era Mainnet\",\n    \"multicall\": \"0xF9cda624FBC7e059355ce98a31693d299FACd963\",\n    \"rpc\": [\n      \"https://mainnet.era.zksync.io\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://explorer.zksync.io/\"\n    },\n    \"start\": 3908235,\n    \"logo\": \"ipfs://bafkreih6y7ri7h667cwxe5miisxghfheiidtbw2747y75stoxt3gp3a2yy\"\n  },\n  \"336\": {\n    \"key\": \"336\",\n    \"name\": \"Shiden Network\",\n    \"shortName\": \"Shiden\",\n    \"chainId\": 336,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x3E90A35839ff0Aa32992d33d861f24dC95BBf74d\",\n    \"rpc\": [\n      \"https://rpc.shiden.astar.network:8545\",\n      \"https://shiden.api.onfinality.io/public\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://blockscout.com/shiden\"\n    },\n    \"start\": 1170016,\n    \"logo\": \"ipfs://QmcqGQE4Sk73zXc3e91TUFFefKBVeaNgbxV141XkSNE4xj\"\n  },\n  \"369\": {\n    \"key\": \"369\",\n    \"name\": \"Pulsechain\",\n    \"shortName\": \"Pulsechain\",\n    \"chainId\": 369,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xdbdd0FD8B16F0092f306392b699D7fbddaA9011B\",\n    \"rpc\": [\n      \"https://rpc.pulsechain.com\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://scan.pulsechain.com/\"\n    },\n    \"start\": 17657774,\n    \"logo\": \"ipfs://QmWUsiEWdejtHZ9B9981TYXn7Ds8C7fkB1S4h5rP3kCCZR\"\n  },\n  \"416\": {\n    \"key\": \"416\",\n    \"name\": \"SX Network\",\n    \"shortName\": \"SX\",\n    \"chainId\": 416,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x834a005DDCF990Ba1a79f259e840e58F2D14F49a\",\n    \"rpc\": [\n      \"https://rpc.sx.technology\"\n    ],\n    \"ws\": [\n      \"wss://rpc.sx.technology/ws\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://explorer.sx.technology\"\n    },\n    \"start\": 2680605,\n    \"logo\": \"ipfs://QmSXLXqyr2H6Ja5XrmznXbWTEvF2gFaL8RXNXgyLmDHjAF\"\n  },\n  \"592\": {\n    \"key\": \"592\",\n    \"name\": \"Astar Network\",\n    \"shortName\": \"Astar\",\n    \"chainId\": 592,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x3E90A35839ff0Aa32992d33d861f24dC95BBf74d\",\n    \"rpc\": [\n      \"https://astar.api.onfinality.io/public\",\n      \"https://rpc.astar.network:8545\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://blockscout.com/astar\"\n    },\n    \"start\": 366482,\n    \"logo\": \"ipfs://QmZLQVsUqHBDXutu6ywTvcYXDZG2xBstMfHkfJSzUNpZsc\"\n  },\n  \"813\": {\n    \"key\": \"813\",\n    \"name\": \"Qitmeer\",\n    \"shortName\": \"MEER\",\n    \"chainId\": 813,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x55034b2cF530ae3A8fC1e2e4523F58496796610F\",\n    \"rpc\": [\n      \"https://evm-dataseed1.meerscan.io\",\n      \"https://evm-dataseed.meerscan.com\",\n      \"https://evm-dataseed2.meerscan.io\",\n      \"https://evm-dataseed3.meerscan.io\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://evm.meerscan.io\"\n    },\n    \"start\": 43317,\n    \"logo\": \"ipfs://QmXvum7SNVaAqAc2jNzR1NpNZN1GGvNaKWydg8a1GEDQ7y\"\n  },\n  \"841\": {\n    \"key\": \"841\",\n    \"name\": \"Taraxa\",\n    \"shortName\": \"841\",\n    \"chainId\": 841,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xFCe7a3121B42664AaD145712e1c2Bf2e38f60AA1\",\n    \"rpc\": [\n      \"https://rpc.mainnet.taraxa.io\"\n    ],\n    \"ws\": [\n      \"wss://ws.mainnet.taraxa.io\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://mainnet.explorer.taraxa.io\"\n    },\n    \"start\": 1515906,\n    \"logo\": \"ipfs://Qmcc6ZCAGESMzZzoj5LsTVcCo2E35x3Ydk71uPJyov6Mwx\"\n  },\n  \"888\": {\n    \"key\": \"888\",\n    \"name\": \"Wanchain\",\n    \"chainId\": 888,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xba5934ab3056fca1fa458d30fbb3810c3eb5145f\",\n    \"rpc\": [\n      \"https://gwan-ssl.wandevs.org:56891\"\n    ],\n    \"ws\": [\n      \"wss://api.wanchain.org:8443/ws/v3/ddd16770c68f30350a21114802d5418eafe039b722de52b488e7eee1ee2cd73f\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://www.wanscan.org\"\n    },\n    \"start\": 11302663,\n    \"logo\": \"ipfs://QmewFFN44rkxESFsHG8edaLt1znr62hjvZhGynfXqruzX3\"\n  },\n  \"1001\": {\n    \"key\": \"1001\",\n    \"name\": \"Klaytn Baobab Testnet\",\n    \"shortName\": \"Boabab\",\n    \"chainId\": 1001,\n    \"network\": \"testnet\",\n    \"testnet\": true,\n    \"multicall\": \"0x40643B8Aeaaca0b87Ea1A1E596e64a0e14B1d244\",\n    \"rpc\": [\n      \"https://archive-en.baobab.klaytn.net\"\n    ],\n    \"ws\": [\n      \"wss://archive-en.baobab.klaytn.net/ws\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://baobab.scope.klaytn.com\"\n    },\n    \"start\": 87232478,\n    \"logo\": \"ipfs://QmYACyZcidcFtMo4Uf9H6ZKUxTP2TQPjGzNjcUjqYa64dt\"\n  },\n  \"1072\": {\n    \"key\": \"1072\",\n    \"name\": \"Shimmer EVM Testnet\",\n    \"shortName\": \"ShimmerEVM\",\n    \"chainId\": 1072,\n    \"network\": \"testnet\",\n    \"testnet\": true,\n    \"multicall\": \"0x751d21047C116413895c259f3f305e38C10B7cF6\",\n    \"rpc\": [\n      \"https://archive.evm.testnet.shimmer.network/v1/chains/rms1pr75wa5xuepg2hew44vnr28wz5h6n6x99zptk2g68sp2wuu2karywgrztx3/evm\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://explorer.evm.testnet.shimmer.network/\"\n    },\n    \"start\": 10614,\n    \"logo\": \"ipfs://bafkreihtwfwrue7klzedwx4rqlk6agklz4lbbk7owsyw6xzn6c2m4t5tgy\"\n  },\n  \"1088\": {\n    \"key\": \"1088\",\n    \"name\": \"Metis\",\n    \"shortName\": \"metis\",\n    \"chainId\": 1088,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xc39aBB6c4451089dE48Cffb013c39d3110530e5C\",\n    \"rpc\": [\n      \"https://andromeda.metis.io/?owner=1088\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://andromeda-explorer.metis.io\"\n    },\n    \"start\": 451,\n    \"logo\": \"ipfs://bafkreiaqr4atnjpdnk3c4vu4377ai7bzqpgaefefbl5j5imfsvr4puimtu\"\n  },\n  \"1101\": {\n    \"key\": \"1101\",\n    \"name\": \"Polygon zkEVM\",\n    \"shortName\": \"mainnet\",\n    \"chainId\": 1101,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://zkevm.polygonscan.com\"\n    },\n    \"start\": 57746,\n    \"logo\": \"ipfs://bafkreibfiyvhqnme2vbxxfcku7qkxgjpkg6ywdkplxh4oxlkqsbznyorfm\"\n  },\n  \"1116\": {\n    \"key\": \"1116\",\n    \"name\": \"Core Chain\",\n    \"shortName\": \"Core\",\n    \"chainId\": 1116,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x024f0041b76B598c2A0a75004F8447FaF67BD004\",\n    \"rpc\": [\n      \"https://rpcar.coredao.org/\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://scan.coredao.org\"\n    },\n    \"start\": 853908,\n    \"logo\": \"ipfs://bafkreigjv5yb7uhlrryzib7j2f73nnwqan2tmfnwjdu26vkk365fyesoiu\"\n  },\n  \"1284\": {\n    \"key\": \"1284\",\n    \"name\": \"Moonbeam\",\n    \"shortName\": \"GLMR\",\n    \"chainId\": 1284,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x83e3b61886770de2F64AAcaD2724ED4f08F7f36B\",\n    \"rpc\": [\n      \"https://rpc.api.moonbeam.network\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://moonscan.io/\"\n    },\n    \"start\": 171135,\n    \"logo\": \"ipfs://QmWKTEK2pj5sBBbHnMHQbWgw6euVdBrk2Ligpi2chrWASk\"\n  },\n  \"1285\": {\n    \"key\": \"1285\",\n    \"name\": \"Moonriver (Kusama)\",\n    \"shortName\": \"Moonriver\",\n    \"chainId\": 1285,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x537004440ffFE1D4AE9F009031Fc2b0385FCA9F1\",\n    \"rpc\": [\n      \"https://rpc.api.moonriver.moonbeam.network\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://blockscout.moonriver.moonbeam.network\"\n    },\n    \"start\": 413539,\n    \"logo\": \"ipfs://QmXtgPesL87Ejhq2Y7yxsaPYpf4RcnoTYPJWPcv6iiYhoi\"\n  },\n  \"1287\": {\n    \"key\": \"1287\",\n    \"name\": \"Moonbase Alpha TestNet\",\n    \"shortName\": \"Moonbase\",\n    \"chainId\": 1287,\n    \"network\": \"testnet\",\n    \"testnet\": true,\n    \"multicall\": \"0xf09FD6B6FF3f41614b9d6be2166A0D07045A3A97\",\n    \"rpc\": [\n      \"https://rpc.testnet.moonbeam.network\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://moonbase-blockscout.testnet.moonbeam.network\"\n    },\n    \"start\": 859041,\n    \"logo\": \"ipfs://QmeGbNTU2Jqwg8qLTMGW8n8HSi2VdgCncAaeGzLx6gYnD7\"\n  },\n  \"1328\": {\n    \"key\": \"1328\",\n    \"name\": \"Sei atlantic testnet\",\n    \"shortName\": \"testnet\",\n    \"chainId\": 1328,\n    \"network\": \"testnet\",\n    \"multicall\": \"0xc454132B017b55b427f45078E335549A7124f5f7\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://seitrace.com\"\n    },\n    \"start\": 96978658,\n    \"logo\": \"ipfs://bafkreiammyt7uztbztqbcqv4bydnczsh2fqmnjf6jxj4xnskzzl6sjrigq\",\n    \"testnet\": true\n  },\n  \"1329\": {\n    \"key\": \"1329\",\n    \"name\": \"Sei\",\n    \"shortName\": \"mainnet\",\n    \"chainId\": 1329,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xe033Bed7cae4114Af84Be1e9F1CA7DEa07Dfe1Cf\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://seitrace.com/\"\n    },\n    \"start\": 79164574,\n    \"logo\": \"ipfs://bafkreiammyt7uztbztqbcqv4bydnczsh2fqmnjf6jxj4xnskzzl6sjrigq\"\n  },\n  \"1559\": {\n    \"key\": \"1559\",\n    \"name\": \"Tenet\",\n    \"shortName\": \"tenet\",\n    \"chainId\": 1559,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xcCB3F00bE353950E4C08501ac8Af48765EAAa738\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://tenetscan.io\"\n    },\n    \"start\": 944415,\n    \"logo\": \"ipfs://Qmc1gqjWTzNo4pyFSGtQuCu7kRSZZBUVybtTjHn2nNEEPA\"\n  },\n  \"1663\": {\n    \"key\": \"1663\",\n    \"name\": \"Horizen Gobi Testnet\",\n    \"shortName\": \"Gobi\",\n    \"chainId\": 1663,\n    \"network\": \"testnet\",\n    \"testnet\": true,\n    \"multicall\": \"0xC743e4910Bdd4e5aBacCA38F74cdA270281C5eef\",\n    \"rpc\": [\n      \"https://gobi-testnet.horizenlabs.io/ethv1\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://gobi-explorer.horizen.io\"\n    },\n    \"start\": 1,\n    \"logo\": \"ipfs://QmUYQdsnkUoiDiQ3WaWrtH7fsc5yQDC7kZJCHmC2qWPTPt\"\n  },\n  \"2000\": {\n    \"key\": \"2000\",\n    \"name\": \"Doge Chain\",\n    \"shortName\": \"dogechain\",\n    \"chainId\": 2000,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x6f9D3f3932B417bd4957585D236Cbc32b32C0BDc\",\n    \"rpc\": [\n      \"https://rpc.dogechain.dog\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://explorer.dogechain.dog\"\n    },\n    \"start\": 877115,\n    \"logo\": \"ipfs://bafkreigovfh3pinsdih777issfgaflwu2yjzroljs2642gbvwikcd3nm4i\"\n  },\n  \"2109\": {\n    \"key\": \"2109\",\n    \"name\": \"Exosama Network\",\n    \"shortName\": \"EXN\",\n    \"chainId\": 2109,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x2feFC828e2fEfdE0C9f7740919c6A9139F886067\",\n    \"rpc\": [\n      \"https://rpc.exosama.com\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://explorer.exosama.com\"\n    },\n    \"start\": 94085,\n    \"logo\": \"ipfs://QmaQxfwpXYTomUd24PMx5tKjosupXcm99z1jL1XLq9LWBS\"\n  },\n  \"2152\": {\n    \"key\": \"2152\",\n    \"name\": \"Findora\",\n    \"shortName\": \"Findora\",\n    \"chainId\": 2152,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xCF7D1e21CBe9bdEF235aef06C5d8051B3d4DF0f5\",\n    \"rpc\": [\n      \"https://archive.prod.findora.org:8545/\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://evm.findorascan.io\"\n    },\n    \"start\": 4219343,\n    \"logo\": \"ipfs://QmXkneyRB6HbHTHRLCZpZqSsawiyJY7b2kZ2V8ydvKYAgv\"\n  },\n  \"2192\": {\n    \"key\": \"2192\",\n    \"name\": \"SnaxChain\",\n    \"shortName\": \"mainnet\",\n    \"chainId\": 2192,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://explorer.snaxchain.io\"\n    },\n    \"start\": 1554893,\n    \"logo\": \"ipfs://bafkreibzz757piho2llzkbiszpvalf5k5hpmxcwhvrmgp7vpz2vp4vj7ly\"\n  },\n  \"2221\": {\n    \"key\": \"2221\",\n    \"name\": \"Kava Testnet\",\n    \"shortName\": \"testnet\",\n    \"chainId\": 2221,\n    \"network\": \"testnet\",\n    \"multicall\": \"0xc7193EFE367DF0C9349a1149F4E95A2A35604262\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://testnet.kavascan.com\"\n    },\n    \"start\": 6193104,\n    \"logo\": \"ipfs://bafkreibpfubharx32fjqkqbfdhygwdjb2khxdg6meaasrcxsgvowos26f4\",\n    \"testnet\": true\n  },\n  \"2222\": {\n    \"key\": \"2222\",\n    \"name\": \"Kava\",\n    \"shortName\": \"mainnet\",\n    \"chainId\": 2222,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://kavascan.com/\"\n    },\n    \"start\": 3661165,\n    \"logo\": \"ipfs://bafkreibpfubharx32fjqkqbfdhygwdjb2khxdg6meaasrcxsgvowos26f4\"\n  },\n  \"2400\": {\n    \"key\": \"2400\",\n    \"name\": \"TCG Verse\",\n    \"shortName\": \"TCGV\",\n    \"chainId\": 2400,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xceC65DEE0b5012F1b7321b2647681F997c7204FC\",\n    \"rpc\": [\n      \"https://rpc.tcgverse.xyz\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://explorer.tcgverse.xyz\"\n    },\n    \"start\": 57500,\n    \"logo\": \"ipfs://bafkreidg4wpewve5mdxrofneqblydkrjl3oevtgpdf3fk3z3vjqam6ocoe\"\n  },\n  \"2522\": {\n    \"key\": \"2522\",\n    \"name\": \"Fraxtal Testnet\",\n    \"shortName\": \"testnet\",\n    \"chainId\": 2522,\n    \"network\": \"testnet\",\n    \"multicall\": \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://holesky.fraxscan.com/\"\n    },\n    \"start\": 1,\n    \"logo\": \"ipfs://bafkreieflj4wq6tx7k5kq47z3xnsrdrn2xgm4bxa3uovrnndcb2vqqwlyu\",\n    \"testnet\": true\n  },\n  \"4200\": {\n    \"key\": \"4200\",\n    \"name\": \"Merlin\",\n    \"shortName\": \"merlin\",\n    \"chainId\": 4200,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x830E7E548F4D80947a40A7Cf3a2a53166a0C3980\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://scan.merlinchain.io\"\n    },\n    \"start\": 589494,\n    \"logo\": \"ipfs://bafkreicew2qv3m756m7xs2nrjezinghps7rlessrqjqetvox74w4hov2xe\"\n  },\n  \"4337\": {\n    \"key\": \"4337\",\n    \"name\": \"Beam\",\n    \"shortName\": \"Beam\",\n    \"chainId\": 4337,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x4956F15eFdc3dC16645e90Cc356eAFA65fFC65Ec\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://subnets.avax.network/beam/\"\n    },\n    \"start\": 1,\n    \"logo\": \"ipfs://QmaKRLxXPdeTsLx7MFLS3CJbhpSbResgoeL4fCgHB1mTsF\"\n  },\n  \"4689\": {\n    \"key\": \"4689\",\n    \"name\": \"IoTeX\",\n    \"shortName\": \"IoTeX\",\n    \"chainId\": 4689,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x9c8B105c94282CDB0F3ecF27e3cfA96A35c07be6\",\n    \"rpc\": [\n      \"https://babel-api.mainnet.iotex.io\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://iotexscan.io\"\n    },\n    \"start\": 11533283,\n    \"logo\": \"ipfs://QmNkr1UPcBYbvLp7d7Pk4eF3YCsHpaNkfusKZNtykL2EQC\"\n  },\n  \"5000\": {\n    \"key\": \"5000\",\n    \"name\": \"Mantle\",\n    \"chainId\": 5000,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n    \"rpc\": [\n      \"https://rpc.mantle.xyz\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://explorer.mantle.xyz\"\n    },\n    \"start\": 304717,\n    \"logo\": \"ipfs://bafkreidkucwfn4mzo2gtydrt2wogk3je5xpugom67vhi4h4comaxxjzoz4\"\n  },\n  \"5555\": {\n    \"key\": \"5555\",\n    \"name\": \"Chain Verse\",\n    \"shortName\": \"ChainVerse\",\n    \"chainId\": 5555,\n    \"network\": \"ChainVerse\",\n    \"multicall\": \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n    \"rpc\": [\n      \"https://rpc.chainverse.info\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://explorer.chainverse.info\"\n    },\n    \"start\": 6334180,\n    \"logo\": \"ipfs://QmQyJt28h4wN3QHPXUQJQYQqGiFUD77han3zibZPzHbitk\"\n  },\n  \"6102\": {\n    \"key\": \"6102\",\n    \"name\": \"Cascadia Testnet\",\n    \"shortName\": \"Cascadia\",\n    \"chainId\": 6102,\n    \"network\": \"testnet\",\n    \"multicall\": \"0x728989819bAD588F193563008E0a03E8cD6a3e4a\",\n    \"rpc\": [\n      \"https://testnet.cascadia.foundation\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://explorer.cascadia.foundation\"\n    },\n    \"testnet\": true,\n    \"start\": 370457,\n    \"logo\": \"ipfs://QmWkhZYhReYyaa5pQXj32hEGxoRcBqarFMcfQScELmjYQj\"\n  },\n  \"7332\": {\n    \"key\": \"7332\",\n    \"name\": \"Horizen EON\",\n    \"shortName\": \"EON\",\n    \"chainId\": 7332,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xC743e4910Bdd4e5aBacCA38F74cdA270281C5eef\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://eon-explorer.horizenlabs.io\"\n    },\n    \"start\": 85108,\n    \"logo\": \"ipfs://QmUYQdsnkUoiDiQ3WaWrtH7fsc5yQDC7kZJCHmC2qWPTPt\"\n  },\n  \"7341\": {\n    \"key\": \"7341\",\n    \"name\": \"Shyft\",\n    \"shortName\": \"Shyft\",\n    \"chainId\": 7341,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xceb10e9133D771cA93c8002Be527A465E85381a2\",\n    \"rpc\": [\n      \"https://rpc.shyft.network\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://bx.shyft.network\"\n    },\n    \"start\": 3673983,\n    \"logo\": \"ipfs://bafkreifwxnnfk6koabzmxgcxcwlrwt6b5gijdain2gyqee77q4ajfb7fu4\"\n  },\n  \"7560\": {\n    \"key\": \"7560\",\n    \"name\": \"Cyber\",\n    \"shortName\": \"mainnet\",\n    \"chainId\": 7560,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://cyberscan.co\"\n    },\n    \"start\": 1731707,\n    \"logo\": \"ipfs://bafkreifm2bbehoqpz4454o7gixnxfi6cgvqlxigqr3f6ipj7l2omtgfgnm\"\n  },\n  \"8217\": {\n    \"key\": \"8217\",\n    \"name\": \"Klaytn Cypress\",\n    \"shortName\": \"Cypress\",\n    \"chainId\": 8217,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x5f5f0d1b9ff8b3dcace308e39b13b203354906e9\",\n    \"rpc\": [\n      \"https://archive-en.cypress.klaytn.net\"\n    ],\n    \"ws\": [\n      \"wss://archive-en.cypress.klaytn.net/ws\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://scope.klaytn.com\"\n    },\n    \"start\": 91582357,\n    \"logo\": \"ipfs://QmYACyZcidcFtMo4Uf9H6ZKUxTP2TQPjGzNjcUjqYa64dt\"\n  },\n  \"8453\": {\n    \"key\": \"8453\",\n    \"name\": \"Base\",\n    \"shortName\": \"mainnet\",\n    \"chainId\": 8453,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xca11bde05977b3631167028862be2a173976ca11\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://basescan.org/\"\n    },\n    \"start\": 5022,\n    \"logo\": \"ipfs://QmaxRoHpxZd8PqccAynherrMznMufG6sdmHZLihkECXmZv\"\n  },\n  \"9001\": {\n    \"key\": \"9001\",\n    \"name\": \"Evmos Network\",\n    \"shortName\": \"Evmos\",\n    \"chainId\": 9001,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x37763d16f8dBf6F185368E0f256350cAb7E24b26\",\n    \"rpc\": [\n      \"https://eth.bd.evmos.org:8545\"\n    ],\n    \"ws\": [\n      \"wss://eth.bd.evmos.org:8546\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://escan.live\"\n    },\n    \"start\": 13959539,\n    \"logo\": \"ipfs://bafkreif4obrdoiretpozdd56seziywc6clha7wwkbldng3ovry2bpzly34\"\n  },\n  \"10000\": {\n    \"key\": \"10000\",\n    \"name\": \"smartBCH\",\n    \"shortName\": \"BCH\",\n    \"chainId\": 10000,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x1b38EBAd553f218e2962Cb1C0539Abb5d6A37774\",\n    \"rpc\": [\n      \"https://smartbch.greyh.at/\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://smartbch-explorer.web.app\"\n    },\n    \"start\": 268248,\n    \"logo\": \"ipfs://QmWG1p7om4hZ4Yi4uQvDpxg4si7qVYhtppGbcDGrhVFvMd\"\n  },\n  \"10243\": {\n    \"key\": \"10243\",\n    \"name\": \"Arthera Testnet\",\n    \"shortName\": \"Arthera_\",\n    \"chainId\": 10243,\n    \"network\": \"testnet\",\n    \"testnet\": true,\n    \"multicall\": \"0x27c7FC597aD2E81C4c1cA1769972f79DaF042Da7\",\n    \"rpc\": [\n      \"https://rpc-test.arthera.net\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://explorer-test.arthera.net\"\n    },\n    \"start\": 10523,\n    \"logo\": \"ipfs://QmYQp3e52KjkT4bYdAvB6ACEEpXs2D8DozsDitaADRY2Ak\"\n  },\n  \"13337\": {\n    \"key\": \"13337\",\n    \"name\": \"Beam Testnet\",\n    \"shortName\": \"testnet\",\n    \"chainId\": 13337,\n    \"network\": \"testnet\",\n    \"multicall\": \"0x9BF49b704EE2A095b95c1f2D4EB9010510c41C9E\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://subnets-test.avax.network/beam/\"\n    },\n    \"start\": 3,\n    \"logo\": \"ipfs://QmaKRLxXPdeTsLx7MFLS3CJbhpSbResgoeL4fCgHB1mTsF\",\n    \"testnet\": true\n  },\n  \"13371\": {\n    \"key\": \"13371\",\n    \"name\": \"Immutable zkEVM\",\n    \"shortName\": \"mainnet\",\n    \"chainId\": 13371,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://explorer.immutable.com\"\n    },\n    \"start\": 3680945,\n    \"logo\": \"ipfs://bafkreiepnhfv3hgexddjpyaeemxo3byhtxxit6t4zsponyczee6ddjqxwi\"\n  },\n  \"13473\": {\n    \"key\": \"13473\",\n    \"name\": \"Immutable zkEVM Testnet\",\n    \"shortName\": \"testnet\",\n    \"chainId\": 13473,\n    \"network\": \"testnet\",\n    \"multicall\": \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://explorer.testnet.immutable.com\"\n    },\n    \"start\": 5307209,\n    \"logo\": \"ipfs://bafkreiepnhfv3hgexddjpyaeemxo3byhtxxit6t4zsponyczee6ddjqxwi\",\n    \"testnet\": true\n  },\n  \"16718\": {\n    \"key\": \"16718\",\n    \"name\": \"AirDAO\",\n    \"chainId\": 16718,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x25e81aC81A8B03389D78CB45faB78353aB528574\",\n    \"rpc\": [\n      \"https://network-archive.ambrosus.io\"\n    ],\n    \"ws\": [\n      \"wss://network-archive.ambrosus.io/ws\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://airdao.io/explorer\"\n    },\n    \"start\": 22922566,\n    \"logo\": \"ipfs://QmSxXjvWng3Diz4YwXDV2VqSPgMyzLYBNfkjJcr7rzkxom\"\n  },\n  \"29548\": {\n    \"key\": \"29548\",\n    \"name\": \"MCH Verse\",\n    \"shortName\": \"mainnet\",\n    \"chainId\": 29548,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x1d39652386488CE1fE4254E105F5A42a04d43dB2\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://explorer.oasys.mycryptoheroes.net\"\n    },\n    \"start\": 27458402,\n    \"logo\": \"ipfs://QmZZnwR1y6cU1sare2TQmwqkNDLXQxD4GdPrmHLmUoPtbU\"\n  },\n  \"33111\": {\n    \"key\": \"33111\",\n    \"name\": \"Curtis\",\n    \"shortName\": \"apechain\",\n    \"chainId\": 33111,\n    \"network\": \"testnet\",\n    \"multicall\": \"0xc454132B017b55b427f45078E335549A7124f5f7\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://explorer.curtis.apechain.com\"\n    },\n    \"start\": 6661339,\n    \"logo\": \"ipfs://bafkreicljxttjq2xkgfwwpii5xegirgq2ctrnsjnzelxudjj33qzq65apu\",\n    \"testnet\": true\n  },\n  \"33139\": {\n    \"key\": \"33139\",\n    \"name\": \"ApeChain\",\n    \"shortName\": \"mainnet\",\n    \"chainId\": 33139,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://apechain.calderaexplorer.xyz/\"\n    },\n    \"start\": 20889,\n    \"logo\": \"ipfs://bafkreielbgcox2jsw3g6pqulqb7pyjgx7czjt6ahnibihaij6lozoy53w4\"\n  },\n  \"42161\": {\n    \"key\": \"42161\",\n    \"name\": \"Arbitrum One\",\n    \"chainId\": 42161,\n    \"network\": \"Arbitrum mainnet\",\n    \"multicall\": \"0x7A7443F8c577d537f1d8cD4a629d40a3148Dd7ee\",\n    \"rpc\": [\n      \"https://rpc.ankr.com/arbitrum\",\n      \"https://speedy-nodes-nyc.moralis.io/9e03baabdc27be2a35bdec4a/arbitrum/mainnet\",\n      \"https://arb-mainnet.g.alchemy.com/v2/JDvtNGwnHhTltIwfnxQocKwKkCTKA1DL\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://arbiscan.io\"\n    },\n    \"start\": 256508,\n    \"logo\": \"ipfs://QmWZ5SMRfvcK8tycsDqojQaSiKedgtVkS7CkZdxPgeCVsZ\"\n  },\n  \"42170\": {\n    \"key\": \"42170\",\n    \"name\": \"Arbitrum Nova\",\n    \"chainId\": 42170,\n    \"network\": \"Arbitrum Nova\",\n    \"multicall\": \"0x4E74EBd9CABff51cE9a43EFe059bA8c5A28E4A14\",\n    \"rpc\": [\n      \"https://nova.arbitrum.io/rpc\",\n      \"https://arbitrum-nova.public.blastapi.io\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://nova.arbiscan.io/\"\n    },\n    \"start\": 6006607,\n    \"logo\": \"ipfs://bafkreie5xsqt3mrrwu7v32qpmmctibhzhgxf4emfzzddsdhdlfsa7fmplu\"\n  },\n  \"42220\": {\n    \"key\": \"42220\",\n    \"name\": \"Celo\",\n    \"shortName\": \"Celo\",\n    \"chainId\": 42220,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xb8d0d2C1391eeB350d2Cd39EfABBaaEC297368D9\",\n    \"rpc\": [\n      \"https://celo.snapshot.org\",\n      \"https://forno.celo.org\",\n      \"https://celo-mainnet--rpc.datahub.figment.io/apikey/e892a66dc36e4d2d98a5d6406d609796/\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://explorer.celo.org\"\n    },\n    \"start\": 6599803,\n    \"logo\": \"ipfs://QmS2tVJ7rdJRe1NHXAi2L86yCbUwVVrmB2mHQeNdJxvQti\"\n  },\n  \"43113\": {\n    \"key\": \"43113\",\n    \"name\": \"Avalanche FUJI Testnet\",\n    \"chainId\": 43113,\n    \"network\": \"testnet\",\n    \"testnet\": true,\n    \"multicall\": \"0x984476ea55e32e785A9D8FF14329f99D74E3d2A2\",\n    \"rpc\": [\n      \"https://api.avax-test.network/ext/bc/C/rpc\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://testnet.snowtrace.io\"\n    },\n    \"start\": 10528153,\n    \"logo\": \"ipfs://QmeS75uS7XLR8o8uUzhLRVYPX9vMFf4DXgKxQeCzyy7vM2\"\n  },\n  \"43114\": {\n    \"key\": \"43114\",\n    \"name\": \"Avalanche\",\n    \"chainId\": 43114,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x7E9985aE4C8248fdB07607648406a48C76e9e7eD\",\n    \"rpc\": [\n      \"https://nd-784-543-849.p2pify.com/aa7b29fc5fed65b34f0ee6b8de33f8c0/ext/bc/C/rpc\",\n      \"https://rpc.ankr.com/avalanche\",\n      \"https://api.avax.network/ext/bc/C/rpc\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://snowtrace.io\"\n    },\n    \"start\": 536483,\n    \"logo\": \"ipfs://QmeS75uS7XLR8o8uUzhLRVYPX9vMFf4DXgKxQeCzyy7vM2\"\n  },\n  \"47805\": {\n    \"key\": \"47805\",\n    \"name\": \"REI Mainnet\",\n    \"chainId\": 47805,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x9eE9904815B80C39C1a27294E69a8626EAa7952d\",\n    \"rpc\": [\n      \"https://rpc.rei.network\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://scan.rei.network/\"\n    },\n    \"start\": 1715902,\n    \"logo\": \"ipfs://QmTogMDLmDgJjDjUKDHDuc2KVTVDbXf8bXJLFiVe8PRxgo\"\n  },\n  \"53935\": {\n    \"key\": \"53935\",\n    \"name\": \"DFK Chain\",\n    \"chainId\": 53935,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x5b24224dC16508DAD755756639E420817DD4c99E\",\n    \"rpc\": [\n      \"https://subnets.avax.network/defi-kingdoms/dfk-chain/rpc\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://subnets.avax.network/defi-kingdoms/\"\n    },\n    \"start\": 62,\n    \"logo\": \"ipfs://QmZNkpVgPbuVbDcsi6arwH1om3456FGnwfDqYQJWUfHDEx\"\n  },\n  \"59141\": {\n    \"key\": \"59141\",\n    \"name\": \"Linea Sepolia\",\n    \"shortName\": \"testnet\",\n    \"chainId\": 59141,\n    \"network\": \"testnet\",\n    \"multicall\": \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://sepolia.lineascan.build/\"\n    },\n    \"start\": 227427,\n    \"logo\": \"ipfs://bafkreihtyzolub3sejuwc32hpdpjnt7ksowaguni2yuho3kyihhcqrtqce\",\n    \"testnet\": true\n  },\n  \"59144\": {\n    \"key\": \"59144\",\n    \"name\": \"Linea\",\n    \"shortName\": \"linea\",\n    \"chainId\": 59144,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://lineascan.build/\"\n    },\n    \"start\": 42,\n    \"logo\": \"ipfs://bafkreihtyzolub3sejuwc32hpdpjnt7ksowaguni2yuho3kyihhcqrtqce\"\n  },\n  \"80001\": {\n    \"key\": \"80001\",\n    \"name\": \"Polygon Mumbai\",\n    \"chainId\": 80001,\n    \"network\": \"testnet\",\n    \"testnet\": true,\n    \"multicall\": \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n    \"rpc\": [\n      \"https://speedy-nodes-nyc.moralis.io/9e03baabdc27be2a35bdec4a/polygon/mumbai/archive\",\n      \"https://rpc-mumbai.matic.today\"\n    ],\n    \"ws\": [\n      \"wss://ws-mumbai.matic.today\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://mumbai.polygonscan.com\",\n      \"apiUrl\": \"https://api-mumbai.polygonscan.com\"\n    },\n    \"start\": 12011090,\n    \"logo\": \"ipfs://bafkreihgr7zy7vi5kqddybfaezwuhvssg57qluwmyan4qq7l57nr7w7wey\"\n  },\n  \"80002\": {\n    \"key\": \"80002\",\n    \"name\": \"Polygon Amoy Testnet\",\n    \"shortName\": \"testnet\",\n    \"chainId\": 80002,\n    \"network\": \"testnet\",\n    \"multicall\": \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://amoy.polygonscan.com/\"\n    },\n    \"start\": 3127388,\n    \"logo\": \"ipfs://bafkreibfiyvhqnme2vbxxfcku7qkxgjpkg6ywdkplxh4oxlkqsbznyorfm\",\n    \"testnet\": true\n  },\n  \"81457\": {\n    \"key\": \"81457\",\n    \"name\": \"Blast\",\n    \"shortName\": \"mainnet\",\n    \"chainId\": 81457,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://blastscan.io\"\n    },\n    \"start\": 88189,\n    \"logo\": \"ipfs://bafkreicqhrimt2zyp2kvhmbpvffxlmxovkg5vw6zkissyzibcfy45kbvrm\"\n  },\n  \"84532\": {\n    \"key\": \"84532\",\n    \"name\": \"Base Sepolia\",\n    \"shortName\": \"testnet\",\n    \"chainId\": 84532,\n    \"network\": \"testnet\",\n    \"multicall\": \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://base-sepolia.blockscout.com/\"\n    },\n    \"start\": 1059647,\n    \"logo\": \"ipfs://QmaxRoHpxZd8PqccAynherrMznMufG6sdmHZLihkECXmZv\",\n    \"testnet\": true\n  },\n  \"686868\": {\n    \"key\": \"686868\",\n    \"name\": \"Merlin Testnet\",\n    \"shortName\": \"merlin\",\n    \"chainId\": 686868,\n    \"network\": \"testnet\",\n    \"multicall\": \"0x758BC6321b7c68F4986d62a4D46E83A2DCb58c80\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://testnet-scan.merlinchain.io\"\n    },\n    \"start\": 3562021,\n    \"logo\": \"ipfs://bafkreicew2qv3m756m7xs2nrjezinghps7rlessrqjqetvox74w4hov2xe\",\n    \"testnet\": true\n  },\n  \"713715\": {\n    \"key\": \"713715\",\n    \"name\": \"Sei EVM Devnet\",\n    \"shortName\": \"devnet\",\n    \"chainId\": 713715,\n    \"network\": \"testnet\",\n    \"multicall\": \"0xEe8d287B844959ADe40d718Dc23077ba920e2f07\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://seitrace.com\"\n    },\n    \"start\": 1463669,\n    \"logo\": \"ipfs://bafkreiammyt7uztbztqbcqv4bydnczsh2fqmnjf6jxj4xnskzzl6sjrigq\",\n    \"testnet\": true\n  },\n  \"810180\": {\n    \"key\": \"810180\",\n    \"name\": \"zkLink Nova\",\n    \"shortName\": \"zlink\",\n    \"chainId\": 810180,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x825267E0fA5CAe92F98540828a54198dcB3Eaeb5\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://explorer.zklink.io\"\n    },\n    \"start\": 146055,\n    \"logo\": \"ipfs://bafkreic6c3iems5235qapyhyrygha7akqrsfact2nok3y2uhljpzxrdu74\"\n  },\n  \"810181\": {\n    \"key\": \"810181\",\n    \"name\": \"zkLink Nova Sepolia\",\n    \"shortName\": \"testnet\",\n    \"chainId\": 810181,\n    \"network\": \"testnet\",\n    \"multicall\": \"0x97148F8fDdd9A1620f72EC1Bb2932916623d9da5\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://sepolia.explorer.zklink.io/\"\n    },\n    \"start\": 43723,\n    \"logo\": \"ipfs://bafkreic6c3iems5235qapyhyrygha7akqrsfact2nok3y2uhljpzxrdu74\",\n    \"testnet\": true\n  },\n  \"11155111\": {\n    \"key\": \"11155111\",\n    \"name\": \"Sepolia testnet\",\n    \"shortName\": \"Sepolia\",\n    \"chainId\": 11155111,\n    \"network\": \"sepolia\",\n    \"testnet\": true,\n    \"multicall\": \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n    \"rpc\": [\n      \"https://sepolia.infura.io/v3/d26b4fd748814fe994b05899fd89e667\"\n    ],\n    \"ensResolvers\": [\n      \"0x8FADE66B79cC9f707aB26799354482EB93a5B7dD\"\n    ],\n    \"ensNameWrapper\": \"0x0635513f179D50A207757E05759CbD106d7dFcE8\",\n    \"ensSubgraph\": \"https://subgrapher.snapshot.org/subgraph/arbitrum/DmMXLtMZnGbQXASJ7p1jfzLUbBYnYUD9zNBTxpkjHYXV\",\n    \"explorer\": {\n      \"url\": \"https://sepolia.etherscan.io\",\n      \"apiUrl\": \"https://api-sepolia.etherscan.io\"\n    },\n    \"start\": 751532,\n    \"logo\": \"ipfs://bafkreid7ndxh6y2ljw2jhbisodiyrhcy2udvnwqgon5wgells3kh4si5z4\"\n  },\n  \"11155420\": {\n    \"key\": \"11155420\",\n    \"name\": \"OP Sepolia\",\n    \"shortName\": \"testnet\",\n    \"chainId\": 11155420,\n    \"network\": \"testnet\",\n    \"multicall\": \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://sepolia-optimism.etherscan.io\"\n    },\n    \"start\": 1620204,\n    \"logo\": \"ipfs://QmfF4kwhGL8QosUXvgq2KWCmavhKBvwD6kbhs7L4p5ZAWb\",\n    \"testnet\": true\n  },\n  \"111557560\": {\n    \"key\": \"111557560\",\n    \"name\": \"Cyber Testnet\",\n    \"shortName\": \"testnet\",\n    \"chainId\": 111557560,\n    \"network\": \"testnet\",\n    \"multicall\": \"0xffc391F0018269d4758AEA1a144772E8FB99545E\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://testnet.cyberscan.co/\"\n    },\n    \"start\": 304545,\n    \"logo\": \"ipfs://bafkreifm2bbehoqpz4454o7gixnxfi6cgvqlxigqr3f6ipj7l2omtgfgnm\",\n    \"testnet\": true\n  },\n  \"168587773\": {\n    \"key\": \"168587773\",\n    \"name\": \"Blast Sepolia\",\n    \"shortName\": \"testnet\",\n    \"chainId\": 168587773,\n    \"network\": \"testnet\",\n    \"multicall\": \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://sepolia.blastexplorer.io\"\n    },\n    \"start\": 756690,\n    \"logo\": \"ipfs://bafkreibfmkjg22cozxppzcoxswj45clvh2rqhxzax57cmmgudbtkf4dkce\",\n    \"testnet\": true\n  },\n  \"245022926\": {\n    \"key\": \"245022926\",\n    \"name\": \"Neon Devnet\",\n    \"shortName\": \"devnet\",\n    \"chainId\": 245022926,\n    \"network\": \"testnet\",\n    \"multicall\": \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n    \"rpc\": [],\n    \"explorer\": {\n      \"url\": \"https://devnet.neonscan.org/\"\n    },\n    \"start\": 205206112,\n    \"logo\": \"ipfs://QmecRPQGa4bU7tybg1sUQY48Md9rWnmhrT6WW5ueqvhg6P\",\n    \"testnet\": true\n  },\n  \"1313161554\": {\n    \"key\": \"1313161554\",\n    \"name\": \"Aurora\",\n    \"shortName\": \"Aurora\",\n    \"chainId\": 1313161554,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x32b50c286DEFd2932a0247b8bb940b78c063F16c\",\n    \"rpc\": [\n      \"https://mainnet.aurora.dev\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://explorer.mainnet.aurora.dev\"\n    },\n    \"start\": 57190533,\n    \"logo\": \"ipfs://QmeRhsR1UPRTQCizdhmgr2XxphXebVKU5di97uCV2UMFpa\"\n  },\n  \"1666600000\": {\n    \"key\": \"1666600000\",\n    \"name\": \"Harmony\",\n    \"shortName\": \"HarmonyMainnet\",\n    \"chainId\": 1666600000,\n    \"network\": \"mainnet\",\n    \"multicall\": \"0x9c31392D2e0229dC4Aa250F043d46B9E82074BF8\",\n    \"rpc\": [\n      \"https://a.api.s0.t.hmny.io\"\n    ],\n    \"ws\": [\n      \"wss://ws.s0.t.hmny.io\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://explorer.harmony.one\"\n    },\n    \"start\": 10911984,\n    \"logo\": \"ipfs://QmNnGPr1CNvj12SSGzKARtUHv9FyEfE5nES73U4vBWQSJL\"\n  },\n  \"1666700000\": {\n    \"key\": \"1666700000\",\n    \"name\": \"Harmony Testnet\",\n    \"shortName\": \"HarmonyTestnet\",\n    \"chainId\": 1666700000,\n    \"network\": \"testnet\",\n    \"testnet\": true,\n    \"multicall\": \"0x9923589503Fd205feE3d367DDFF2378f0F7dD2d4\",\n    \"rpc\": [\n      \"https://api.s0.b.hmny.io\"\n    ],\n    \"ws\": [\n      \"wss://ws.s0.b.hmny.io\"\n    ],\n    \"explorer\": {\n      \"url\": \"https://explorer.pops.one\"\n    },\n    \"start\": 7521509,\n    \"logo\": \"ipfs://QmNnGPr1CNvj12SSGzKARtUHv9FyEfE5nES73U4vBWQSJL\"\n  }\n}", "import { SingleChoiceVote, Strategy } from './types';\n\nexport default class SingleChoiceVoting {\n  proposal: { choices: string[] };\n  votes: SingleChoiceVote[];\n  strategies: Strategy[];\n  selected: number;\n\n  constructor(\n    proposal: { choices: string[] },\n    votes: SingleChoiceVote[],\n    strategies: Strategy[],\n    selected: number\n  ) {\n    this.proposal = proposal;\n    this.votes = votes;\n    this.strategies = strategies;\n    this.selected = selected;\n  }\n\n  static isValidChoice(voteChoice: number, proposalChoices: string[]): boolean {\n    return (\n      typeof voteChoice === 'number' &&\n      proposalChoices?.[voteChoice - 1] !== undefined\n    );\n  }\n\n  getValidVotes(): SingleChoiceVote[] {\n    return this.votes.filter((vote) =>\n      SingleChoiceVoting.isValidChoice(vote.choice, this.proposal.choices)\n    );\n  }\n\n  getScores(): number[] {\n    return this.proposal.choices.map((choice, i) => {\n      const votes = this.getValidVotes().filter(\n        (vote) => vote.choice === i + 1\n      );\n      const balanceSum = votes.reduce((a, b) => a + b.balance, 0);\n      return balanceSum;\n    });\n  }\n\n  getScoresByStrategy(): number[][] {\n    return this.proposal.choices.map((choice, i) => {\n      const scores = this.strategies.map((strategy, sI) => {\n        const votes = this.getValidVotes().filter(\n          (vote) => vote.choice === i + 1\n        );\n        const scoreSum = votes.reduce((a, b) => a + b.scores[sI], 0);\n        return scoreSum;\n      });\n      return scores;\n    });\n  }\n\n  getScoresTotal(): number {\n    return this.votes.reduce((a, b) => a + b.balance, 0);\n  }\n\n  getChoiceString(): string {\n    return this.proposal.choices[this.selected - 1];\n  }\n}\n", "import { ApprovalVote, Strategy } from './types';\n\nexport default class ApprovalVoting {\n  proposal: { choices: string[] };\n  votes: ApprovalVote[];\n  strategies: Strategy[];\n  selected: number[];\n\n  constructor(\n    proposal: { choices: string[] },\n    votes: ApprovalVote[],\n    strategies: Strategy[],\n    selected: number[]\n  ) {\n    this.proposal = proposal;\n    this.votes = votes;\n    this.strategies = strategies;\n    this.selected = selected;\n  }\n\n  static isValidChoice(\n    voteChoice: number[],\n    proposalChoices: string[]\n  ): boolean {\n    return (\n      Array.isArray(voteChoice) &&\n      // If voteChoice index is not in proposalChoices, return false\n      voteChoice.every(\n        (choice) => proposalChoices?.[choice - 1] !== undefined\n      ) &&\n      // If any voteChoice is duplicated, return false\n      voteChoice.length === new Set(voteChoice).size\n    );\n  }\n\n  getValidVotes(): {\n    choice: number[];\n    balance: number;\n    scores: number[];\n  }[] {\n    return this.votes.filter((vote) =>\n      ApprovalVoting.isValidChoice(vote.choice, this.proposal.choices)\n    );\n  }\n\n  getScores(): number[] {\n    return this.proposal.choices.map((choice, i) =>\n      this.getValidVotes()\n        .filter((vote) => vote.choice.includes(i + 1))\n        .reduce((a, b) => a + b.balance, 0)\n    );\n  }\n\n  getScoresByStrategy(): number[][] {\n    return this.proposal.choices.map((choice, i) =>\n      this.strategies.map((strategy, sI) =>\n        this.getValidVotes()\n          .filter((vote) => vote.choice.includes(i + 1))\n          .reduce((a, b) => a + b.scores[sI], 0)\n      )\n    );\n  }\n\n  getScoresTotal(): number {\n    return this.votes.reduce((a, b) => a + b.balance, 0);\n  }\n\n  getChoiceString(): string {\n    if (!this.selected) return '';\n    return this.proposal.choices\n      .filter((choice, i) => this.selected.includes(i + 1))\n      .join(', ');\n  }\n}\n", "import { QuadraticVote, QuadraticChoice, Strategy } from './types';\n\nexport function calcPercentageOfSum(\n  part: number,\n  wholeArray: number[]\n): number {\n  const whole = wholeArray.reduce((a, b) => a + b, 0);\n  const percent = part / whole;\n  return isNaN(percent) ? 0 : percent;\n}\n\nexport function calcSqrt(\n  percentageWeight: number,\n  votingPower: number\n): number {\n  return Math.sqrt(percentageWeight * votingPower);\n}\n\nfunction calcSquare(num: number): number {\n  return num * num;\n}\n\nfunction calcReducedQuadraticScores(\n  percentages: number[],\n  scoresTotal: number\n): number[] {\n  // Reduce each quadratic score so that the sum of quadratic scores matches\n  // the total scores.\n  // This is done to unsure that features like quorum still work as expected.\n  return percentages.map((p) => scoresTotal * p);\n}\n\nexport default class QuadraticVoting {\n  proposal: { choices: string[] };\n  votes: QuadraticVote[];\n  strategies: Strategy[];\n  selected: QuadraticChoice;\n\n  constructor(\n    proposal: { choices: string[] },\n    votes: QuadraticVote[],\n    strategies: Strategy[],\n    selected: QuadraticChoice\n  ) {\n    this.proposal = proposal;\n    this.votes = votes;\n    this.strategies = strategies;\n    this.selected = selected;\n  }\n\n  static isValidChoice(\n    voteChoice: QuadraticChoice,\n    proposalChoices: string[]\n  ): boolean {\n    return (\n      typeof voteChoice === 'object' &&\n      !Array.isArray(voteChoice) &&\n      voteChoice !== null &&\n      // If voteChoice object keys are not in choices, return false\n      Object.keys(voteChoice).every(\n        (key) => proposalChoices?.[Number(key) - 1] !== undefined\n      ) &&\n      // If voteChoice object is empty, return false\n      Object.keys(voteChoice).length > 0 &&\n      // If voteChoice object values have a negative number, return false\n      Object.values(voteChoice).every(\n        (value) => typeof value === 'number' && value >= 0\n      ) &&\n      // If voteChoice doesn't have any positive value, return false\n      Object.values(voteChoice).some(\n        (value) => typeof value === 'number' && value > 0\n      )\n    );\n  }\n\n  getValidVotes(): QuadraticVote[] {\n    return this.votes.filter((vote) =>\n      QuadraticVoting.isValidChoice(vote.choice, this.proposal.choices)\n    );\n  }\n\n  getScores(): number[] {\n    const validVotes = this.getValidVotes();\n    const scoresTotal = this.getValidVotes().reduce(\n      (a, b: any) => a + b.balance,\n      0\n    );\n\n    const quadraticScores = this.proposal.choices.map((_, i) => {\n      const votingPowerSqrt = validVotes\n        .map((vote) => {\n          const choiceWeightPercent = calcPercentageOfSum(\n            vote.choice[i + 1],\n            Object.values(vote.choice)\n          );\n          return calcSqrt(choiceWeightPercent, vote.balance);\n        })\n        .reduce((a, b: any) => a + b, 0);\n      return calcSquare(votingPowerSqrt);\n    });\n\n    const percentagesOfScores = quadraticScores.map((_, i) =>\n      calcPercentageOfSum(quadraticScores[i], quadraticScores)\n    );\n\n    return calcReducedQuadraticScores(percentagesOfScores, scoresTotal);\n  }\n\n  getScoresByStrategy(): number[][] {\n    const validVotes = this.getValidVotes();\n    const scoresTotal = this.getValidVotes().reduce(\n      (a, b: any) => a + b.balance,\n      0\n    );\n\n    const quadraticScoresByStrategy = this.proposal.choices\n      .map((_, i) =>\n        this.strategies.map((_, sI) =>\n          validVotes\n            .map((vote) => {\n              const choiceWeightPercentByStrategy = calcPercentageOfSum(\n                vote.choice[i + 1],\n                Object.values(vote.choice)\n              );\n              return calcSqrt(choiceWeightPercentByStrategy, vote.scores[sI]);\n            })\n            .reduce((a, b: any) => a + b, 0)\n        )\n      )\n      .map((arr) => arr.map((num) => [calcSquare(num)]));\n\n    const reducedQuadraticScores = quadraticScoresByStrategy.map((_, i) => {\n      const percentagesOfScores = this.strategies.map((_, sI) =>\n        calcPercentageOfSum(\n          quadraticScoresByStrategy[i][sI][0],\n          quadraticScoresByStrategy.flat(2)\n        )\n      );\n\n      return calcReducedQuadraticScores(percentagesOfScores, scoresTotal);\n    });\n\n    return reducedQuadraticScores;\n  }\n\n  getScoresTotal(): number {\n    return this.votes.reduce((a, b: any) => a + b.balance, 0);\n  }\n\n  getChoiceString(): string {\n    return this.proposal.choices\n      .map((choice, i) => {\n        if (this.selected[i + 1]) {\n          const percent = calcPercentageOfSum(\n            this.selected[i + 1],\n            Object.values(this.selected)\n          );\n          return `${Math.round(percent * 1000) / 10}% for ${choice}`;\n        }\n      })\n      .filter((el) => el != null)\n      .join(', ');\n  }\n}\n", "import { getNumberWithOrdinal } from '../utils';\nimport { RankedChoiceVote, Strategy } from './types';\n\nfunction irv(\n  ballots: (number | number[])[][],\n  rounds: {\n    round: number;\n    sortedByHighest: [string, [number, number[]]][];\n  }[]\n): { round: number; sortedByHighest: [string, [number, number[]]][] }[] {\n  const candidates: number[] = [\n    ...new Set(ballots.map((vote) => vote[0]).flat())\n  ];\n  const votes: [string, [number, number[]]][] = Object.entries(\n    ballots.reduce((votes, [v], i, src) => {\n      const balance = src[i][1];\n      votes[v[0]][0] += balance;\n\n      const score = src[i][2] as number[];\n      if (score.length > 1) {\n        votes[v[0]][1] = score.map((s, sI) => s + votes[v[0]][1][sI] || s);\n      } else\n        votes[v[0]][1] = [\n          votes[v[0]][1].concat(score).reduce((a, b) => a + b, 0)\n        ];\n      return votes;\n    }, Object.assign({}, ...candidates.map((c) => ({ [c]: [0, []] }))))\n  );\n\n  const votesWithoutScore = votes.map((vote) => [vote[0], vote[1][0]]);\n\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  const [topCand, topCount]: number[] = votesWithoutScore.reduce(\n    ([n, m]: any[], [v, c]: any[]) => (c > m ? [v, c] : [n, m]),\n    ['?', -Infinity]\n  );\n  const [bottomCand, bottomCount] = votesWithoutScore.reduce(\n    ([n, m], [v, c]) => (c < m ? [v, c] : [n, m]),\n    ['?', Infinity]\n  );\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n  const sortedByHighest = votes.sort((a, b) => b[1][0] - a[1][0]);\n\n  const totalPowerOfVotes = ballots\n    .map((bal) => bal[1])\n    .reduce((a, b: any) => a + b, 0);\n\n  rounds.push({\n    round: rounds.length + 1,\n    sortedByHighest\n  });\n\n  return topCount > (totalPowerOfVotes as number) / 2 ||\n    sortedByHighest.length < 3\n    ? rounds\n    : irv(\n        ballots\n          .map((ballot) => [\n            (ballot[0] as number[]).filter((c) => c != bottomCand),\n            ballot[1],\n            ballot[2]\n          ])\n          .filter((ballot) => (ballot[0] as number[]).length > 0),\n        rounds\n      );\n}\n\nfunction getFinalRound(\n  votes: RankedChoiceVote[]\n): [string, [number, number[]]][] {\n  const rounds = irv(\n    votes.map((vote) => [vote.choice, vote.balance, vote.scores]),\n    []\n  );\n  const finalRound = rounds[rounds.length - 1];\n  return finalRound.sortedByHighest;\n}\n\nfunction getScoresMethod(\n  votes: RankedChoiceVote[],\n  proposal: { choices: string[] }\n) {\n  const finalRound = getFinalRound(votes);\n  return proposal.choices.map((choice, i) =>\n    finalRound\n      .filter((res) => Number(res[0]) === i + 1)\n      .reduce((a, b) => a + b[1][0], 0)\n  );\n}\n\nexport default class RankedChoiceVoting {\n  proposal: { choices: string[] };\n  votes: RankedChoiceVote[];\n  strategies: Strategy[];\n  selected: number[];\n\n  constructor(\n    proposal: { choices: string[] },\n    votes: RankedChoiceVote[],\n    strategies: Strategy[],\n    selected: number[]\n  ) {\n    this.proposal = proposal;\n    this.votes = votes;\n    this.strategies = strategies;\n    this.selected = selected;\n  }\n\n  static isValidChoice(\n    voteChoice: number[],\n    proposalChoices: string[]\n  ): boolean {\n    return (\n      Array.isArray(voteChoice) &&\n      // If voteChoice index is not in choices, return false\n      voteChoice.every(\n        (voteChoice) => proposalChoices?.[voteChoice - 1] !== undefined\n      ) &&\n      // If any voteChoice is duplicated, return false\n      voteChoice.length === new Set(voteChoice).size &&\n      // If voteChoice is empty, return false\n      voteChoice.length > 0 &&\n      // If not all proposalChoices are selected, return false\n      // TODO: We should add support for pacial bailout in the future\n      voteChoice.length === proposalChoices.length\n    );\n  }\n\n  getValidVotes(): RankedChoiceVote[] {\n    return this.votes.filter((vote) =>\n      RankedChoiceVoting.isValidChoice(vote.choice, this.proposal.choices)\n    );\n  }\n\n  getScores(): number[] {\n    return getScoresMethod(this.getValidVotes(), this.proposal);\n  }\n\n  getScoresByStrategy(): number[][] {\n    const finalRound = getFinalRound(this.getValidVotes());\n    return this.proposal.choices.map((choice, i) =>\n      this.strategies.map((strategy, sI) => {\n        return finalRound\n          .filter((res) => Number(res[0]) === i + 1)\n          .reduce((a, b) => a + b[1][1][sI], 0);\n      })\n    );\n  }\n\n  getScoresTotal(): number {\n    return this.votes.reduce((a, b: any) => a + b.balance, 0);\n  }\n\n  getChoiceString(): string {\n    return this.selected\n      .map((choice) => {\n        if (this.proposal.choices[choice - 1])\n          return this.proposal.choices[choice - 1];\n      })\n      .map((el, i) => `(${getNumberWithOrdinal(i + 1)}) ${el}`)\n      .join(', ');\n  }\n}\n", "import { WeightedVote, Strategy } from './types';\n\nexport function percentageOfTotal(i, values, total): number {\n  const reducedTotal: any = total.reduce((a: any, b: any) => a + b, 0);\n  const percent = (values[i] / reducedTotal) * 100;\n  return isNaN(percent) ? 0 : percent;\n}\n\nexport function weightedPower(i, choice, balance): number {\n  return (\n    (percentageOfTotal(i + 1, choice, Object.values(choice)) / 100) * balance\n  );\n}\n\nexport default class WeightedVoting {\n  proposal: { choices: string[] };\n  votes: WeightedVote[];\n  strategies: Strategy[];\n  selected: { [key: string]: number };\n\n  constructor(\n    proposal: { choices: string[] },\n    votes: WeightedVote[],\n    strategies: Strategy[],\n    selected: { [key: string]: number }\n  ) {\n    this.proposal = proposal;\n    this.votes = votes;\n    this.strategies = strategies;\n    this.selected = selected;\n  }\n\n  static isValidChoice(\n    voteChoice: { [key: string]: number },\n    proposalChoices: string[]\n  ): boolean {\n    return (\n      typeof voteChoice === 'object' &&\n      !Array.isArray(voteChoice) &&\n      voteChoice !== null &&\n      // If voteChoice object keys are not in choices, return false\n      Object.keys(voteChoice).every(\n        (key) => proposalChoices?.[Number(key) - 1] !== undefined\n      ) &&\n      // If voteChoice object is empty, return false\n      Object.keys(voteChoice).length > 0 &&\n      // If voteChoice object values have a negative number, return false\n      Object.values(voteChoice).every(\n        (value) => typeof value === 'number' && value >= 0\n      ) &&\n      // If voteChoice doesn't have any positive value, return false\n      Object.values(voteChoice).some(\n        (value) => typeof value === 'number' && value > 0\n      )\n    );\n  }\n\n  getValidVotes(): WeightedVote[] {\n    return this.votes.filter((vote) =>\n      WeightedVoting.isValidChoice(vote.choice, this.proposal.choices)\n    );\n  }\n\n  getScores(): number[] {\n    const results = this.proposal.choices.map((choice, i) =>\n      this.getValidVotes()\n        .map((vote) => weightedPower(i, vote.choice, vote.balance))\n        .reduce((a, b: any) => a + b, 0)\n    );\n\n    const validScoresTotal = this.getValidVotes().reduce(\n      (a, b: any) => a + b.balance,\n      0\n    );\n\n    return results\n      .map((res, i) => percentageOfTotal(i, results, results))\n      .map((p) => (validScoresTotal / 100) * p);\n  }\n\n  getScoresByStrategy(): number[][] {\n    const results = this.proposal.choices\n      .map((choice, i) =>\n        this.strategies.map((strategy, sI) =>\n          this.getValidVotes()\n            .map((vote) => weightedPower(i, vote.choice, vote.scores[sI]))\n            .reduce((a, b: any) => a + b, 0)\n        )\n      )\n      .map((arr) => arr.map((pwr) => [pwr]));\n\n    const validScoresTotal = this.getValidVotes().reduce(\n      (a, b: any) => a + b.balance,\n      0\n    );\n\n    return results.map((res, i) =>\n      this.strategies\n        .map((strategy, sI) =>\n          percentageOfTotal(0, results[i][sI], results.flat(2))\n        )\n        .map((p) => [(validScoresTotal / 100) * p])\n        .flat()\n    );\n  }\n\n  getScoresTotal(): number {\n    return this.votes.reduce((a, b: any) => a + b.balance, 0);\n  }\n\n  getChoiceString(): string {\n    return this.proposal.choices\n      .map((choice, i) => {\n        if (this.selected[i + 1]) {\n          return `${\n            Math.round(\n              percentageOfTotal(\n                i + 1,\n                this.selected,\n                Object.values(this.selected)\n              ) * 10\n            ) / 10\n          }% for ${choice}`;\n        }\n      })\n      .filter((el) => el != null)\n      .join(', ');\n  }\n}\n", "import singleChoice from './singleChoice';\nimport approval from './approval';\nimport quadratic from './quadratic';\nimport rankedChoice from './rankedChoice';\nimport weighted from './weighted';\n\nexport default {\n  'single-choice': singleChoice,\n  approval,\n  quadratic,\n  'ranked-choice': rankedChoice,\n  weighted,\n  basic: singleChoice\n};\n", "{\n  \"1\": \"https://subgrapher.snapshot.org/delegation/1\",\n  \"10\": \"https://subgrapher.snapshot.org/delegation/10\",\n  \"56\": \"https://subgrapher.snapshot.org/delegation/56\",\n  \"100\": \"https://subgrapher.snapshot.org/delegation/100\",\n  \"137\": \"https://subgrapher.snapshot.org/delegation/137\",\n  \"250\": \"https://subgrapher.snapshot.org/delegation/250\",\n  \"8453\": \"https://subgrapher.snapshot.org/delegation/8453\",\n  \"42161\": \"https://subgrapher.snapshot.org/delegation/42161\",\n  \"59144\": \"https://subgrapher.snapshot.org/delegation/59144\",\n  \"11155111\": \"https://subgrapher.snapshot.org/delegation/11155111\"\n}\n", "import { subgraphRequest } from '../utils';\nimport delegationSubgraphs from '../delegationSubgraphs.json';\n\nexport const SNAPSHOT_SUBGRAPH_URL = delegationSubgraphs;\nconst PAGE_SIZE = 1000;\n\ntype Delegation = {\n  delegator: string;\n  delegate: string;\n  space: string;\n  timestamp: number;\n};\n\nexport default async function getDelegatesBySpace(\n  network: string,\n  space: string | null,\n  snapshot: string | number = 'latest',\n  options: any = {}\n) {\n  const subgraphUrl = options.subgraphUrl || SNAPSHOT_SUBGRAPH_URL[network];\n  if (!subgraphUrl) {\n    return Promise.reject(\n      `Delegation subgraph not available for network ${network}`\n    );\n  }\n\n  let pivot = 0;\n  const result = new Map<string, Delegation>();\n  const spaceIn = space ? buildSpaceIn(space) : null;\n\n  while (true) {\n    const newResults = await fetchData({\n      url: subgraphUrl,\n      spaces: spaceIn,\n      pivot,\n      snapshot\n    });\n\n    if (checkAllDuplicates(newResults)) {\n      throw new Error('Unable to paginate delegation');\n    }\n\n    newResults.forEach((delegation) => {\n      concatUniqueDelegation(result, delegation);\n      pivot = delegation.timestamp;\n    });\n\n    if (newResults.length < PAGE_SIZE) break;\n  }\n\n  return [...result.values()];\n}\n\nfunction checkAllDuplicates(delegations: Delegation[]) {\n  return (\n    delegations.length === PAGE_SIZE &&\n    delegations[0].timestamp === delegations[delegations.length - 1].timestamp\n  );\n}\n\nfunction delegationKey(delegation: Delegation) {\n  return `${delegation.delegator}-${delegation.delegate}-${delegation.space}`;\n}\n\nfunction concatUniqueDelegation(\n  result: Map<string, Delegation>,\n  delegation: Delegation\n): void {\n  const key = delegationKey(delegation);\n  if (!result.has(key)) {\n    result.set(key, delegation);\n  }\n}\n\nfunction buildSpaceIn(space: string) {\n  const spaces = ['', space];\n  if (space.includes('.eth')) spaces.push(space.replace('.eth', ''));\n\n  return spaces;\n}\n\nasync function fetchData({\n  url,\n  spaces,\n  pivot,\n  snapshot\n}: {\n  url: string;\n  spaces: string[] | null;\n  pivot: number;\n  snapshot: string | number;\n}): Promise<Delegation[]> {\n  const params: any = {\n    delegations: {\n      __args: {\n        where: {\n          timestamp_gte: pivot\n        },\n        first: PAGE_SIZE,\n        skip: 0,\n        orderBy: 'timestamp',\n        orderDirection: 'asc'\n      },\n      delegator: true,\n      space: true,\n      delegate: true,\n      timestamp: true\n    }\n  };\n\n  if (snapshot !== 'latest') {\n    params.delegations.__args.block = { number: snapshot };\n  }\n\n  if (spaces !== null) {\n    params.delegations.__args.where.space_in = spaces;\n  }\n\n  return (await subgraphRequest(url, params)).delegations || [];\n}\n"],
  "mappings": "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",
  "names": ["set", "block", "getProvider", "Contract", "verify", "getHash", "getHash", "verify", "getHash", "verify", "_", "votes", "voteChoice", "Ajv", "addFormats", "addErrors", "validate", "call", "fetch", "getHash", "verify", "validate"]
}
