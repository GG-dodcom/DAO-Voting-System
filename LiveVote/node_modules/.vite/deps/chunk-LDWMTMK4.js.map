{
  "version": 3,
  "sources": ["../../@adraffy/ens-normalize/dist/index.mjs", "../../viem/utils/ens/normalize.ts", "../../@wagmi/connectors/src/coinbaseWallet.ts", "../../@wagmi/connectors/src/walletConnect.ts", "../../@wagmi/connectors/src/metaMask.ts", "../../@wagmi/connectors/src/safe.ts"],
  "sourcesContent": ["// created 2024-09-13T06:42:45.675Z\r\n// compressed base64-encoded blob for include-ens data\r\n// source: https://github.com/adraffy/ens-normalize.js/blob/main/src/make.js\r\n// see: https://github.com/adraffy/ens-normalize.js#security\r\n// SHA-256: 0ca3917bee1eee342d64c631cb1dbaac37b167d848887d59f6d68328dc99ac09\r\nvar COMPRESSED$1 = '';\r\nconst FENCED = new Map([[8217,\"apostrophe\"],[8260,\"fraction slash\"],[12539,\"middle dot\"]]);\r\nconst NSM_MAX = 4;\r\n\r\nfunction decode_arithmetic(bytes) {\r\n\tlet pos = 0;\r\n\tfunction u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\r\n\t\r\n\t// decode the frequency table\r\n\tlet symbol_count = u16();\r\n\tlet total = 1;\r\n\tlet acc = [0, 1]; // first symbol has frequency 1\r\n\tfor (let i = 1; i < symbol_count; i++) {\r\n\t\tacc.push(total += u16());\r\n\t}\r\n\r\n\t// skip the sized-payload that the last 3 symbols index into\r\n\tlet skip = u16();\r\n\tlet pos_payload = pos;\r\n\tpos += skip;\r\n\r\n\tlet read_width = 0;\r\n\tlet read_buffer = 0; \r\n\tfunction read_bit() {\r\n\t\tif (read_width == 0) {\r\n\t\t\t// this will read beyond end of buffer\r\n\t\t\t// but (undefined|0) => zero pad\r\n\t\t\tread_buffer = (read_buffer << 8) | bytes[pos++];\r\n\t\t\tread_width = 8;\r\n\t\t}\r\n\t\treturn (read_buffer >> --read_width) & 1;\r\n\t}\r\n\r\n\tconst N = 31;\r\n\tconst FULL = 2**N;\r\n\tconst HALF = FULL >>> 1;\r\n\tconst QRTR = HALF >> 1;\r\n\tconst MASK = FULL - 1;\r\n\r\n\t// fill register\r\n\tlet register = 0;\r\n\tfor (let i = 0; i < N; i++) register = (register << 1) | read_bit();\r\n\r\n\tlet symbols = [];\r\n\tlet low = 0;\r\n\tlet range = FULL; // treat like a float\r\n\twhile (true) {\r\n\t\tlet value = Math.floor((((register - low + 1) * total) - 1) / range);\r\n\t\tlet start = 0;\r\n\t\tlet end = symbol_count;\r\n\t\twhile (end - start > 1) { // binary search\r\n\t\t\tlet mid = (start + end) >>> 1;\r\n\t\t\tif (value < acc[mid]) {\r\n\t\t\t\tend = mid;\r\n\t\t\t} else {\r\n\t\t\t\tstart = mid;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (start == 0) break; // first symbol is end mark\r\n\t\tsymbols.push(start);\r\n\t\tlet a = low + Math.floor(range * acc[start]   / total);\r\n\t\tlet b = low + Math.floor(range * acc[start+1] / total) - 1;\r\n\t\twhile (((a ^ b) & HALF) == 0) {\r\n\t\t\tregister = (register << 1) & MASK | read_bit();\r\n\t\t\ta = (a << 1) & MASK;\r\n\t\t\tb = (b << 1) & MASK | 1;\r\n\t\t}\r\n\t\twhile (a & ~b & QRTR) {\r\n\t\t\tregister = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\r\n\t\t\ta = (a << 1) ^ HALF;\r\n\t\t\tb = ((b ^ HALF) << 1) | HALF | 1;\r\n\t\t}\r\n\t\tlow = a;\r\n\t\trange = 1 + b - a;\r\n\t}\r\n\tlet offset = symbol_count - 4;\r\n\treturn symbols.map(x => { // index into payload\r\n\t\tswitch (x - offset) {\r\n\t\t\tcase 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\r\n\t\t\tcase 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\r\n\t\t\tcase 1: return offset + bytes[pos_payload++];\r\n\t\t\tdefault: return x - 1;\r\n\t\t}\r\n\t});\r\n}\t\r\n\r\n// returns an iterator which returns the next symbol\r\nfunction read_payload(v) {\r\n\tlet pos = 0;\r\n\treturn () => v[pos++];\r\n}\r\nfunction read_compressed_payload(s) {\r\n\treturn read_payload(decode_arithmetic(unsafe_atob(s)));\r\n}\r\n\r\n// unsafe in the sense:\r\n// expected well-formed Base64 w/o padding \r\n// 20220922: added for https://github.com/adraffy/ens-normalize.js/issues/4\r\nfunction unsafe_atob(s) {\r\n\tlet lookup = [];\r\n\t[...'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'].forEach((c, i) => lookup[c.charCodeAt(0)] = i);\r\n\tlet n = s.length;\r\n\tlet ret = new Uint8Array((6 * n) >> 3);\r\n\tfor (let i = 0, pos = 0, width = 0, carry = 0; i < n; i++) {\r\n\t\tcarry = (carry << 6) | lookup[s.charCodeAt(i)];\r\n\t\twidth += 6;\r\n\t\tif (width >= 8) {\r\n\t\t\tret[pos++] = (carry >> (width -= 8));\r\n\t\t}\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\r\nfunction signed(i) { \r\n\treturn (i & 1) ? (~i >> 1) : (i >> 1);\r\n}\r\n\r\nfunction read_deltas(n, next) {\r\n\tlet v = Array(n);\r\n\tfor (let i = 0, x = 0; i < n; i++) v[i] = x += signed(next());\r\n\treturn v;\r\n}\r\n\r\n// [123][5] => [0 3] [1 1] [0 0]\r\nfunction read_sorted(next, prev = 0) {\r\n\tlet ret = [];\r\n\twhile (true) {\r\n\t\tlet x = next();\r\n\t\tlet n = next();\r\n\t\tif (!n) break;\r\n\t\tprev += x;\r\n\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\tret.push(prev + i);\r\n\t\t}\r\n\t\tprev += n + 1;\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction read_sorted_arrays(next) {\r\n\treturn read_array_while(() => { \r\n\t\tlet v = read_sorted(next);\r\n\t\tif (v.length) return v;\r\n\t});\r\n}\r\n\r\n// returns map of x => ys\r\nfunction read_mapped(next) {\r\n\tlet ret = [];\r\n\twhile (true) {\r\n\t\tlet w = next();\r\n\t\tif (w == 0) break;\r\n\t\tret.push(read_linear_table(w, next));\r\n\t}\r\n\twhile (true) {\r\n\t\tlet w = next() - 1;\r\n\t\tif (w < 0) break;\r\n\t\tret.push(read_replacement_table(w, next));\r\n\t}\r\n\treturn ret.flat();\r\n}\r\n\r\n// read until next is falsy\r\n// return array of read values\r\nfunction read_array_while(next) {\r\n\tlet v = [];\r\n\twhile (true) {\r\n\t\tlet x = next(v.length);\r\n\t\tif (!x) break;\r\n\t\tv.push(x);\r\n\t}\r\n\treturn v;\r\n}\r\n\r\n// read w columns of length n\r\n// return as n rows of length w\r\nfunction read_transposed(n, w, next) {\r\n\tlet m = Array(n).fill().map(() => []);\r\n\tfor (let i = 0; i < w; i++) {\r\n\t\tread_deltas(n, next).forEach((x, j) => m[j].push(x));\r\n\t}\r\n\treturn m;\r\n}\r\n \r\n// returns [[x, ys], [x+dx, ys+dy], [x+2*dx, ys+2*dy], ...]\r\n// where dx/dy = steps, n = run size, w = length of y\r\nfunction read_linear_table(w, next) {\r\n\tlet dx = 1 + next();\r\n\tlet dy = next();\r\n\tlet vN = read_array_while(next);\r\n\tlet m = read_transposed(vN.length, 1+w, next);\r\n\treturn m.flatMap((v, i) => {\r\n\t\tlet [x, ...ys] = v;\r\n\t\treturn Array(vN[i]).fill().map((_, j) => {\r\n\t\t\tlet j_dy = j * dy;\r\n\t\t\treturn [x + j * dx, ys.map(y => y + j_dy)];\r\n\t\t});\r\n\t});\r\n}\r\n\r\n// return [[x, ys...], ...]\r\n// where w = length of y\r\nfunction read_replacement_table(w, next) { \r\n\tlet n = 1 + next();\r\n\tlet m = read_transposed(n, 1+w, next);\r\n\treturn m.map(v => [v[0], v.slice(1)]);\r\n}\r\n\r\n\r\nfunction read_trie(next) {\r\n\tlet ret = [];\r\n\tlet sorted = read_sorted(next); \r\n\texpand(decode([]), []);\r\n\treturn ret; // not sorted\r\n\tfunction decode(Q) { // characters that lead into this node\r\n\t\tlet S = next(); // state: valid, save, check\r\n\t\tlet B = read_array_while(() => { // buckets leading to new nodes\r\n\t\t\tlet cps = read_sorted(next).map(i => sorted[i]);\r\n\t\t\tif (cps.length) return decode(cps);\r\n\t\t});\r\n\t\treturn {S, B, Q};\r\n\t}\r\n\tfunction expand({S, B}, cps, saved) {\r\n\t\tif (S & 4 && saved === cps[cps.length-1]) return;\r\n\t\tif (S & 2) saved = cps[cps.length-1];\r\n\t\tif (S & 1) ret.push(cps); \r\n\t\tfor (let br of B) {\r\n\t\t\tfor (let cp of br.Q) {\r\n\t\t\t\texpand(br, [...cps, cp], saved);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction hex_cp(cp) {\r\n\treturn cp.toString(16).toUpperCase().padStart(2, '0');\r\n}\r\n\r\nfunction quote_cp(cp) {\r\n\treturn `{${hex_cp(cp)}}`; // raffy convention: like \"\\u{X}\" w/o the \"\\u\"\r\n}\r\n\r\n/*\r\nexport function explode_cp(s) {\r\n\treturn [...s].map(c => c.codePointAt(0));\r\n}\r\n*/\r\nfunction explode_cp(s) { // this is about 2x faster\r\n\tlet cps = [];\r\n\tfor (let pos = 0, len = s.length; pos < len; ) {\r\n\t\tlet cp = s.codePointAt(pos);\r\n\t\tpos += cp < 0x10000 ? 1 : 2;\r\n\t\tcps.push(cp);\r\n\t}\r\n\treturn cps;\r\n}\r\n\r\nfunction str_from_cps(cps) {\r\n\tconst chunk = 4096;\r\n\tlet len = cps.length;\r\n\tif (len < chunk) return String.fromCodePoint(...cps);\r\n\tlet buf = [];\r\n\tfor (let i = 0; i < len; ) {\r\n\t\tbuf.push(String.fromCodePoint(...cps.slice(i, i += chunk)));\r\n\t}\r\n\treturn buf.join('');\r\n}\r\n\r\nfunction compare_arrays(a, b) {\r\n\tlet n = a.length;\r\n\tlet c = n - b.length;\r\n\tfor (let i = 0; c == 0 && i < n; i++) c = a[i] - b[i];\r\n\treturn c;\r\n}\r\n\r\nfunction array_replace(v, a, b) {\r\n\tlet prev = 0;\r\n\twhile (true) {\r\n\t\tlet next = v.indexOf(a, prev);\r\n\t\tif (next < 0) break;\r\n\t\tv[next] = b; \r\n\t\tprev = next + 1;\r\n\t}\r\n}\r\n\r\n// created 2024-09-13T06:42:45.675Z\r\n// compressed base64-encoded blob for include-nf data\r\n// source: https://github.com/adraffy/ens-normalize.js/blob/main/src/make.js\r\n// see: https://github.com/adraffy/ens-normalize.js#security\r\n// SHA-256: a79d5f9b1879a7b416aa659f4a3d788f80a8cf5f0ab955a456592c02f556a28c\r\nvar COMPRESSED = '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';\r\n\r\n// https://unicode.org/reports/tr15/\r\n// for reference implementation\r\n// see: /derive/nf.js\r\n\r\n\r\n// algorithmic hangul\r\n// https://www.unicode.org/versions/Unicode15.0.0/ch03.pdf (page 144)\r\nconst S0 = 0xAC00;\r\nconst L0 = 0x1100;\r\nconst V0 = 0x1161;\r\nconst T0 = 0x11A7;\r\nconst L_COUNT = 19;\r\nconst V_COUNT = 21;\r\nconst T_COUNT = 28;\r\nconst N_COUNT = V_COUNT * T_COUNT;\r\nconst S_COUNT = L_COUNT * N_COUNT;\r\nconst S1 = S0 + S_COUNT;\r\nconst L1 = L0 + L_COUNT;\r\nconst V1 = V0 + V_COUNT;\r\nconst T1 = T0 + T_COUNT;\r\n\r\nfunction unpack_cc(packed) {\r\n\treturn (packed >> 24) & 0xFF;\r\n}\r\nfunction unpack_cp(packed) {\r\n\treturn packed & 0xFFFFFF;\r\n}\r\n\r\nlet SHIFTED_RANK, EXCLUSIONS, DECOMP, RECOMP;\r\n\r\n// export function nf_deinit() {\r\n// \tif (!SHIFTED_RANK) return;\r\n// \tSHIFTED_RANK = EXCLUSIONS = DECOMP = RECOMP = undefined;\r\n// }\r\n\r\nfunction init$1() {\r\n\t//console.time('nf');\r\n\tlet r = read_compressed_payload(COMPRESSED);\r\n\tSHIFTED_RANK = new Map(read_sorted_arrays(r).flatMap((v, i) => v.map(x => [x, (i+1) << 24]))); // pre-shifted\r\n\tEXCLUSIONS = new Set(read_sorted(r));\r\n\tDECOMP = new Map();\r\n\tRECOMP = new Map();\r\n\tfor (let [cp, cps] of read_mapped(r)) {\r\n\t\tif (!EXCLUSIONS.has(cp) && cps.length == 2) {\r\n\t\t\tlet [a, b] = cps;\r\n\t\t\tlet bucket = RECOMP.get(a);\r\n\t\t\tif (!bucket) {\r\n\t\t\t\tbucket = new Map();\r\n\t\t\t\tRECOMP.set(a, bucket);\r\n\t\t\t}\r\n\t\t\tbucket.set(b, cp);\r\n\t\t}\r\n\t\tDECOMP.set(cp, cps.reverse()); // stored reversed\r\n\t}\r\n\t//console.timeEnd('nf');\r\n\t// 20230905: 11ms\r\n}\r\n\r\nfunction is_hangul(cp) {\r\n\treturn cp >= S0 && cp < S1;\r\n}\r\n\r\nfunction compose_pair(a, b) {\r\n\tif (a >= L0 && a < L1 && b >= V0 && b < V1) {\r\n\t\treturn S0 + (a - L0) * N_COUNT + (b - V0) * T_COUNT;\r\n\t} else if (is_hangul(a) && b > T0 && b < T1 && (a - S0) % T_COUNT == 0) {\r\n\t\treturn a + (b - T0);\r\n\t} else {\r\n\t\tlet recomp = RECOMP.get(a);\r\n\t\tif (recomp) {\r\n\t\t\trecomp = recomp.get(b);\r\n\t\t\tif (recomp) {\r\n\t\t\t\treturn recomp;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n}\r\n\r\nfunction decomposed(cps) {\r\n\tif (!SHIFTED_RANK) init$1();\r\n\tlet ret = [];\r\n\tlet buf = [];\r\n\tlet check_order = false;\r\n\tfunction add(cp) {\r\n\t\tlet cc = SHIFTED_RANK.get(cp);\r\n\t\tif (cc) {\r\n\t\t\tcheck_order = true;\r\n\t\t\tcp |= cc;\r\n\t\t}\r\n\t\tret.push(cp);\r\n\t}\r\n\tfor (let cp of cps) {\r\n\t\twhile (true) {\r\n\t\t\tif (cp < 0x80) {\r\n\t\t\t\tret.push(cp);\r\n\t\t\t} else if (is_hangul(cp)) {\r\n\t\t\t\tlet s_index = cp - S0;\r\n\t\t\t\tlet l_index = s_index / N_COUNT | 0;\r\n\t\t\t\tlet v_index = (s_index % N_COUNT) / T_COUNT | 0;\r\n\t\t\t\tlet t_index = s_index % T_COUNT;\r\n\t\t\t\tadd(L0 + l_index);\r\n\t\t\t\tadd(V0 + v_index);\r\n\t\t\t\tif (t_index > 0) add(T0 + t_index);\r\n\t\t\t} else {\r\n\t\t\t\tlet mapped = DECOMP.get(cp);\r\n\t\t\t\tif (mapped) {\r\n\t\t\t\t\tbuf.push(...mapped);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tadd(cp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!buf.length) break;\r\n\t\t\tcp = buf.pop();\r\n\t\t}\r\n\t}\r\n\tif (check_order && ret.length > 1) {\r\n\t\tlet prev_cc = unpack_cc(ret[0]);\r\n\t\tfor (let i = 1; i < ret.length; i++) {\r\n\t\t\tlet cc = unpack_cc(ret[i]);\r\n\t\t\tif (cc == 0 || prev_cc <= cc) {\r\n\t\t\t\tprev_cc = cc;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tlet j = i-1;\r\n\t\t\twhile (true) {\r\n\t\t\t\tlet tmp = ret[j+1];\r\n\t\t\t\tret[j+1] = ret[j];\r\n\t\t\t\tret[j] = tmp;\r\n\t\t\t\tif (!j) break;\r\n\t\t\t\tprev_cc = unpack_cc(ret[--j]);\r\n\t\t\t\tif (prev_cc <= cc) break;\r\n\t\t\t}\r\n\t\t\tprev_cc = unpack_cc(ret[i]);\r\n\t\t}\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction composed_from_decomposed(v) {\r\n\tlet ret = [];\r\n\tlet stack = [];\r\n\tlet prev_cp = -1;\r\n\tlet prev_cc = 0;\r\n\tfor (let packed of v) {\r\n\t\tlet cc = unpack_cc(packed);\r\n\t\tlet cp = unpack_cp(packed);\r\n\t\tif (prev_cp == -1) {\r\n\t\t\tif (cc == 0) {\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tret.push(cp);\r\n\t\t\t}\r\n\t\t} else if (prev_cc > 0 && prev_cc >= cc) {\r\n\t\t\tif (cc == 0) {\r\n\t\t\t\tret.push(prev_cp, ...stack);\r\n\t\t\t\tstack.length = 0;\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tstack.push(cp);\r\n\t\t\t}\r\n\t\t\tprev_cc = cc;\r\n\t\t} else {\r\n\t\t\tlet composed = compose_pair(prev_cp, cp);\r\n\t\t\tif (composed >= 0) {\r\n\t\t\t\tprev_cp = composed;\r\n\t\t\t} else if (prev_cc == 0 && cc == 0) {\r\n\t\t\t\tret.push(prev_cp);\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tstack.push(cp);\r\n\t\t\t\tprev_cc = cc;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (prev_cp >= 0) {\r\n\t\tret.push(prev_cp, ...stack);\t\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\n// note: cps can be iterable\r\nfunction nfd(cps) {\r\n\treturn decomposed(cps).map(unpack_cp);\r\n}\r\nfunction nfc(cps) {\r\n\treturn composed_from_decomposed(decomposed(cps));\r\n}\r\n\r\nconst HYPHEN = 0x2D;\r\nconst STOP = 0x2E;\r\nconst STOP_CH = '.';\r\nconst FE0F = 0xFE0F;\r\nconst UNIQUE_PH = 1;\r\n\r\n// 20230913: replace [...v] with Array_from(v) to avoid large spreads\r\nconst Array_from = x => Array.from(x); // Array.from.bind(Array);\r\n\r\nfunction group_has_cp(g, cp) {\r\n\t// 20230913: keep primary and secondary distinct instead of creating valid union\r\n\treturn g.P.has(cp) || g.Q.has(cp);\r\n}\r\n\r\nclass Emoji extends Array {\r\n\tget is_emoji() { return true; } // free tagging system\r\n}\r\n\r\nlet MAPPED, IGNORED, CM, NSM, ESCAPE, NFC_CHECK, GROUPS, WHOLE_VALID, WHOLE_MAP, VALID, EMOJI_LIST, EMOJI_ROOT;\r\n\r\n// export function ens_deinit() {\r\n// \tnf_deinit();\r\n// \tif (!MAPPED) return;\r\n// \tMAPPED = IGNORED = CM = NSM = ESCAPE = NFC_CHECK = GROUPS = WHOLE_VALID = WHOLE_MAP = VALID = EMOJI_LIST = EMOJI_ROOT = undefined;\r\n// }\r\n\r\nfunction init() {\r\n\tif (MAPPED) return;\r\n\t\r\n\tlet r = read_compressed_payload(COMPRESSED$1);\r\n\tconst read_sorted_array = () => read_sorted(r);\r\n\tconst read_sorted_set = () => new Set(read_sorted_array());\r\n\tconst set_add_many = (set, v) => v.forEach(x => set.add(x));\r\n\r\n\tMAPPED = new Map(read_mapped(r)); \r\n\tIGNORED = read_sorted_set(); // ignored characters are not valid, so just read raw codepoints\r\n\r\n\t/*\r\n\t// direct include from payload is smaller than the decompression code\r\n\tconst FENCED = new Map(read_array_while(() => {\r\n\t\tlet cp = r();\r\n\t\tif (cp) return [cp, read_str(r())];\r\n\t}));\r\n\t*/\r\n\t// 20230217: we still need all CM for proper error formatting\r\n\t// but norm only needs NSM subset that are potentially-valid\r\n\tCM = read_sorted_array();\r\n\tNSM = new Set(read_sorted_array().map(i => CM[i]));\r\n\tCM = new Set(CM);\r\n\t\r\n\tESCAPE = read_sorted_set(); // characters that should not be printed\r\n\tNFC_CHECK = read_sorted_set(); // only needed to illustrate ens_tokenize() transformations\r\n\r\n\tlet chunks = read_sorted_arrays(r);\r\n\tlet unrestricted = r();\r\n\t//const read_chunked = () => new Set(read_sorted_array().flatMap(i => chunks[i]).concat(read_sorted_array()));\r\n\tconst read_chunked = () => {\r\n\t\t// 20230921: build set in parts, 2x faster\r\n\t\tlet set = new Set();\r\n\t\tread_sorted_array().forEach(i => set_add_many(set, chunks[i]));\r\n\t\tset_add_many(set, read_sorted_array());\r\n\t\treturn set; \r\n\t};\r\n\tGROUPS = read_array_while(i => {\r\n\t\t// minifier property mangling seems unsafe\r\n\t\t// so these are manually renamed to single chars\r\n\t\tlet N = read_array_while(r).map(x => x+0x60);\r\n\t\tif (N.length) {\r\n\t\t\tlet R = i >= unrestricted; // unrestricted then restricted\r\n\t\t\tN[0] -= 32; // capitalize\r\n\t\t\tN = str_from_cps(N);\r\n\t\t\tif (R) N=`Restricted[${N}]`;\r\n\t\t\tlet P = read_chunked(); // primary\r\n\t\t\tlet Q = read_chunked(); // secondary\r\n\t\t\tlet M = !r(); // not-whitelisted, check for NSM\r\n\t\t\t// *** this code currently isn't needed ***\r\n\t\t\t/*\r\n\t\t\tlet V = [...P, ...Q].sort((a, b) => a-b); // derive: sorted valid\r\n\t\t\tlet M = r()-1; // number of combining mark\r\n\t\t\tif (M < 0) { // whitelisted\r\n\t\t\t\tM = new Map(read_array_while(() => {\r\n\t\t\t\t\tlet i = r();\r\n\t\t\t\t\tif (i) return [V[i-1], read_array_while(() => {\r\n\t\t\t\t\t\tlet v = read_array_while(r);\r\n\t\t\t\t\t\tif (v.length) return v.map(x => x-1);\r\n\t\t\t\t\t})];\r\n\t\t\t\t}));\r\n\t\t\t}*/\r\n\t\t\treturn {N, P, Q, M, R};\r\n\t\t}\r\n\t});\r\n\r\n\t// decode compressed wholes\r\n\tWHOLE_VALID = read_sorted_set();\r\n\tWHOLE_MAP = new Map();\r\n\tlet wholes = read_sorted_array().concat(Array_from(WHOLE_VALID)).sort((a, b) => a-b); // must be sorted\r\n\twholes.forEach((cp, i) => {\r\n\t\tlet d = r(); \r\n\t\tlet w = wholes[i] = d ? wholes[i-d] : {V: [], M: new Map()};\r\n\t\tw.V.push(cp); // add to member set\r\n\t\tif (!WHOLE_VALID.has(cp)) {\r\n\t\t\tWHOLE_MAP.set(cp, w);  // register with whole map\r\n\t\t}\r\n\t});\r\n\r\n\t// compute confusable-extent complements\r\n\t// usage: WHOLE_MAP.get(cp).M.get(cp) = complement set\r\n\tfor (let {V, M} of new Set(WHOLE_MAP.values())) {\r\n\t\t// connect all groups that have each whole character\r\n\t\tlet recs = [];\r\n\t\tfor (let cp of V) {\r\n\t\t\tlet gs = GROUPS.filter(g => group_has_cp(g, cp));\r\n\t\t\tlet rec = recs.find(({G}) => gs.some(g => G.has(g)));\r\n\t\t\tif (!rec) {\r\n\t\t\t\trec = {G: new Set(), V: []};\r\n\t\t\t\trecs.push(rec);\r\n\t\t\t}\r\n\t\t\trec.V.push(cp);\r\n\t\t\tset_add_many(rec.G, gs);\r\n\t\t}\r\n\t\t// per character cache groups which are not a member of the extent\r\n\t\tlet union = recs.flatMap(x => Array_from(x.G)); // all of the groups used by this whole\r\n\t\tfor (let {G, V} of recs) {\r\n\t\t\tlet complement = new Set(union.filter(g => !G.has(g))); // groups not covered by the extent\r\n\t\t\tfor (let cp of V) {\r\n\t\t\t\tM.set(cp, complement); // this is the same reference\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// compute valid set\r\n\t// 20230924: VALID was union but can be re-used\r\n\tVALID = new Set(); // exists in 1+ groups\r\n\tlet multi = new Set(); // exists in 2+ groups\r\n\tconst add_to_union = cp => VALID.has(cp) ? multi.add(cp) : VALID.add(cp);\r\n\tfor (let g of GROUPS) {\r\n\t\tfor (let cp of g.P) add_to_union(cp);\r\n\t\tfor (let cp of g.Q) add_to_union(cp);\r\n\t}\r\n\t// dual purpose WHOLE_MAP: return placeholder if unique non-confusable\r\n\tfor (let cp of VALID) {\r\n\t\tif (!WHOLE_MAP.has(cp) && !multi.has(cp)) {\r\n\t\t\tWHOLE_MAP.set(cp, UNIQUE_PH);\r\n\t\t}\r\n\t}\r\n\t// add all decomposed parts\r\n\t// see derive: \"Valid is Closed (via Brute-force)\"\r\n\tset_add_many(VALID, nfd(VALID));\r\n\t\r\n\t// decode emoji\r\n\t// 20230719: emoji are now fully-expanded to avoid quirk logic \r\n\tEMOJI_LIST = read_trie(r).map(v => Emoji.from(v)).sort(compare_arrays);\r\n\tEMOJI_ROOT = new Map(); // this has approx 7K nodes (2+ per emoji)\r\n\tfor (let cps of EMOJI_LIST) {\r\n\t\t// 20230719: change to *slightly* stricter algorithm which disallows \r\n\t\t// insertion of misplaced FE0F in emoji sequences (matching ENSIP-15)\r\n\t\t// example: beautified [A B] (eg. flag emoji) \r\n\t\t//  before: allow: [A FE0F B], error: [A FE0F FE0F B] \r\n\t\t//   after: error: both\r\n\t\t// note: this code now matches ENSNormalize.{cs,java} logic\r\n\t\tlet prev = [EMOJI_ROOT];\r\n\t\tfor (let cp of cps) {\r\n\t\t\tlet next = prev.map(node => {\r\n\t\t\t\tlet child = node.get(cp);\r\n\t\t\t\tif (!child) {\r\n\t\t\t\t\t// should this be object? \r\n\t\t\t\t\t// (most have 1-2 items, few have many)\r\n\t\t\t\t\t// 20230719: no, v8 default map is 4?\r\n\t\t\t\t\tchild = new Map();\r\n\t\t\t\t\tnode.set(cp, child);\r\n\t\t\t\t}\r\n\t\t\t\treturn child;\r\n\t\t\t});\r\n\t\t\tif (cp === FE0F) {\r\n\t\t\t\tprev.push(...next); // less than 20 elements\r\n\t\t\t} else {\r\n\t\t\t\tprev = next;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let x of prev) {\r\n\t\t\tx.V = cps;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// if escaped: {HEX}\r\n//       else: \"x\" {HEX}\r\nfunction quoted_cp(cp) {\r\n\treturn (should_escape(cp) ? '' : `${bidi_qq(safe_str_from_cps([cp]))} `) + quote_cp(cp);\r\n}\r\n\r\n// 20230211: some messages can be mixed-directional and result in spillover\r\n// use 200E after a quoted string to force the remainder of a string from \r\n// acquring the direction of the quote\r\n// https://www.w3.org/International/questions/qa-bidi-unicode-controls#exceptions\r\nfunction bidi_qq(s) {\r\n\treturn `\"${s}\"\\u200E`; // strong LTR\r\n}\r\n\r\nfunction check_label_extension(cps) {\r\n\tif (cps.length >= 4 && cps[2] == HYPHEN && cps[3] == HYPHEN) {\r\n\t\tthrow new Error(`invalid label extension: \"${str_from_cps(cps.slice(0, 4))}\"`); // this can only be ascii so cant be bidi\r\n\t}\r\n}\r\nfunction check_leading_underscore(cps) {\r\n\tconst UNDERSCORE = 0x5F;\r\n\tfor (let i = cps.lastIndexOf(UNDERSCORE); i > 0; ) {\r\n\t\tif (cps[--i] !== UNDERSCORE) {\r\n\t\t\tthrow new Error('underscore allowed only at start');\r\n\t\t}\r\n\t}\r\n}\r\n// check that a fenced cp is not leading, trailing, or touching another fenced cp\r\nfunction check_fenced(cps) {\r\n\tlet cp = cps[0];\r\n\tlet prev = FENCED.get(cp);\r\n\tif (prev) throw error_placement(`leading ${prev}`);\r\n\tlet n = cps.length;\r\n\tlet last = -1; // prevents trailing from throwing\r\n\tfor (let i = 1; i < n; i++) {\r\n\t\tcp = cps[i];\r\n\t\tlet match = FENCED.get(cp);\r\n\t\tif (match) {\r\n\t\t\t// since cps[0] isn't fenced, cps[1] cannot throw\r\n\t\t\tif (last == i) throw error_placement(`${prev} + ${match}`);\r\n\t\t\tlast = i + 1;\r\n\t\t\tprev = match;\r\n\t\t}\r\n\t}\r\n\tif (last == n) throw error_placement(`trailing ${prev}`);\r\n}\r\n\r\n// create a safe to print string \r\n// invisibles are escaped\r\n// leading cm uses placeholder\r\n// if cps exceed max, middle truncate with ellipsis\r\n// quoter(cp) => string, eg. 3000 => \"{3000}\"\r\n// note: in html, you'd call this function then replace [<>&] with entities\r\nfunction safe_str_from_cps(cps, max = Infinity, quoter = quote_cp) {\r\n\t//if (Number.isInteger(cps)) cps = [cps];\r\n\t//if (!Array.isArray(cps)) throw new TypeError(`expected codepoints`);\r\n\tlet buf = [];\r\n\tif (is_combining_mark(cps[0])) buf.push('◌');\r\n\tif (cps.length > max) {\r\n\t\tmax >>= 1;\r\n\t\tcps = [...cps.slice(0, max), 0x2026, ...cps.slice(-max)];\r\n\t}\r\n\tlet prev = 0;\r\n\tlet n = cps.length;\r\n\tfor (let i = 0; i < n; i++) {\r\n\t\tlet cp = cps[i];\r\n\t\tif (should_escape(cp)) {\r\n\t\t\tbuf.push(str_from_cps(cps.slice(prev, i)));\r\n\t\t\tbuf.push(quoter(cp));\r\n\t\t\tprev = i + 1;\r\n\t\t}\r\n\t}\r\n\tbuf.push(str_from_cps(cps.slice(prev, n)));\r\n\treturn buf.join('');\r\n}\r\n\r\n// note: set(s) cannot be exposed because they can be modified\r\n// note: Object.freeze() doesn't work\r\nfunction is_combining_mark(cp, only_nsm) { // 20240127: add extra argument\r\n\tinit();\r\n\treturn only_nsm ? NSM.has(cp) : CM.has(cp);\r\n}\r\nfunction should_escape(cp) {\r\n\tinit();\r\n\treturn ESCAPE.has(cp);\r\n}\r\n\r\n// return all supported emoji as fully-qualified emoji \r\n// ordered by length then lexicographic \r\nfunction ens_emoji() {\r\n\tinit();\r\n\treturn EMOJI_LIST.map(x => x.slice()); // emoji are exposed so copy\r\n}\r\n\r\nfunction ens_normalize_fragment(frag, decompose) {\r\n\tinit();\r\n\tlet nf = decompose ? nfd : nfc;\r\n\treturn frag.split(STOP_CH).map(label => str_from_cps(tokens_from_str(explode_cp(label), nf, filter_fe0f).flat())).join(STOP_CH);\r\n}\r\n\r\nfunction ens_normalize(name) {\r\n\treturn flatten(split(name, nfc, filter_fe0f));\r\n}\r\n\r\nfunction ens_beautify(name) {\r\n\tlet labels = split(name, nfc, x => x); // emoji not exposed\r\n\tfor (let {type, output, error} of labels) {\r\n\t\tif (error) break; // flatten will throw\r\n\r\n\t\t// replace leading/trailing hyphen\r\n\t\t// 20230121: consider beautifing all or leading/trailing hyphen to unicode variant\r\n\t\t// not exactly the same in every font, but very similar: \"-\" vs \"‐\"\r\n\t\t/*\r\n\t\tconst UNICODE_HYPHEN = 0x2010;\r\n\t\t// maybe this should replace all for visual consistancy?\r\n\t\t// `node tools/reg-count.js regex ^-\\{2,\\}` => 592\r\n\t\t//for (let i = 0; i < output.length; i++) if (output[i] == 0x2D) output[i] = 0x2010;\r\n\t\tif (output[0] == HYPHEN) output[0] = UNICODE_HYPHEN;\r\n\t\tlet end = output.length-1;\r\n\t\tif (output[end] == HYPHEN) output[end] = UNICODE_HYPHEN;\r\n\t\t*/\r\n\t\t// 20230123: WHATWG URL uses \"CheckHyphens\" false\r\n\t\t// https://url.spec.whatwg.org/#idna\r\n\r\n\t\t// update ethereum symbol\r\n\t\t// ξ => Ξ if not greek\r\n\t\tif (type !== 'Greek') array_replace(output, 0x3BE, 0x39E);\r\n\r\n\t\t// 20221213: fixes bidi subdomain issue, but breaks invariant (200E is disallowed)\r\n\t\t// could be fixed with special case for: 2D (.) + 200E (LTR)\r\n\t\t// https://discuss.ens.domains/t/bidi-label-ordering-spoof/15824\r\n\t\t//output.splice(0, 0, 0x200E);\r\n\t}\r\n\treturn flatten(labels);\r\n}\r\n\r\nfunction ens_split(name, preserve_emoji) {\r\n\treturn split(name, nfc, preserve_emoji ? x => x.slice() : filter_fe0f); // emoji are exposed so copy\r\n}\r\n\r\nfunction split(name, nf, ef) {\r\n\tif (!name) return []; // 20230719: empty name allowance\r\n\tinit();\r\n\tlet offset = 0;\r\n\t// https://unicode.org/reports/tr46/#Validity_Criteria\r\n\t// 4.) \"The label must not contain a U+002E ( . ) FULL STOP.\"\r\n\treturn name.split(STOP_CH).map(label => {\r\n\t\tlet input = explode_cp(label);\r\n\t\tlet info = {\r\n\t\t\tinput,\r\n\t\t\toffset, // codepoint, not substring!\r\n\t\t};\r\n\t\toffset += input.length + 1; // + stop\r\n\t\ttry {\r\n\t\t\t// 1.) \"The label must be in Unicode Normalization Form NFC\"\r\n\t\t\tlet tokens = info.tokens = tokens_from_str(input, nf, ef);\r\n\t\t\tlet token_count = tokens.length;\r\n\t\t\tlet type;\r\n\t\t\tif (!token_count) { // the label was effectively empty (could of had ignored characters)\r\n\t\t\t\t//norm = [];\r\n\t\t\t\t//type = 'None'; // use this instead of next match, \"ASCII\"\r\n\t\t\t\t// 20230120: change to strict\r\n\t\t\t\t// https://discuss.ens.domains/t/ens-name-normalization-2nd/14564/59\r\n\t\t\t\tthrow new Error(`empty label`);\r\n\t\t\t} \r\n\t\t\tlet norm = info.output = tokens.flat();\r\n\t\t\tcheck_leading_underscore(norm);\r\n\t\t\tlet emoji = info.emoji = token_count > 1 || tokens[0].is_emoji; // same as: tokens.some(x => x.is_emoji);\r\n\t\t\tif (!emoji && norm.every(cp => cp < 0x80)) { // special case for ascii\r\n\t\t\t\t// 20230123: matches matches WHATWG, see note 3.3\r\n\t\t\t\tcheck_label_extension(norm); // only needed for ascii\r\n\t\t\t\t// cant have fenced\r\n\t\t\t\t// cant have cm\r\n\t\t\t\t// cant have wholes\r\n\t\t\t\t// see derive: \"Fastpath ASCII\"\r\n\t\t\t\ttype = 'ASCII';\r\n\t\t\t} else {\r\n\t\t\t\tlet chars = tokens.flatMap(x => x.is_emoji ? [] : x); // all of the nfc tokens concat together\r\n\t\t\t\tif (!chars.length) { // theres no text, just emoji\r\n\t\t\t\t\ttype = 'Emoji';\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 5.) \"The label must not begin with a combining mark, that is: General_Category=Mark.\"\r\n\t\t\t\t\tif (CM.has(norm[0])) throw error_placement('leading combining mark');\r\n\t\t\t\t\tfor (let i = 1; i < token_count; i++) { // we've already checked the first token\r\n\t\t\t\t\t\tlet cps = tokens[i];\r\n\t\t\t\t\t\tif (!cps.is_emoji && CM.has(cps[0])) { // every text token has emoji neighbors, eg. EtEEEtEt...\r\n\t\t\t\t\t\t\t// bidi_qq() not needed since emoji is LTR and cps is a CM\r\n\t\t\t\t\t\t\tthrow error_placement(`emoji + combining mark: \"${str_from_cps(tokens[i-1])} + ${safe_str_from_cps([cps[0]])}\"`); \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcheck_fenced(norm);\r\n\t\t\t\t\tlet unique = Array_from(new Set(chars));\r\n\t\t\t\t\tlet [g] = determine_group(unique); // take the first match\r\n\t\t\t\t\t// see derive: \"Matching Groups have Same CM Style\"\r\n\t\t\t\t\t// alternative: could form a hybrid type: Latin/Japanese/...\t\r\n\t\t\t\t\tcheck_group(g, chars); // need text in order\r\n\t\t\t\t\tcheck_whole(g, unique); // only need unique text (order would be required for multiple-char confusables)\r\n\t\t\t\t\ttype = g.N;\r\n\t\t\t\t\t// 20230121: consider exposing restricted flag\r\n\t\t\t\t\t// it's simpler to just check for 'Restricted'\r\n\t\t\t\t\t// or even better: type.endsWith(']')\r\n\t\t\t\t\t//if (g.R) info.restricted = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tinfo.type = type;\r\n\t\t} catch (err) {\r\n\t\t\tinfo.error = err; // use full error object\r\n\t\t}\r\n\t\treturn info;\r\n\t});\r\n}\r\n\r\nfunction check_whole(group, unique) {\r\n\tlet maker;\r\n\tlet shared = [];\r\n\tfor (let cp of unique) {\r\n\t\tlet whole = WHOLE_MAP.get(cp);\r\n\t\tif (whole === UNIQUE_PH) return; // unique, non-confusable\r\n\t\tif (whole) {\r\n\t\t\tlet set = whole.M.get(cp); // groups which have a character that look-like this character\r\n\t\t\tmaker = maker ? maker.filter(g => set.has(g)) : Array_from(set);\r\n\t\t\tif (!maker.length) return; // confusable intersection is empty\r\n\t\t} else {\r\n\t\t\tshared.push(cp); \r\n\t\t}\r\n\t}\r\n\tif (maker) {\r\n\t\t// we have 1+ confusable\r\n\t\t// check if any of the remaining groups\r\n\t\t// contain the shared characters too\r\n\t\tfor (let g of maker) {\r\n\t\t\tif (shared.every(cp => group_has_cp(g, cp))) {\r\n\t\t\t\tthrow new Error(`whole-script confusable: ${group.N}/${g.N}`);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// assumption: unique.size > 0\r\n// returns list of matching groups\r\nfunction determine_group(unique) {\r\n\tlet groups = GROUPS;\r\n\tfor (let cp of unique) {\r\n\t\t// note: we need to dodge CM that are whitelisted\r\n\t\t// but that code isn't currently necessary\r\n\t\tlet gs = groups.filter(g => group_has_cp(g, cp));\r\n\t\tif (!gs.length) {\r\n\t\t\tif (!GROUPS.some(g => group_has_cp(g, cp))) { \r\n\t\t\t\t// the character was composed of valid parts\r\n\t\t\t\t// but it's NFC form is invalid\r\n\t\t\t\t// 20230716: change to more exact statement, see: ENSNormalize.{cs,java}\r\n\t\t\t\t// note: this doesn't have to be a composition\r\n\t\t\t\t// 20230720: change to full check\r\n\t\t\t\tthrow error_disallowed(cp); // this should be rare\r\n\t\t\t} else {\r\n\t\t\t\t// there is no group that contains all these characters\r\n\t\t\t\t// throw using the highest priority group that matched\r\n\t\t\t\t// https://www.unicode.org/reports/tr39/#mixed_script_confusables\r\n\t\t\t\tthrow error_group_member(groups[0], cp);\r\n\t\t\t}\r\n\t\t}\r\n\t\tgroups = gs;\r\n\t\tif (gs.length == 1) break; // there is only one group left\r\n\t}\r\n\t// there are at least 1 group(s) with all of these characters\r\n\treturn groups;\r\n}\r\n\r\n// throw on first error\r\nfunction flatten(split) {\r\n\treturn split.map(({input, error, output}) => {\r\n\t\tif (error) {\r\n\t\t\t// don't print label again if just a single label\r\n\t\t\tlet msg = error.message;\r\n\t\t\t// bidi_qq() only necessary if msg is digits\r\n\t\t\tthrow new Error(split.length == 1 ? msg : `Invalid label ${bidi_qq(safe_str_from_cps(input, 63))}: ${msg}`); \r\n\t\t}\r\n\t\treturn str_from_cps(output);\r\n\t}).join(STOP_CH);\r\n}\r\n\r\nfunction error_disallowed(cp) {\r\n\t// TODO: add cp to error?\r\n\treturn new Error(`disallowed character: ${quoted_cp(cp)}`); \r\n}\r\nfunction error_group_member(g, cp) {\r\n\tlet quoted = quoted_cp(cp);\r\n\tlet gg = GROUPS.find(g => g.P.has(cp)); // only check primary\r\n\tif (gg) {\r\n\t\tquoted = `${gg.N} ${quoted}`;\r\n\t}\r\n\treturn new Error(`illegal mixture: ${g.N} + ${quoted}`);\r\n}\r\nfunction error_placement(where) {\r\n\treturn new Error(`illegal placement: ${where}`);\r\n}\r\n\r\n// assumption: cps.length > 0\r\n// assumption: cps[0] isn't a CM\r\n// assumption: the previous character isn't an emoji\r\nfunction check_group(g, cps) {\r\n\tfor (let cp of cps) {\r\n\t\tif (!group_has_cp(g, cp)) {\r\n\t\t\t// for whitelisted scripts, this will throw illegal mixture on invalid cm, eg. \"e{300}{300}\"\r\n\t\t\t// at the moment, it's unnecessary to introduce an extra error type\r\n\t\t\t// until there exists a whitelisted multi-character\r\n\t\t\t//   eg. if (M < 0 && is_combining_mark(cp)) { ... }\r\n\t\t\t// there are 3 cases:\r\n\t\t\t//   1. illegal cm for wrong group => mixture error\r\n\t\t\t//   2. illegal cm for same group => cm error\r\n\t\t\t//       requires set of whitelist cm per group: \r\n\t\t\t//        eg. new Set([...g.P, ...g.Q].flatMap(nfc).filter(cp => CM.has(cp)))\r\n\t\t\t//   3. wrong group => mixture error\r\n\t\t\tthrow error_group_member(g, cp);\r\n\t\t}\r\n\t}\r\n\t//if (M >= 0) { // we have a known fixed cm count\r\n\tif (g.M) { // we need to check for NSM\r\n\t\tlet decomposed = nfd(cps);\r\n\t\tfor (let i = 1, e = decomposed.length; i < e; i++) { // see: assumption\r\n\t\t\t// 20230210: bugfix: using cps instead of decomposed h/t Carbon225\r\n\t\t\t/*\r\n\t\t\tif (CM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\twhile (j < e && CM.has(decomposed[j])) j++;\r\n\t\t\t\tif (j - i > M) {\r\n\t\t\t\t\tthrow new Error(`too many combining marks: ${g.N} ${bidi_qq(str_from_cps(decomposed.slice(i-1, j)))} (${j-i}/${M})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\t// 20230217: switch to NSM counting\r\n\t\t\t// https://www.unicode.org/reports/tr39/#Optional_Detection\r\n\t\t\tif (NSM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\tfor (let cp; j < e && NSM.has(cp = decomposed[j]); j++) {\r\n\t\t\t\t\t// a. Forbid sequences of the same nonspacing mark.\r\n\t\t\t\t\tfor (let k = i; k < j; k++) { // O(n^2) but n < 100\r\n\t\t\t\t\t\tif (decomposed[k] == cp) {\r\n\t\t\t\t\t\t\tthrow new Error(`duplicate non-spacing marks: ${quoted_cp(cp)}`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// parse to end so we have full nsm count\r\n\t\t\t\t// b. Forbid sequences of more than 4 nonspacing marks (gc=Mn or gc=Me).\r\n\t\t\t\tif (j - i > NSM_MAX) {\r\n\t\t\t\t\t// note: this slice starts with a base char or spacing-mark cm\r\n\t\t\t\t\tthrow new Error(`excessive non-spacing marks: ${bidi_qq(safe_str_from_cps(decomposed.slice(i-1, j)))} (${j-i}/${NSM_MAX})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// *** this code currently isn't needed ***\r\n\t/*\r\n\tlet cm_whitelist = M instanceof Map;\r\n\tfor (let i = 0, e = cps.length; i < e; ) {\r\n\t\tlet cp = cps[i++];\r\n\t\tlet seqs = cm_whitelist && M.get(cp);\r\n\t\tif (seqs) { \r\n\t\t\t// list of codepoints that can follow\r\n\t\t\t// if this exists, this will always be 1+\r\n\t\t\tlet j = i;\r\n\t\t\twhile (j < e && CM.has(cps[j])) j++;\r\n\t\t\tlet cms = cps.slice(i, j);\r\n\t\t\tlet match = seqs.find(seq => !compare_arrays(seq, cms));\r\n\t\t\tif (!match) throw new Error(`disallowed combining mark sequence: \"${safe_str_from_cps([cp, ...cms])}\"`);\r\n\t\t\ti = j;\r\n\t\t} else if (!V.has(cp)) {\r\n\t\t\t// https://www.unicode.org/reports/tr39/#mixed_script_confusables\r\n\t\t\tlet quoted = quoted_cp(cp);\r\n\t\t\tfor (let cp of cps) {\r\n\t\t\t\tlet u = UNIQUE.get(cp);\r\n\t\t\t\tif (u && u !== g) {\r\n\t\t\t\t\t// if both scripts are restricted this error is confusing\r\n\t\t\t\t\t// because we don't differentiate RestrictedA from RestrictedB \r\n\t\t\t\t\tif (!u.R) quoted = `${quoted} is ${u.N}`;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthrow new Error(`disallowed ${g.N} character: ${quoted}`);\r\n\t\t\t//throw new Error(`disallowed character: ${quoted} (expected ${g.N})`);\r\n\t\t\t//throw new Error(`${g.N} does not allow: ${quoted}`);\r\n\t\t}\r\n\t}\r\n\tif (!cm_whitelist) {\r\n\t\tlet decomposed = nfd(cps);\r\n\t\tfor (let i = 1, e = decomposed.length; i < e; i++) { // we know it can't be cm leading\r\n\t\t\tif (CM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\twhile (j < e && CM.has(decomposed[j])) j++;\r\n\t\t\t\tif (j - i > M) {\r\n\t\t\t\t\tthrow new Error(`too many combining marks: \"${str_from_cps(decomposed.slice(i-1, j))}\" (${j-i}/${M})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t*/\r\n}\r\n\r\n// given a list of codepoints\r\n// returns a list of lists, where emoji are a fully-qualified (as Array subclass)\r\n// eg. explode_cp(\"abc💩d\") => [[61, 62, 63], Emoji[1F4A9, FE0F], [64]]\r\n// 20230818: rename for 'process' name collision h/t Javarome\r\n// https://github.com/adraffy/ens-normalize.js/issues/23\r\nfunction tokens_from_str(input, nf, ef) {\r\n\tlet ret = [];\r\n\tlet chars = [];\r\n\tinput = input.slice().reverse(); // flip so we can pop\r\n\twhile (input.length) {\r\n\t\tlet emoji = consume_emoji_reversed(input);\r\n\t\tif (emoji) {\r\n\t\t\tif (chars.length) {\r\n\t\t\t\tret.push(nf(chars));\r\n\t\t\t\tchars = [];\r\n\t\t\t}\r\n\t\t\tret.push(ef(emoji));\r\n\t\t} else {\r\n\t\t\tlet cp = input.pop();\r\n\t\t\tif (VALID.has(cp)) {\r\n\t\t\t\tchars.push(cp);\r\n\t\t\t} else {\r\n\t\t\t\tlet cps = MAPPED.get(cp);\r\n\t\t\t\tif (cps) {\r\n\t\t\t\t\tchars.push(...cps); // less than 10 elements\r\n\t\t\t\t} else if (!IGNORED.has(cp)) {\r\n\t\t\t\t\t// 20230912: unicode 15.1 changed the order of processing such that\r\n\t\t\t\t\t// disallowed parts are only rejected after NFC\r\n\t\t\t\t\t// https://unicode.org/reports/tr46/#Validity_Criteria\r\n\t\t\t\t\t// this doesn't impact normalization as of today\r\n\t\t\t\t\t// technically, this error can be removed as the group logic will apply similar logic\r\n\t\t\t\t\t// however the error type might be less clear\r\n\t\t\t\t\tthrow error_disallowed(cp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (chars.length) {\r\n\t\tret.push(nf(chars));\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction filter_fe0f(cps) {\r\n\treturn cps.filter(cp => cp != FE0F);\r\n}\r\n\r\n// given array of codepoints\r\n// returns the longest valid emoji sequence (or undefined if no match)\r\n// *MUTATES* the supplied array\r\n// disallows interleaved ignored characters\r\n// fills (optional) eaten array with matched codepoints\r\nfunction consume_emoji_reversed(cps, eaten) {\r\n\tlet node = EMOJI_ROOT;\r\n\tlet emoji;\r\n\tlet pos = cps.length;\r\n\twhile (pos) {\r\n\t\tnode = node.get(cps[--pos]);\r\n\t\tif (!node) break;\r\n\t\tlet {V} = node;\r\n\t\tif (V) { // this is a valid emoji (so far)\r\n\t\t\temoji = V;\r\n\t\t\tif (eaten) eaten.push(...cps.slice(pos).reverse()); // (optional) copy input, used for ens_tokenize()\r\n\t\t\tcps.length = pos; // truncate\r\n\t\t}\r\n\t}\r\n\treturn emoji;\r\n}\r\n\r\n// ************************************************************\r\n// tokenizer \r\n\r\nconst TY_VALID = 'valid';\r\nconst TY_MAPPED = 'mapped';\r\nconst TY_IGNORED = 'ignored';\r\nconst TY_DISALLOWED = 'disallowed';\r\nconst TY_EMOJI = 'emoji';\r\nconst TY_NFC = 'nfc';\r\nconst TY_STOP = 'stop';\r\n\r\nfunction ens_tokenize(name, {\r\n\tnf = true, // collapse unnormalized runs into a single token\r\n} = {}) {\r\n\tinit();\r\n\tlet input = explode_cp(name).reverse();\r\n\tlet eaten = [];\r\n\tlet tokens = [];\r\n\twhile (input.length) {\r\n\t\tlet emoji = consume_emoji_reversed(input, eaten);\r\n\t\tif (emoji) {\r\n\t\t\ttokens.push({\r\n\t\t\t\ttype: TY_EMOJI,\r\n\t\t\t\temoji: emoji.slice(), // copy emoji\r\n\t\t\t\tinput: eaten,\r\n\t\t\t\tcps: filter_fe0f(emoji)\r\n\t\t\t});\r\n\t\t\teaten = []; // reset buffer\r\n\t\t} else {\r\n\t\t\tlet cp = input.pop();\r\n\t\t\tif (cp == STOP) {\r\n\t\t\t\ttokens.push({type: TY_STOP, cp});\r\n\t\t\t} else if (VALID.has(cp)) {\r\n\t\t\t\ttokens.push({type: TY_VALID, cps: [cp]});\r\n\t\t\t} else if (IGNORED.has(cp)) {\r\n\t\t\t\ttokens.push({type: TY_IGNORED, cp});\r\n\t\t\t} else {\r\n\t\t\t\tlet cps = MAPPED.get(cp);\r\n\t\t\t\tif (cps) {\r\n\t\t\t\t\ttokens.push({type: TY_MAPPED, cp, cps: cps.slice()});\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttokens.push({type: TY_DISALLOWED, cp});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (nf) {\r\n\t\tfor (let i = 0, start = -1; i < tokens.length; i++) {\r\n\t\t\tlet token = tokens[i];\r\n\t\t\tif (is_valid_or_mapped(token.type)) {\r\n\t\t\t\tif (requires_check(token.cps)) { // normalization might be needed\r\n\t\t\t\t\tlet end = i + 1;\r\n\t\t\t\t\tfor (let pos = end; pos < tokens.length; pos++) { // find adjacent text\r\n\t\t\t\t\t\tlet {type, cps} = tokens[pos];\r\n\t\t\t\t\t\tif (is_valid_or_mapped(type)) {\r\n\t\t\t\t\t\t\tif (!requires_check(cps)) break;\r\n\t\t\t\t\t\t\tend = pos + 1;\r\n\t\t\t\t\t\t} else if (type !== TY_IGNORED) { // || type !== TY_DISALLOWED) { \r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (start < 0) start = i;\r\n\t\t\t\t\tlet slice = tokens.slice(start, end);\r\n\t\t\t\t\tlet cps0 = slice.flatMap(x => is_valid_or_mapped(x.type) ? x.cps : []); // strip junk tokens\r\n\t\t\t\t\tlet cps = nfc(cps0);\r\n\t\t\t\t\tif (compare_arrays(cps, cps0)) { // bundle into an nfc token\r\n\t\t\t\t\t\ttokens.splice(start, end - start, {\r\n\t\t\t\t\t\t\ttype: TY_NFC, \r\n\t\t\t\t\t\t\tinput: cps0, // there are 3 states: tokens0 ==(process)=> input ==(nfc)=> tokens/cps\r\n\t\t\t\t\t\t\tcps, \r\n\t\t\t\t\t\t\ttokens0: collapse_valid_tokens(slice),\r\n\t\t\t\t\t\t\ttokens: ens_tokenize(str_from_cps(cps), {nf: false})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\ti = start;\r\n\t\t\t\t\t} else { \r\n\t\t\t\t\t\ti = end - 1; // skip to end of slice\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstart = -1; // reset\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstart = i; // remember last\r\n\t\t\t\t}\r\n\t\t\t} else if (token.type !== TY_IGNORED) { // 20221024: is this correct?\r\n\t\t\t\tstart = -1; // reset\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn collapse_valid_tokens(tokens);\r\n}\r\n\r\nfunction is_valid_or_mapped(type) {\r\n\treturn type == TY_VALID || type == TY_MAPPED;\r\n}\r\n\r\nfunction requires_check(cps) {\r\n\treturn cps.some(cp => NFC_CHECK.has(cp));\r\n}\r\n\r\nfunction collapse_valid_tokens(tokens) {\r\n\tfor (let i = 0; i < tokens.length; i++) {\r\n\t\tif (tokens[i].type == TY_VALID) {\r\n\t\t\tlet j = i + 1;\r\n\t\t\twhile (j < tokens.length && tokens[j].type == TY_VALID) j++;\r\n\t\t\ttokens.splice(i, j - i, {type: TY_VALID, cps: tokens.slice(i, j).flatMap(x => x.cps)});\r\n\t\t}\r\n\t}\r\n\treturn tokens;\r\n}\r\n\r\nexport { ens_beautify, ens_emoji, ens_normalize, ens_normalize_fragment, ens_split, ens_tokenize, is_combining_mark, nfc, nfd, safe_str_from_cps, should_escape };\r\n", "import { ens_normalize } from '@adraffy/ens-normalize'\r\nimport type { ErrorType } from '../../errors/utils.js'\r\n\r\nexport type NormalizeErrorType = ErrorType\r\n\r\n/**\r\n * @description Normalizes ENS name according to ENSIP-15.\r\n *\r\n * @example\r\n * normalize('wevm.eth')\r\n * 'wevm.eth'\r\n *\r\n * @see https://docs.ens.domains/contract-api-reference/name-processing#normalising-names\r\n * @see https://github.com/ensdomains/docs/blob/9edf9443de4333a0ea7ec658a870672d5d180d53/ens-improvement-proposals/ensip-15-normalization-standard.md\r\n */\r\nexport function normalize(name: string) {\r\n  return ens_normalize(name)\r\n}\r\n", "import type {\r\n  CoinbaseWalletSDK,\r\n  Preference,\r\n  ProviderInterface,\r\n} from '@coinbase/wallet-sdk'\r\nimport {\r\n  ChainNotConfiguredError,\r\n  type Connector,\r\n  createConnector,\r\n} from '@wagmi/core'\r\nimport type { Compute, Mutable, Omit } from '@wagmi/core/internal'\r\nimport type {\r\n  CoinbaseWalletProvider as CBW_Provider,\r\n  CoinbaseWalletSDK as CBW_SDK,\r\n} from 'cbw-sdk'\r\nimport {\r\n  type AddEthereumChainParameter,\r\n  type Hex,\r\n  type ProviderRpcError,\r\n  SwitchChainError,\r\n  UserRejectedRequestError,\r\n  getAddress,\r\n  numberToHex,\r\n} from 'viem'\r\n\r\ntype Version = '3' | '4'\r\n\r\nexport type CoinbaseWalletParameters<version extends Version = '3'> =\r\n  version extends '4'\r\n    ? Compute<\r\n        {\r\n          headlessMode?: false | undefined\r\n          /** Coinbase Wallet SDK version */\r\n          version?: version | '3' | undefined\r\n        } & Version4Parameters\r\n      >\r\n    : Compute<\r\n        {\r\n          /**\r\n           * @deprecated `headlessMode` will be removed in the next major version. Upgrade to `version: '4'`.\r\n           */\r\n          headlessMode?: true | undefined\r\n          /**\r\n           * Coinbase Wallet SDK version\r\n           * @deprecated Version 3 will be removed in the next major version. Upgrade to `version: '4'`.\r\n           * @default '4'\r\n           */\r\n          version?: version | '4' | undefined\r\n        } & Version3Parameters\r\n      >\r\n\r\ncoinbaseWallet.type = 'coinbaseWallet' as const\r\nexport function coinbaseWallet<version extends Version>(\r\n  parameters: CoinbaseWalletParameters<version> = {} as any,\r\n): version extends '4'\r\n  ? ReturnType<typeof version4>\r\n  : ReturnType<typeof version3> {\r\n  if (parameters.version === '3' || parameters.headlessMode)\r\n    return version3(parameters as Version3Parameters) as any\r\n  return version4(parameters as Version4Parameters) as any\r\n}\r\n\r\ntype Version4Parameters = Mutable<\r\n  Omit<\r\n    ConstructorParameters<typeof CoinbaseWalletSDK>[0],\r\n    'appChainIds' // set via wagmi config\r\n  > & {\r\n    /**\r\n     * Preference for the type of wallet to display.\r\n     * @default 'all'\r\n     */\r\n    preference?: Preference['options'] | undefined\r\n  }\r\n>\r\n\r\nfunction version4(parameters: Version4Parameters) {\r\n  type Provider = ProviderInterface & {\r\n    // for backwards compatibility\r\n    close?(): void\r\n  }\r\n\r\n  let sdk: CoinbaseWalletSDK | undefined\r\n  let walletProvider: Provider | undefined\r\n\r\n  let accountsChanged: Connector['onAccountsChanged'] | undefined\r\n  let chainChanged: Connector['onChainChanged'] | undefined\r\n  let disconnect: Connector['onDisconnect'] | undefined\r\n\r\n  return createConnector<Provider>((config) => ({\r\n    id: 'coinbaseWalletSDK',\r\n    name: 'Coinbase Wallet',\r\n    supportsSimulation: true,\r\n    type: coinbaseWallet.type,\r\n    async connect({ chainId } = {}) {\r\n      try {\r\n        const provider = await this.getProvider()\r\n        const accounts = (\r\n          (await provider.request({\r\n            method: 'eth_requestAccounts',\r\n          })) as string[]\r\n        ).map((x) => getAddress(x))\r\n\r\n        if (!accountsChanged) {\r\n          accountsChanged = this.onAccountsChanged.bind(this)\r\n          provider.on('accountsChanged', accountsChanged)\r\n        }\r\n        if (!chainChanged) {\r\n          chainChanged = this.onChainChanged.bind(this)\r\n          provider.on('chainChanged', chainChanged)\r\n        }\r\n        if (!disconnect) {\r\n          disconnect = this.onDisconnect.bind(this)\r\n          provider.on('disconnect', disconnect)\r\n        }\r\n\r\n        // Switch to chain if provided\r\n        let currentChainId = await this.getChainId()\r\n        if (chainId && currentChainId !== chainId) {\r\n          const chain = await this.switchChain!({ chainId }).catch((error) => {\r\n            if (error.code === UserRejectedRequestError.code) throw error\r\n            return { id: currentChainId }\r\n          })\r\n          currentChainId = chain?.id ?? currentChainId\r\n        }\r\n\r\n        return { accounts, chainId: currentChainId }\r\n      } catch (error) {\r\n        if (\r\n          /(user closed modal|accounts received is empty|user denied account|request rejected)/i.test(\r\n            (error as Error).message,\r\n          )\r\n        )\r\n          throw new UserRejectedRequestError(error as Error)\r\n        throw error\r\n      }\r\n    },\r\n    async disconnect() {\r\n      const provider = await this.getProvider()\r\n\r\n      if (accountsChanged) {\r\n        provider.removeListener('accountsChanged', accountsChanged)\r\n        accountsChanged = undefined\r\n      }\r\n      if (chainChanged) {\r\n        provider.removeListener('chainChanged', chainChanged)\r\n        chainChanged = undefined\r\n      }\r\n      if (disconnect) {\r\n        provider.removeListener('disconnect', disconnect)\r\n        disconnect = undefined\r\n      }\r\n\r\n      provider.disconnect()\r\n      provider.close?.()\r\n    },\r\n    async getAccounts() {\r\n      const provider = await this.getProvider()\r\n      return (\r\n        await provider.request<string[]>({\r\n          method: 'eth_accounts',\r\n        })\r\n      ).map((x) => getAddress(x))\r\n    },\r\n    async getChainId() {\r\n      const provider = await this.getProvider()\r\n      const chainId = await provider.request<Hex>({\r\n        method: 'eth_chainId',\r\n      })\r\n      return Number(chainId)\r\n    },\r\n    async getProvider() {\r\n      if (!walletProvider) {\r\n        // Unwrapping import for Vite compatibility.\r\n        // See: https://github.com/vitejs/vite/issues/9703\r\n        const CoinbaseWalletSDK = await (async () => {\r\n          const { default: SDK } = await import('@coinbase/wallet-sdk')\r\n          if (typeof SDK !== 'function' && typeof SDK.default === 'function')\r\n            return SDK.default\r\n          return SDK as unknown as typeof SDK.default\r\n        })()\r\n\r\n        sdk = new CoinbaseWalletSDK({\r\n          ...parameters,\r\n          appChainIds: config.chains.map((x) => x.id),\r\n        })\r\n\r\n        walletProvider = sdk.makeWeb3Provider({\r\n          ...parameters,\r\n          options: parameters.preference ?? 'all',\r\n        })\r\n      }\r\n\r\n      return walletProvider\r\n    },\r\n    async isAuthorized() {\r\n      try {\r\n        const accounts = await this.getAccounts()\r\n        return !!accounts.length\r\n      } catch {\r\n        return false\r\n      }\r\n    },\r\n    async switchChain({ addEthereumChainParameter, chainId }) {\r\n      const chain = config.chains.find((chain) => chain.id === chainId)\r\n      if (!chain) throw new SwitchChainError(new ChainNotConfiguredError())\r\n\r\n      const provider = await this.getProvider()\r\n\r\n      try {\r\n        await provider.request({\r\n          method: 'wallet_switchEthereumChain',\r\n          params: [{ chainId: numberToHex(chain.id) }],\r\n        })\r\n        return chain\r\n      } catch (error) {\r\n        // Indicates chain is not added to provider\r\n        if ((error as ProviderRpcError).code === 4902) {\r\n          try {\r\n            let blockExplorerUrls: string[] | undefined\r\n            if (addEthereumChainParameter?.blockExplorerUrls)\r\n              blockExplorerUrls = addEthereumChainParameter.blockExplorerUrls\r\n            else\r\n              blockExplorerUrls = chain.blockExplorers?.default.url\r\n                ? [chain.blockExplorers?.default.url]\r\n                : []\r\n\r\n            let rpcUrls: readonly string[]\r\n            if (addEthereumChainParameter?.rpcUrls?.length)\r\n              rpcUrls = addEthereumChainParameter.rpcUrls\r\n            else rpcUrls = [chain.rpcUrls.default?.http[0] ?? '']\r\n\r\n            const addEthereumChain = {\r\n              blockExplorerUrls,\r\n              chainId: numberToHex(chainId),\r\n              chainName: addEthereumChainParameter?.chainName ?? chain.name,\r\n              iconUrls: addEthereumChainParameter?.iconUrls,\r\n              nativeCurrency:\r\n                addEthereumChainParameter?.nativeCurrency ??\r\n                chain.nativeCurrency,\r\n              rpcUrls,\r\n            } satisfies AddEthereumChainParameter\r\n\r\n            await provider.request({\r\n              method: 'wallet_addEthereumChain',\r\n              params: [addEthereumChain],\r\n            })\r\n\r\n            return chain\r\n          } catch (error) {\r\n            throw new UserRejectedRequestError(error as Error)\r\n          }\r\n        }\r\n\r\n        throw new SwitchChainError(error as Error)\r\n      }\r\n    },\r\n    onAccountsChanged(accounts) {\r\n      if (accounts.length === 0) this.onDisconnect()\r\n      else\r\n        config.emitter.emit('change', {\r\n          accounts: accounts.map((x) => getAddress(x)),\r\n        })\r\n    },\r\n    onChainChanged(chain) {\r\n      const chainId = Number(chain)\r\n      config.emitter.emit('change', { chainId })\r\n    },\r\n    async onDisconnect(_error) {\r\n      config.emitter.emit('disconnect')\r\n\r\n      const provider = await this.getProvider()\r\n      if (accountsChanged) {\r\n        provider.removeListener('accountsChanged', accountsChanged)\r\n        accountsChanged = undefined\r\n      }\r\n      if (chainChanged) {\r\n        provider.removeListener('chainChanged', chainChanged)\r\n        chainChanged = undefined\r\n      }\r\n      if (disconnect) {\r\n        provider.removeListener('disconnect', disconnect)\r\n        disconnect = undefined\r\n      }\r\n    },\r\n  }))\r\n}\r\n\r\ntype Version3Parameters = Mutable<\r\n  Omit<\r\n    ConstructorParameters<typeof CBW_SDK>[0],\r\n    'reloadOnDisconnect' // remove property since TSDoc says default is `true`\r\n  >\r\n> & {\r\n  /**\r\n   * Fallback Ethereum JSON RPC URL\r\n   * @default \"\"\r\n   */\r\n  jsonRpcUrl?: string | undefined\r\n  /**\r\n   * Fallback Ethereum Chain ID\r\n   * @default 1\r\n   */\r\n  chainId?: number | undefined\r\n  /**\r\n   * Whether or not to reload dapp automatically after disconnect.\r\n   * @default false\r\n   */\r\n  reloadOnDisconnect?: boolean | undefined\r\n}\r\n\r\nfunction version3(parameters: Version3Parameters) {\r\n  const reloadOnDisconnect = false\r\n\r\n  type Provider = CBW_Provider\r\n\r\n  let sdk: CBW_SDK | undefined\r\n  let walletProvider: Provider | undefined\r\n\r\n  let accountsChanged: Connector['onAccountsChanged'] | undefined\r\n  let chainChanged: Connector['onChainChanged'] | undefined\r\n  let disconnect: Connector['onDisconnect'] | undefined\r\n\r\n  return createConnector<Provider>((config) => ({\r\n    id: 'coinbaseWalletSDK',\r\n    name: 'Coinbase Wallet',\r\n    supportsSimulation: true,\r\n    type: coinbaseWallet.type,\r\n    async connect({ chainId } = {}) {\r\n      try {\r\n        const provider = await this.getProvider()\r\n        const accounts = (\r\n          (await provider.request({\r\n            method: 'eth_requestAccounts',\r\n          })) as string[]\r\n        ).map((x) => getAddress(x))\r\n\r\n        if (!accountsChanged) {\r\n          accountsChanged = this.onAccountsChanged.bind(this)\r\n          provider.on('accountsChanged', accountsChanged)\r\n        }\r\n        if (!chainChanged) {\r\n          chainChanged = this.onChainChanged.bind(this)\r\n          provider.on('chainChanged', chainChanged)\r\n        }\r\n        if (!disconnect) {\r\n          disconnect = this.onDisconnect.bind(this)\r\n          provider.on('disconnect', disconnect)\r\n        }\r\n\r\n        // Switch to chain if provided\r\n        let currentChainId = await this.getChainId()\r\n        if (chainId && currentChainId !== chainId) {\r\n          const chain = await this.switchChain!({ chainId }).catch((error) => {\r\n            if (error.code === UserRejectedRequestError.code) throw error\r\n            return { id: currentChainId }\r\n          })\r\n          currentChainId = chain?.id ?? currentChainId\r\n        }\r\n\r\n        return { accounts, chainId: currentChainId }\r\n      } catch (error) {\r\n        if (\r\n          /(user closed modal|accounts received is empty|user denied account)/i.test(\r\n            (error as Error).message,\r\n          )\r\n        )\r\n          throw new UserRejectedRequestError(error as Error)\r\n        throw error\r\n      }\r\n    },\r\n    async disconnect() {\r\n      const provider = await this.getProvider()\r\n\r\n      if (accountsChanged) {\r\n        provider.removeListener('accountsChanged', accountsChanged)\r\n        accountsChanged = undefined\r\n      }\r\n      if (chainChanged) {\r\n        provider.removeListener('chainChanged', chainChanged)\r\n        chainChanged = undefined\r\n      }\r\n      if (disconnect) {\r\n        provider.removeListener('disconnect', disconnect)\r\n        disconnect = undefined\r\n      }\r\n\r\n      provider.disconnect()\r\n      provider.close()\r\n    },\r\n    async getAccounts() {\r\n      const provider = await this.getProvider()\r\n      return (\r\n        await provider.request<string[]>({\r\n          method: 'eth_accounts',\r\n        })\r\n      ).map((x) => getAddress(x))\r\n    },\r\n    async getChainId() {\r\n      const provider = await this.getProvider()\r\n      const chainId = await provider.request<Hex>({\r\n        method: 'eth_chainId',\r\n      })\r\n      return Number(chainId)\r\n    },\r\n    async getProvider() {\r\n      if (!walletProvider) {\r\n        // Unwrapping import for Vite compatibility.\r\n        // See: https://github.com/vitejs/vite/issues/9703\r\n        const CoinbaseWalletSDK = await (async () => {\r\n          const { default: SDK } = await import('cbw-sdk')\r\n          if (typeof SDK !== 'function' && typeof SDK.default === 'function')\r\n            return SDK.default\r\n          return SDK as unknown as typeof SDK.default\r\n        })()\r\n\r\n        sdk = new CoinbaseWalletSDK({ ...parameters, reloadOnDisconnect })\r\n\r\n        // Force types to retrieve private `walletExtension` method from the Coinbase Wallet SDK.\r\n        const walletExtensionChainId = (\r\n          sdk as unknown as {\r\n            get walletExtension(): { getChainId(): number } | undefined\r\n          }\r\n        ).walletExtension?.getChainId()\r\n\r\n        const chain =\r\n          config.chains.find((chain) =>\r\n            parameters.chainId\r\n              ? chain.id === parameters.chainId\r\n              : chain.id === walletExtensionChainId,\r\n          ) || config.chains[0]\r\n        const chainId = parameters.chainId || chain?.id\r\n        const jsonRpcUrl =\r\n          parameters.jsonRpcUrl || chain?.rpcUrls.default.http[0]\r\n\r\n        walletProvider = sdk.makeWeb3Provider(jsonRpcUrl, chainId)\r\n      }\r\n\r\n      return walletProvider\r\n    },\r\n    async isAuthorized() {\r\n      try {\r\n        const accounts = await this.getAccounts()\r\n        return !!accounts.length\r\n      } catch {\r\n        return false\r\n      }\r\n    },\r\n    async switchChain({ addEthereumChainParameter, chainId }) {\r\n      const chain = config.chains.find((chain) => chain.id === chainId)\r\n      if (!chain) throw new SwitchChainError(new ChainNotConfiguredError())\r\n\r\n      const provider = await this.getProvider()\r\n\r\n      try {\r\n        await provider.request({\r\n          method: 'wallet_switchEthereumChain',\r\n          params: [{ chainId: numberToHex(chain.id) }],\r\n        })\r\n        return chain\r\n      } catch (error) {\r\n        // Indicates chain is not added to provider\r\n        if ((error as ProviderRpcError).code === 4902) {\r\n          try {\r\n            let blockExplorerUrls: string[] | undefined\r\n            if (addEthereumChainParameter?.blockExplorerUrls)\r\n              blockExplorerUrls = addEthereumChainParameter.blockExplorerUrls\r\n            else\r\n              blockExplorerUrls = chain.blockExplorers?.default.url\r\n                ? [chain.blockExplorers?.default.url]\r\n                : []\r\n\r\n            let rpcUrls: readonly string[]\r\n            if (addEthereumChainParameter?.rpcUrls?.length)\r\n              rpcUrls = addEthereumChainParameter.rpcUrls\r\n            else rpcUrls = [chain.rpcUrls.default?.http[0] ?? '']\r\n\r\n            const addEthereumChain = {\r\n              blockExplorerUrls,\r\n              chainId: numberToHex(chainId),\r\n              chainName: addEthereumChainParameter?.chainName ?? chain.name,\r\n              iconUrls: addEthereumChainParameter?.iconUrls,\r\n              nativeCurrency:\r\n                addEthereumChainParameter?.nativeCurrency ??\r\n                chain.nativeCurrency,\r\n              rpcUrls,\r\n            } satisfies AddEthereumChainParameter\r\n\r\n            await provider.request({\r\n              method: 'wallet_addEthereumChain',\r\n              params: [addEthereumChain],\r\n            })\r\n\r\n            return chain\r\n          } catch (error) {\r\n            throw new UserRejectedRequestError(error as Error)\r\n          }\r\n        }\r\n\r\n        throw new SwitchChainError(error as Error)\r\n      }\r\n    },\r\n    onAccountsChanged(accounts) {\r\n      if (accounts.length === 0) this.onDisconnect()\r\n      else\r\n        config.emitter.emit('change', {\r\n          accounts: accounts.map((x) => getAddress(x)),\r\n        })\r\n    },\r\n    onChainChanged(chain) {\r\n      const chainId = Number(chain)\r\n      config.emitter.emit('change', { chainId })\r\n    },\r\n    async onDisconnect(_error) {\r\n      config.emitter.emit('disconnect')\r\n\r\n      const provider = await this.getProvider()\r\n      if (accountsChanged) {\r\n        provider.removeListener('accountsChanged', accountsChanged)\r\n        accountsChanged = undefined\r\n      }\r\n      if (chainChanged) {\r\n        provider.removeListener('chainChanged', chainChanged)\r\n        chainChanged = undefined\r\n      }\r\n      if (disconnect) {\r\n        provider.removeListener('disconnect', disconnect)\r\n        disconnect = undefined\r\n      }\r\n    },\r\n  }))\r\n}\r\n", "import {\r\n  ChainNotConfiguredError,\r\n  type Connector,\r\n  ProviderNotFoundError,\r\n  createConnector,\r\n  extractRpcUrls,\r\n} from '@wagmi/core'\r\nimport type { Compute, ExactPartial, Omit } from '@wagmi/core/internal'\r\nimport type { EthereumProvider } from '@walletconnect/ethereum-provider'\r\nimport {\r\n  type AddEthereumChainParameter,\r\n  type Address,\r\n  type ProviderConnectInfo,\r\n  type ProviderRpcError,\r\n  type RpcError,\r\n  SwitchChainError,\r\n  UserRejectedRequestError,\r\n  getAddress,\r\n  numberToHex,\r\n} from 'viem'\r\n\r\ntype WalletConnectConnector = Connector & {\r\n  onDisplayUri(uri: string): void\r\n  onSessionDelete(data: { topic: string }): void\r\n}\r\n\r\ntype EthereumProviderOptions = Parameters<(typeof EthereumProvider)['init']>[0]\r\n\r\nexport type WalletConnectParameters = Compute<\r\n  {\r\n    /**\r\n     * If a new chain is added to a previously existing configured connector `chains`, this flag\r\n     * will determine if that chain should be considered as stale. A stale chain is a chain that\r\n     * WalletConnect has yet to establish a relationship with (e.g. the user has not approved or\r\n     * rejected the chain).\r\n     *\r\n     * This flag mainly affects the behavior when a wallet does not support dynamic chain authorization\r\n     * with WalletConnect v2.\r\n     *\r\n     * If `true` (default), the new chain will be treated as a stale chain. If the user\r\n     * has yet to establish a relationship (approved/rejected) with this chain in their WalletConnect\r\n     * session, the connector will disconnect upon the dapp auto-connecting, and the user will have to\r\n     * reconnect to the dapp (revalidate the chain) in order to approve the newly added chain.\r\n     * This is the default behavior to avoid an unexpected error upon switching chains which may\r\n     * be a confusing user experience (e.g. the user will not know they have to reconnect\r\n     * unless the dapp handles these types of errors).\r\n     *\r\n     * If `false`, the new chain will be treated as a potentially valid chain. This means that if the user\r\n     * has yet to establish a relationship with the chain in their WalletConnect session, wagmi will successfully\r\n     * auto-connect the user. This comes with the trade-off that the connector will throw an error\r\n     * when attempting to switch to the unapproved chain if the wallet does not support dynamic session updates.\r\n     * This may be useful in cases where a dapp constantly\r\n     * modifies their configured chains, and they do not want to disconnect the user upon\r\n     * auto-connecting. If the user decides to switch to the unapproved chain, it is important that the\r\n     * dapp handles this error and prompts the user to reconnect to the dapp in order to approve\r\n     * the newly added chain.\r\n     *\r\n     * @default true\r\n     */\r\n    isNewChainsStale?: boolean\r\n  } & Omit<\r\n    EthereumProviderOptions,\r\n    | 'chains'\r\n    | 'events'\r\n    | 'optionalChains'\r\n    | 'optionalEvents'\r\n    | 'optionalMethods'\r\n    | 'methods'\r\n    | 'rpcMap'\r\n    | 'showQrModal'\r\n  > &\r\n    ExactPartial<Pick<EthereumProviderOptions, 'showQrModal'>>\r\n>\r\n\r\nwalletConnect.type = 'walletConnect' as const\r\nexport function walletConnect(parameters: WalletConnectParameters) {\r\n  const isNewChainsStale = parameters.isNewChainsStale ?? true\r\n\r\n  type Provider = Awaited<ReturnType<(typeof EthereumProvider)['init']>>\r\n  type Properties = {\r\n    connect(parameters?: { chainId?: number; pairingTopic?: string }): Promise<{\r\n      accounts: readonly Address[]\r\n      chainId: number\r\n    }>\r\n    getNamespaceChainsIds(): number[]\r\n    getRequestedChainsIds(): Promise<number[]>\r\n    isChainsStale(): Promise<boolean>\r\n    onConnect(connectInfo: ProviderConnectInfo): void\r\n    onDisplayUri(uri: string): void\r\n    onSessionDelete(data: { topic: string }): void\r\n    setRequestedChainsIds(chains: number[]): void\r\n    requestedChainsStorageKey: `${string}.requestedChains`\r\n  }\r\n  type StorageItem = {\r\n    [_ in Properties['requestedChainsStorageKey']]: number[]\r\n  }\r\n\r\n  let provider_: Provider | undefined\r\n  let providerPromise: Promise<typeof provider_>\r\n  const NAMESPACE = 'eip155'\r\n\r\n  let accountsChanged: WalletConnectConnector['onAccountsChanged'] | undefined\r\n  let chainChanged: WalletConnectConnector['onChainChanged'] | undefined\r\n  let connect: WalletConnectConnector['onConnect'] | undefined\r\n  let displayUri: WalletConnectConnector['onDisplayUri'] | undefined\r\n  let sessionDelete: WalletConnectConnector['onSessionDelete'] | undefined\r\n  let disconnect: WalletConnectConnector['onDisconnect'] | undefined\r\n\r\n  return createConnector<Provider, Properties, StorageItem>((config) => ({\r\n    id: 'walletConnect',\r\n    name: 'WalletConnect',\r\n    type: walletConnect.type,\r\n    async setup() {\r\n      const provider = await this.getProvider().catch(() => null)\r\n      if (!provider) return\r\n      if (!connect) {\r\n        connect = this.onConnect.bind(this)\r\n        provider.on('connect', connect)\r\n      }\r\n      if (!sessionDelete) {\r\n        sessionDelete = this.onSessionDelete.bind(this)\r\n        provider.on('session_delete', sessionDelete)\r\n      }\r\n    },\r\n    async connect({ chainId, ...rest } = {}) {\r\n      try {\r\n        const provider = await this.getProvider()\r\n        if (!provider) throw new ProviderNotFoundError()\r\n        if (!displayUri) {\r\n          displayUri = this.onDisplayUri\r\n          provider.on('display_uri', displayUri)\r\n        }\r\n\r\n        let targetChainId = chainId\r\n        if (!targetChainId) {\r\n          const state = (await config.storage?.getItem('state')) ?? {}\r\n          const isChainSupported = config.chains.some(\r\n            (x) => x.id === state.chainId,\r\n          )\r\n          if (isChainSupported) targetChainId = state.chainId\r\n          else targetChainId = config.chains[0]?.id\r\n        }\r\n        if (!targetChainId) throw new Error('No chains found on connector.')\r\n\r\n        const isChainsStale = await this.isChainsStale()\r\n        // If there is an active session with stale chains, disconnect current session.\r\n        if (provider.session && isChainsStale) await provider.disconnect()\r\n\r\n        // If there isn't an active session or chains are stale, connect.\r\n        if (!provider.session || isChainsStale) {\r\n          const optionalChains = config.chains\r\n            .filter((chain) => chain.id !== targetChainId)\r\n            .map((optionalChain) => optionalChain.id)\r\n          await provider.connect({\r\n            optionalChains: [targetChainId, ...optionalChains],\r\n            ...('pairingTopic' in rest\r\n              ? { pairingTopic: rest.pairingTopic }\r\n              : {}),\r\n          })\r\n\r\n          this.setRequestedChainsIds(config.chains.map((x) => x.id))\r\n        }\r\n\r\n        // If session exists and chains are authorized, enable provider for required chain\r\n        const accounts = (await provider.enable()).map((x) => getAddress(x))\r\n        const currentChainId = await this.getChainId()\r\n\r\n        if (displayUri) {\r\n          provider.removeListener('display_uri', displayUri)\r\n          displayUri = undefined\r\n        }\r\n        if (connect) {\r\n          provider.removeListener('connect', connect)\r\n          connect = undefined\r\n        }\r\n        if (!accountsChanged) {\r\n          accountsChanged = this.onAccountsChanged.bind(this)\r\n          provider.on('accountsChanged', accountsChanged)\r\n        }\r\n        if (!chainChanged) {\r\n          chainChanged = this.onChainChanged.bind(this)\r\n          provider.on('chainChanged', chainChanged)\r\n        }\r\n        if (!disconnect) {\r\n          disconnect = this.onDisconnect.bind(this)\r\n          provider.on('disconnect', disconnect)\r\n        }\r\n        if (!sessionDelete) {\r\n          sessionDelete = this.onSessionDelete.bind(this)\r\n          provider.on('session_delete', sessionDelete)\r\n        }\r\n\r\n        return { accounts, chainId: currentChainId }\r\n      } catch (error) {\r\n        if (\r\n          /(user rejected|connection request reset)/i.test(\r\n            (error as ProviderRpcError)?.message,\r\n          )\r\n        ) {\r\n          throw new UserRejectedRequestError(error as Error)\r\n        }\r\n        throw error\r\n      }\r\n    },\r\n    async disconnect() {\r\n      const provider = await this.getProvider()\r\n      try {\r\n        await provider?.disconnect()\r\n      } catch (error) {\r\n        if (!/No matching key/i.test((error as Error).message)) throw error\r\n      } finally {\r\n        if (chainChanged) {\r\n          provider?.removeListener('chainChanged', chainChanged)\r\n          chainChanged = undefined\r\n        }\r\n        if (disconnect) {\r\n          provider?.removeListener('disconnect', disconnect)\r\n          disconnect = undefined\r\n        }\r\n        if (!connect) {\r\n          connect = this.onConnect.bind(this)\r\n          provider?.on('connect', connect)\r\n        }\r\n        if (accountsChanged) {\r\n          provider?.removeListener('accountsChanged', accountsChanged)\r\n          accountsChanged = undefined\r\n        }\r\n        if (sessionDelete) {\r\n          provider?.removeListener('session_delete', sessionDelete)\r\n          sessionDelete = undefined\r\n        }\r\n\r\n        this.setRequestedChainsIds([])\r\n      }\r\n    },\r\n    async getAccounts() {\r\n      const provider = await this.getProvider()\r\n      return provider.accounts.map((x) => getAddress(x))\r\n    },\r\n    async getProvider({ chainId } = {}) {\r\n      async function initProvider() {\r\n        const optionalChains = config.chains.map((x) => x.id) as [number]\r\n        if (!optionalChains.length) return\r\n        const { EthereumProvider } = await import(\r\n          '@walletconnect/ethereum-provider'\r\n        )\r\n        return await EthereumProvider.init({\r\n          ...parameters,\r\n          disableProviderPing: true,\r\n          optionalChains,\r\n          projectId: parameters.projectId,\r\n          rpcMap: Object.fromEntries(\r\n            config.chains.map((chain) => {\r\n              const [url] = extractRpcUrls({\r\n                chain,\r\n                transports: config.transports,\r\n              })\r\n              return [chain.id, url]\r\n            }),\r\n          ),\r\n          showQrModal: parameters.showQrModal ?? true,\r\n        })\r\n      }\r\n\r\n      if (!provider_) {\r\n        if (!providerPromise) providerPromise = initProvider()\r\n        provider_ = await providerPromise\r\n        provider_?.events.setMaxListeners(Number.POSITIVE_INFINITY)\r\n      }\r\n      if (chainId) await this.switchChain?.({ chainId })\r\n      return provider_!\r\n    },\r\n    async getChainId() {\r\n      const provider = await this.getProvider()\r\n      return provider.chainId\r\n    },\r\n    async isAuthorized() {\r\n      try {\r\n        const [accounts, provider] = await Promise.all([\r\n          this.getAccounts(),\r\n          this.getProvider(),\r\n        ])\r\n\r\n        // If an account does not exist on the session, then the connector is unauthorized.\r\n        if (!accounts.length) return false\r\n\r\n        // If the chains are stale on the session, then the connector is unauthorized.\r\n        const isChainsStale = await this.isChainsStale()\r\n        if (isChainsStale && provider.session) {\r\n          await provider.disconnect().catch(() => {})\r\n          return false\r\n        }\r\n        return true\r\n      } catch {\r\n        return false\r\n      }\r\n    },\r\n    async switchChain({ addEthereumChainParameter, chainId }) {\r\n      const provider = await this.getProvider()\r\n      if (!provider) throw new ProviderNotFoundError()\r\n\r\n      const chain = config.chains.find((x) => x.id === chainId)\r\n      if (!chain) throw new SwitchChainError(new ChainNotConfiguredError())\r\n\r\n      try {\r\n        await Promise.all([\r\n          new Promise<void>((resolve) => {\r\n            const listener = ({\r\n              chainId: currentChainId,\r\n            }: { chainId?: number | undefined }) => {\r\n              if (currentChainId === chainId) {\r\n                config.emitter.off('change', listener)\r\n                resolve()\r\n              }\r\n            }\r\n            config.emitter.on('change', listener)\r\n          }),\r\n          provider.request({\r\n            method: 'wallet_switchEthereumChain',\r\n            params: [{ chainId: numberToHex(chainId) }],\r\n          }),\r\n        ])\r\n\r\n        const requestedChains = await this.getRequestedChainsIds()\r\n        this.setRequestedChainsIds([...requestedChains, chainId])\r\n\r\n        return chain\r\n      } catch (err) {\r\n        const error = err as RpcError\r\n\r\n        if (/(user rejected)/i.test(error.message))\r\n          throw new UserRejectedRequestError(error)\r\n\r\n        // Indicates chain is not added to provider\r\n        try {\r\n          let blockExplorerUrls: string[] | undefined\r\n          if (addEthereumChainParameter?.blockExplorerUrls)\r\n            blockExplorerUrls = addEthereumChainParameter.blockExplorerUrls\r\n          else\r\n            blockExplorerUrls = chain.blockExplorers?.default.url\r\n              ? [chain.blockExplorers?.default.url]\r\n              : []\r\n\r\n          let rpcUrls: readonly string[]\r\n          if (addEthereumChainParameter?.rpcUrls?.length)\r\n            rpcUrls = addEthereumChainParameter.rpcUrls\r\n          else rpcUrls = [...chain.rpcUrls.default.http]\r\n\r\n          const addEthereumChain = {\r\n            blockExplorerUrls,\r\n            chainId: numberToHex(chainId),\r\n            chainName: addEthereumChainParameter?.chainName ?? chain.name,\r\n            iconUrls: addEthereumChainParameter?.iconUrls,\r\n            nativeCurrency:\r\n              addEthereumChainParameter?.nativeCurrency ?? chain.nativeCurrency,\r\n            rpcUrls,\r\n          } satisfies AddEthereumChainParameter\r\n\r\n          await provider.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [addEthereumChain],\r\n          })\r\n\r\n          const requestedChains = await this.getRequestedChainsIds()\r\n          this.setRequestedChainsIds([...requestedChains, chainId])\r\n          return chain\r\n        } catch (error) {\r\n          throw new UserRejectedRequestError(error as Error)\r\n        }\r\n      }\r\n    },\r\n    onAccountsChanged(accounts) {\r\n      if (accounts.length === 0) this.onDisconnect()\r\n      else\r\n        config.emitter.emit('change', {\r\n          accounts: accounts.map((x) => getAddress(x)),\r\n        })\r\n    },\r\n    onChainChanged(chain) {\r\n      const chainId = Number(chain)\r\n      config.emitter.emit('change', { chainId })\r\n    },\r\n    async onConnect(connectInfo) {\r\n      const chainId = Number(connectInfo.chainId)\r\n      const accounts = await this.getAccounts()\r\n      config.emitter.emit('connect', { accounts, chainId })\r\n    },\r\n    async onDisconnect(_error) {\r\n      this.setRequestedChainsIds([])\r\n      config.emitter.emit('disconnect')\r\n\r\n      const provider = await this.getProvider()\r\n      if (accountsChanged) {\r\n        provider.removeListener('accountsChanged', accountsChanged)\r\n        accountsChanged = undefined\r\n      }\r\n      if (chainChanged) {\r\n        provider.removeListener('chainChanged', chainChanged)\r\n        chainChanged = undefined\r\n      }\r\n      if (disconnect) {\r\n        provider.removeListener('disconnect', disconnect)\r\n        disconnect = undefined\r\n      }\r\n      if (sessionDelete) {\r\n        provider.removeListener('session_delete', sessionDelete)\r\n        sessionDelete = undefined\r\n      }\r\n      if (!connect) {\r\n        connect = this.onConnect.bind(this)\r\n        provider.on('connect', connect)\r\n      }\r\n    },\r\n    onDisplayUri(uri) {\r\n      config.emitter.emit('message', { type: 'display_uri', data: uri })\r\n    },\r\n    onSessionDelete() {\r\n      this.onDisconnect()\r\n    },\r\n    getNamespaceChainsIds() {\r\n      if (!provider_) return []\r\n      const chainIds = provider_.session?.namespaces[NAMESPACE]?.accounts?.map(\r\n        (account) => Number.parseInt(account.split(':')[1] || ''),\r\n      )\r\n      return chainIds ?? []\r\n    },\r\n    async getRequestedChainsIds() {\r\n      return (\r\n        (await config.storage?.getItem(this.requestedChainsStorageKey)) ?? []\r\n      )\r\n    },\r\n    /**\r\n     * Checks if the target chains match the chains that were\r\n     * initially requested by the connector for the WalletConnect session.\r\n     * If there is a mismatch, this means that the chains on the connector\r\n     * are considered stale, and need to be revalidated at a later point (via\r\n     * connection).\r\n     *\r\n     * There may be a scenario where a dapp adds a chain to the\r\n     * connector later on, however, this chain will not have been approved or rejected\r\n     * by the wallet. In this case, the chain is considered stale.\r\n     */\r\n    async isChainsStale() {\r\n      if (!isNewChainsStale) return false\r\n\r\n      const connectorChains = config.chains.map((x) => x.id)\r\n      const namespaceChains = this.getNamespaceChainsIds()\r\n      if (\r\n        namespaceChains.length &&\r\n        !namespaceChains.some((id) => connectorChains.includes(id))\r\n      )\r\n        return false\r\n\r\n      const requestedChains = await this.getRequestedChainsIds()\r\n      return !connectorChains.every((id) => requestedChains.includes(id))\r\n    },\r\n    async setRequestedChainsIds(chains) {\r\n      await config.storage?.setItem(this.requestedChainsStorageKey, chains)\r\n    },\r\n    get requestedChainsStorageKey() {\r\n      return `${this.id}.requestedChains` as Properties['requestedChainsStorageKey']\r\n    },\r\n  }))\r\n}\r\n", "import type {\r\n  MetaMaskSDK,\r\n  MetaMaskSDKOptions,\r\n  SDKProvider,\r\n} from '@metamask/sdk'\r\nimport {\r\n  ChainNotConfiguredError,\r\n  type Connector,\r\n  createConnector,\r\n  extractRpcUrls,\r\n} from '@wagmi/core'\r\nimport type {\r\n  Compute,\r\n  ExactPartial,\r\n  RemoveUndefined,\r\n} from '@wagmi/core/internal'\r\nimport {\r\n  type AddEthereumChainParameter,\r\n  type Address,\r\n  type Hex,\r\n  type ProviderConnectInfo,\r\n  type ProviderRpcError,\r\n  ResourceUnavailableRpcError,\r\n  type RpcError,\r\n  SwitchChainError,\r\n  UserRejectedRequestError,\r\n  getAddress,\r\n  hexToNumber,\r\n  numberToHex,\r\n  withRetry,\r\n  withTimeout,\r\n} from 'viem'\r\n\r\nexport type MetaMaskParameters = Compute<\r\n  ExactPartial<Omit<MetaMaskSDKOptions, '_source' | 'readonlyRPCMap'>>\r\n>\r\n\r\nmetaMask.type = 'metaMask' as const\r\nexport function metaMask(parameters: MetaMaskParameters = {}) {\r\n  type Provider = SDKProvider\r\n  type Properties = {\r\n    onConnect(connectInfo: ProviderConnectInfo): void\r\n    onDisplayUri(uri: string): void\r\n  }\r\n  type Listener = Parameters<Provider['on']>[1]\r\n\r\n  let sdk: MetaMaskSDK\r\n  let provider: Provider | undefined\r\n  let providerPromise: Promise<typeof provider>\r\n\r\n  let accountsChanged: Connector['onAccountsChanged'] | undefined\r\n  let chainChanged: Connector['onChainChanged'] | undefined\r\n  let connect: Connector['onConnect'] | undefined\r\n  let displayUri: ((uri: string) => void) | undefined\r\n  let disconnect: Connector['onDisconnect'] | undefined\r\n\r\n  return createConnector<Provider, Properties>((config) => ({\r\n    id: 'metaMaskSDK',\r\n    name: 'MetaMask',\r\n    type: metaMask.type,\r\n    async setup() {\r\n      const provider = await this.getProvider()\r\n      if (provider && !connect) {\r\n        connect = this.onConnect.bind(this)\r\n        provider.on('connect', connect as Listener)\r\n      }\r\n    },\r\n    async connect({ chainId, isReconnecting } = {}) {\r\n      const provider = await this.getProvider()\r\n      if (!displayUri) {\r\n        displayUri = this.onDisplayUri\r\n        provider.on('display_uri', displayUri as Listener)\r\n      }\r\n\r\n      let accounts: readonly Address[] = []\r\n      if (isReconnecting) accounts = await this.getAccounts().catch(() => [])\r\n\r\n      try {\r\n        if (!accounts?.length) {\r\n          const requestedAccounts = (await sdk.connect()) as string[]\r\n          accounts = requestedAccounts.map((x) => getAddress(x))\r\n        }\r\n\r\n        // Switch to chain if provided\r\n        let currentChainId = (await this.getChainId()) as number\r\n        if (chainId && currentChainId !== chainId) {\r\n          const chain = await this.switchChain!({ chainId }).catch((error) => {\r\n            if (error.code === UserRejectedRequestError.code) throw error\r\n            return { id: currentChainId }\r\n          })\r\n          currentChainId = chain?.id ?? currentChainId\r\n        }\r\n\r\n        if (displayUri) {\r\n          provider.removeListener('display_uri', displayUri)\r\n          displayUri = undefined\r\n        }\r\n\r\n        // Manage EIP-1193 event listeners\r\n        // https://eips.ethereum.org/EIPS/eip-1193#events\r\n        if (connect) {\r\n          provider.removeListener('connect', connect)\r\n          connect = undefined\r\n        }\r\n        if (!accountsChanged) {\r\n          accountsChanged = this.onAccountsChanged.bind(this)\r\n          provider.on('accountsChanged', accountsChanged as Listener)\r\n        }\r\n        if (!chainChanged) {\r\n          chainChanged = this.onChainChanged.bind(this)\r\n          provider.on('chainChanged', chainChanged as Listener)\r\n        }\r\n        if (!disconnect) {\r\n          disconnect = this.onDisconnect.bind(this)\r\n          provider.on('disconnect', disconnect as Listener)\r\n        }\r\n\r\n        return { accounts, chainId: currentChainId }\r\n      } catch (err) {\r\n        const error = err as RpcError\r\n        if (error.code === UserRejectedRequestError.code)\r\n          throw new UserRejectedRequestError(error)\r\n        if (error.code === ResourceUnavailableRpcError.code)\r\n          throw new ResourceUnavailableRpcError(error)\r\n        throw error\r\n      }\r\n    },\r\n    async disconnect() {\r\n      const provider = await this.getProvider()\r\n\r\n      // Manage EIP-1193 event listeners\r\n      if (accountsChanged) {\r\n        provider.removeListener('accountsChanged', accountsChanged)\r\n        accountsChanged = undefined\r\n      }\r\n      if (chainChanged) {\r\n        provider.removeListener('chainChanged', chainChanged)\r\n        chainChanged = undefined\r\n      }\r\n      if (disconnect) {\r\n        provider.removeListener('disconnect', disconnect)\r\n        disconnect = undefined\r\n      }\r\n      if (!connect) {\r\n        connect = this.onConnect.bind(this)\r\n        provider.on('connect', connect as Listener)\r\n      }\r\n\r\n      await sdk.terminate()\r\n    },\r\n    async getAccounts() {\r\n      const provider = await this.getProvider()\r\n      const accounts = (await provider.request({\r\n        method: 'eth_accounts',\r\n      })) as string[]\r\n      return accounts.map((x) => getAddress(x))\r\n    },\r\n    async getChainId() {\r\n      const provider = await this.getProvider()\r\n      const chainId =\r\n        provider.getChainId() ||\r\n        (await provider?.request({ method: 'eth_chainId' }))\r\n      return Number(chainId)\r\n    },\r\n    async getProvider() {\r\n      async function initProvider() {\r\n        // Unwrapping import for Vite compatibility.\r\n        // See: https://github.com/vitejs/vite/issues/9703\r\n        const MetaMaskSDK = await (async () => {\r\n          const { default: SDK } = await import('@metamask/sdk')\r\n          if (typeof SDK !== 'function' && typeof SDK.default === 'function')\r\n            return SDK.default\r\n          return SDK as unknown as typeof SDK.default\r\n        })()\r\n\r\n        sdk = new MetaMaskSDK({\r\n          _source: 'wagmi',\r\n          // Workaround cast since MetaMask SDK does not support `'exactOptionalPropertyTypes'`\r\n          ...(parameters as RemoveUndefined<typeof parameters>),\r\n          readonlyRPCMap: Object.fromEntries(\r\n            config.chains.map((chain) => {\r\n              const [url] = extractRpcUrls({\r\n                chain,\r\n                transports: config.transports,\r\n              })\r\n              return [chain.id, url]\r\n            }),\r\n          ),\r\n          dappMetadata: parameters.dappMetadata ?? { name: 'wagmi' },\r\n          useDeeplink: parameters.useDeeplink ?? true,\r\n        })\r\n        await sdk.init()\r\n        return sdk.getProvider()!\r\n      }\r\n\r\n      if (!provider) {\r\n        if (!providerPromise) providerPromise = initProvider()\r\n        provider = await providerPromise\r\n      }\r\n      return provider!\r\n    },\r\n    async isAuthorized() {\r\n      try {\r\n        // MetaMask mobile provider sometimes fails to immediately resolve\r\n        // JSON-RPC requests on page load\r\n        const timeout = 200\r\n        const accounts = await withRetry(\r\n          () => withTimeout(() => this.getAccounts(), { timeout }),\r\n          {\r\n            delay: timeout + 1,\r\n            retryCount: 3,\r\n          },\r\n        )\r\n        return !!accounts.length\r\n      } catch {\r\n        return false\r\n      }\r\n    },\r\n    async switchChain({ addEthereumChainParameter, chainId }) {\r\n      const provider = await this.getProvider()\r\n\r\n      const chain = config.chains.find((x) => x.id === chainId)\r\n      if (!chain) throw new SwitchChainError(new ChainNotConfiguredError())\r\n\r\n      try {\r\n        await Promise.all([\r\n          provider\r\n            .request({\r\n              method: 'wallet_switchEthereumChain',\r\n              params: [{ chainId: numberToHex(chainId) }],\r\n            })\r\n            // During `'wallet_switchEthereumChain'`, MetaMask makes a `'net_version'` RPC call to the target chain.\r\n            // If this request fails, MetaMask does not emit the `'chainChanged'` event, but will still switch the chain.\r\n            // To counter this behavior, we request and emit the current chain ID to confirm the chain switch either via\r\n            // this callback or an externally emitted `'chainChanged'` event.\r\n            // https://github.com/MetaMask/metamask-extension/issues/24247\r\n            .then(async () => {\r\n              const currentChainId = await this.getChainId()\r\n              if (currentChainId === chainId)\r\n                config.emitter.emit('change', { chainId })\r\n            }),\r\n          new Promise<void>((resolve) => {\r\n            const listener = ((data) => {\r\n              if ('chainId' in data && data.chainId === chainId) {\r\n                config.emitter.off('change', listener)\r\n                resolve()\r\n              }\r\n            }) satisfies Parameters<typeof config.emitter.on>[1]\r\n            config.emitter.on('change', listener)\r\n          }),\r\n        ])\r\n        return chain\r\n      } catch (err) {\r\n        const error = err as RpcError\r\n\r\n        // Indicates chain is not added to provider\r\n        if (\r\n          error.code === 4902 ||\r\n          // Unwrapping for MetaMask Mobile\r\n          // https://github.com/MetaMask/metamask-mobile/issues/2944#issuecomment-976988719\r\n          (error as ProviderRpcError<{ originalError?: { code: number } }>)\r\n            ?.data?.originalError?.code === 4902\r\n        ) {\r\n          try {\r\n            const { default: blockExplorer, ...blockExplorers } =\r\n              chain.blockExplorers ?? {}\r\n            let blockExplorerUrls: string[] | undefined\r\n            if (addEthereumChainParameter?.blockExplorerUrls)\r\n              blockExplorerUrls = addEthereumChainParameter.blockExplorerUrls\r\n            else if (blockExplorer)\r\n              blockExplorerUrls = [\r\n                blockExplorer.url,\r\n                ...Object.values(blockExplorers).map((x) => x.url),\r\n              ]\r\n\r\n            let rpcUrls: readonly string[]\r\n            if (addEthereumChainParameter?.rpcUrls?.length)\r\n              rpcUrls = addEthereumChainParameter.rpcUrls\r\n            else rpcUrls = [chain.rpcUrls.default?.http[0] ?? '']\r\n\r\n            const addEthereumChain = {\r\n              blockExplorerUrls,\r\n              chainId: numberToHex(chainId),\r\n              chainName: addEthereumChainParameter?.chainName ?? chain.name,\r\n              iconUrls: addEthereumChainParameter?.iconUrls,\r\n              nativeCurrency:\r\n                addEthereumChainParameter?.nativeCurrency ??\r\n                chain.nativeCurrency,\r\n              rpcUrls,\r\n            } satisfies AddEthereumChainParameter\r\n\r\n            await provider.request({\r\n              method: 'wallet_addEthereumChain',\r\n              params: [addEthereumChain],\r\n            })\r\n\r\n            const currentChainId = hexToNumber(\r\n              // Call `'eth_chainId'` directly to guard against `this.state.chainId` (via `provider.getChainId`) being stale.\r\n              (await provider.request({ method: 'eth_chainId' })) as Hex,\r\n            )\r\n            if (currentChainId !== chainId)\r\n              throw new UserRejectedRequestError(\r\n                new Error('User rejected switch after adding network.'),\r\n              )\r\n\r\n            return chain\r\n          } catch (error) {\r\n            throw new UserRejectedRequestError(error as Error)\r\n          }\r\n        }\r\n\r\n        if (error.code === UserRejectedRequestError.code)\r\n          throw new UserRejectedRequestError(error)\r\n        throw new SwitchChainError(error)\r\n      }\r\n    },\r\n    async onAccountsChanged(accounts) {\r\n      // Disconnect if there are no accounts\r\n      if (accounts.length === 0) this.onDisconnect()\r\n      // Connect if emitter is listening for connect event (e.g. is disconnected and connects through wallet interface)\r\n      else if (config.emitter.listenerCount('connect')) {\r\n        const chainId = (await this.getChainId()).toString()\r\n        this.onConnect({ chainId })\r\n      }\r\n      // Regular change event\r\n      else\r\n        config.emitter.emit('change', {\r\n          accounts: accounts.map((x) => getAddress(x)),\r\n        })\r\n    },\r\n    onChainChanged(chain) {\r\n      const chainId = Number(chain)\r\n      config.emitter.emit('change', { chainId })\r\n    },\r\n    async onConnect(connectInfo) {\r\n      const accounts = await this.getAccounts()\r\n      if (accounts.length === 0) return\r\n\r\n      const chainId = Number(connectInfo.chainId)\r\n      config.emitter.emit('connect', { accounts, chainId })\r\n\r\n      const provider = await this.getProvider()\r\n      if (connect) {\r\n        provider.removeListener('connect', connect)\r\n        connect = undefined\r\n      }\r\n      if (!accountsChanged) {\r\n        accountsChanged = this.onAccountsChanged.bind(this)\r\n        provider.on('accountsChanged', accountsChanged as Listener)\r\n      }\r\n      if (!chainChanged) {\r\n        chainChanged = this.onChainChanged.bind(this)\r\n        provider.on('chainChanged', chainChanged as Listener)\r\n      }\r\n      if (!disconnect) {\r\n        disconnect = this.onDisconnect.bind(this)\r\n        provider.on('disconnect', disconnect as Listener)\r\n      }\r\n    },\r\n    async onDisconnect(error) {\r\n      const provider = await this.getProvider()\r\n\r\n      // If MetaMask emits a `code: 1013` error, wait for reconnection before disconnecting\r\n      // https://github.com/MetaMask/providers/pull/120\r\n      if (error && (error as RpcError<1013>).code === 1013) {\r\n        if (provider && !!(await this.getAccounts()).length) return\r\n      }\r\n\r\n      config.emitter.emit('disconnect')\r\n\r\n      // Manage EIP-1193 event listeners\r\n      if (!accountsChanged) {\r\n        accountsChanged = this.onAccountsChanged.bind(this)\r\n        provider.on('accountsChanged', accountsChanged as Listener)\r\n      }\r\n      if (chainChanged) {\r\n        provider.removeListener('chainChanged', chainChanged)\r\n        chainChanged = undefined\r\n      }\r\n      if (disconnect) {\r\n        provider.removeListener('disconnect', disconnect)\r\n        disconnect = undefined\r\n      }\r\n      if (!connect) {\r\n        connect = this.onConnect.bind(this)\r\n        provider.on('connect', connect as Listener)\r\n      }\r\n    },\r\n    onDisplayUri(uri) {\r\n      config.emitter.emit('message', { type: 'display_uri', data: uri })\r\n    },\r\n  }))\r\n}\r\n", "import type { SafeAppProvider } from '@safe-global/safe-apps-provider'\r\nimport type { Opts } from '@safe-global/safe-apps-sdk'\r\nimport {\r\n  type Connector,\r\n  ProviderNotFoundError,\r\n  createConnector,\r\n} from '@wagmi/core'\r\nimport type { Compute } from '@wagmi/core/internal'\r\nimport { getAddress, withTimeout } from 'viem'\r\n\r\nexport type SafeParameters = Compute<\r\n  Opts & {\r\n    /**\r\n     * Connector automatically connects when used as Safe App.\r\n     *\r\n     * This flag simulates the disconnect behavior by keeping track of connection status in storage\r\n     * and only autoconnecting when previously connected by user action (e.g. explicitly choosing to connect).\r\n     *\r\n     * @default false\r\n     */\r\n    shimDisconnect?: boolean | undefined\r\n    /**\r\n     * Timeout in milliseconds for `getInfo` (from the Safe SDK) to resolve.\r\n     *\r\n     * `getInfo` does not resolve when not used in Safe App iFrame. This allows the connector to force a timeout.\r\n     * @default 10\r\n     */\r\n    unstable_getInfoTimeout?: number | undefined\r\n  }\r\n>\r\n\r\nsafe.type = 'safe' as const\r\nexport function safe(parameters: SafeParameters = {}) {\r\n  const { shimDisconnect = false } = parameters\r\n\r\n  type Provider = SafeAppProvider | undefined\r\n  type Properties = Record<string, unknown>\r\n  type StorageItem = { 'safe.disconnected': true }\r\n\r\n  let provider_: Provider | undefined\r\n\r\n  let disconnect: Connector['onDisconnect'] | undefined\r\n\r\n  return createConnector<Provider, Properties, StorageItem>((config) => ({\r\n    id: 'safe',\r\n    name: 'Safe',\r\n    type: safe.type,\r\n    async connect() {\r\n      const provider = await this.getProvider()\r\n      if (!provider) throw new ProviderNotFoundError()\r\n\r\n      const accounts = await this.getAccounts()\r\n      const chainId = await this.getChainId()\r\n\r\n      if (!disconnect) {\r\n        disconnect = this.onDisconnect.bind(this)\r\n        provider.on('disconnect', disconnect)\r\n      }\r\n\r\n      // Remove disconnected shim if it exists\r\n      if (shimDisconnect) await config.storage?.removeItem('safe.disconnected')\r\n\r\n      return { accounts, chainId }\r\n    },\r\n    async disconnect() {\r\n      const provider = await this.getProvider()\r\n      if (!provider) throw new ProviderNotFoundError()\r\n\r\n      if (disconnect) {\r\n        provider.removeListener('disconnect', disconnect)\r\n        disconnect = undefined\r\n      }\r\n\r\n      // Add shim signalling connector is disconnected\r\n      if (shimDisconnect)\r\n        await config.storage?.setItem('safe.disconnected', true)\r\n    },\r\n    async getAccounts() {\r\n      const provider = await this.getProvider()\r\n      if (!provider) throw new ProviderNotFoundError()\r\n      return (await provider.request({ method: 'eth_accounts' })).map(\r\n        getAddress,\r\n      )\r\n    },\r\n    async getProvider() {\r\n      // Only allowed in iframe context\r\n      const isIframe =\r\n        typeof window !== 'undefined' && window?.parent !== window\r\n      if (!isIframe) return\r\n\r\n      if (!provider_) {\r\n        const { default: SDK } = await import('@safe-global/safe-apps-sdk')\r\n        const sdk = new SDK(parameters)\r\n\r\n        // `getInfo` hangs when not used in Safe App iFrame\r\n        // https://github.com/safe-global/safe-apps-sdk/issues/263#issuecomment-1029835840\r\n        const safe = await withTimeout(() => sdk.safe.getInfo(), {\r\n          timeout: parameters.unstable_getInfoTimeout ?? 10,\r\n        })\r\n        if (!safe) throw new Error('Could not load Safe information')\r\n        const { SafeAppProvider } = await import(\r\n          '@safe-global/safe-apps-provider'\r\n        )\r\n        provider_ = new SafeAppProvider(safe, sdk)\r\n      }\r\n      return provider_\r\n    },\r\n    async getChainId() {\r\n      const provider = await this.getProvider()\r\n      if (!provider) throw new ProviderNotFoundError()\r\n      return Number(provider.chainId)\r\n    },\r\n    async isAuthorized() {\r\n      try {\r\n        const isDisconnected =\r\n          shimDisconnect &&\r\n          // If shim exists in storage, connector is disconnected\r\n          (await config.storage?.getItem('safe.disconnected'))\r\n        if (isDisconnected) return false\r\n\r\n        const accounts = await this.getAccounts()\r\n        return !!accounts.length\r\n      } catch {\r\n        return false\r\n      }\r\n    },\r\n    onAccountsChanged() {\r\n      // Not relevant for Safe because changing account requires app reload.\r\n    },\r\n    onChainChanged() {\r\n      // Not relevant for Safe because Safe smart contract wallets only exist on single chain.\r\n    },\r\n    onDisconnect() {\r\n      config.emitter.emit('disconnect')\r\n    },\r\n  }))\r\n}\r\n"],
  "mappings": "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",
  "names": ["V", "split", "g", "decomposed", "chain", "error", "error", "provider", "error", "safe"]
}
