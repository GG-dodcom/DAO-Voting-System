{
  "version": 3,
  "sources": ["../../remarkable/dist/esm/index.browser.js"],
  "sourcesContent": ["var textarea;\r\n\r\nfunction decodeEntity(name) {\r\n  textarea = textarea || document.createElement('textarea');\r\n  textarea.innerHTML = '&' + name + ';';\r\n  return textarea.value;\r\n}\r\n\r\n/**\r\n * Utility functions\r\n */\r\n\r\nfunction typeOf(obj) {\r\n  return Object.prototype.toString.call(obj);\r\n}\r\n\r\nfunction isString(obj) {\r\n  return typeOf(obj) === '[object String]';\r\n}\r\n\r\nvar hasOwn = Object.prototype.hasOwnProperty;\r\n\r\nfunction has(object, key) {\r\n  return object\r\n    ? hasOwn.call(object, key)\r\n    : false;\r\n}\r\n\r\n// Extend objects\r\n//\r\nfunction assign(obj /*from1, from2, from3, ...*/) {\r\n  var sources = [].slice.call(arguments, 1);\r\n\r\n  sources.forEach(function (source) {\r\n    if (!source) { return; }\r\n\r\n    if (typeof source !== 'object') {\r\n      throw new TypeError(source + 'must be object');\r\n    }\r\n\r\n    Object.keys(source).forEach(function (key) {\r\n      obj[key] = source[key];\r\n    });\r\n  });\r\n\r\n  return obj;\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n\r\nvar UNESCAPE_MD_RE = /\\\\([\\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\r\n\r\nfunction unescapeMd(str) {\r\n  if (str.indexOf('\\\\') < 0) { return str; }\r\n  return str.replace(UNESCAPE_MD_RE, '$1');\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n\r\nfunction isValidEntityCode(c) {\r\n  /*eslint no-bitwise:0*/\r\n  // broken sequence\r\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\r\n  // never used\r\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\r\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\r\n  // control codes\r\n  if (c >= 0x00 && c <= 0x08) { return false; }\r\n  if (c === 0x0B) { return false; }\r\n  if (c >= 0x0E && c <= 0x1F) { return false; }\r\n  if (c >= 0x7F && c <= 0x9F) { return false; }\r\n  // out of range\r\n  if (c > 0x10FFFF) { return false; }\r\n  return true;\r\n}\r\n\r\nfunction fromCodePoint(c) {\r\n  /*eslint no-bitwise:0*/\r\n  if (c > 0xffff) {\r\n    c -= 0x10000;\r\n    var surrogate1 = 0xd800 + (c >> 10),\r\n        surrogate2 = 0xdc00 + (c & 0x3ff);\r\n\r\n    return String.fromCharCode(surrogate1, surrogate2);\r\n  }\r\n  return String.fromCharCode(c);\r\n}\r\n\r\nvar NAMED_ENTITY_RE   = /&([a-z#][a-z0-9]{1,31});/gi;\r\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\r\n\r\nfunction replaceEntityPattern(match, name) {\r\n  var code = 0;\r\n  var decoded = decodeEntity(name);\r\n\r\n  if (name !== decoded) {\r\n    return decoded;\r\n  } else if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\r\n    code = name[1].toLowerCase() === 'x' ?\r\n      parseInt(name.slice(2), 16)\r\n    :\r\n      parseInt(name.slice(1), 10);\r\n    if (isValidEntityCode(code)) {\r\n      return fromCodePoint(code);\r\n    }\r\n  }\r\n  return match;\r\n}\r\n\r\nfunction replaceEntities(str) {\r\n  if (str.indexOf('&') < 0) { return str; }\r\n\r\n  return str.replace(NAMED_ENTITY_RE, replaceEntityPattern);\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n\r\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\r\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\r\nvar HTML_REPLACEMENTS = {\r\n  '&': '&amp;',\r\n  '<': '&lt;',\r\n  '>': '&gt;',\r\n  '\"': '&quot;'\r\n};\r\n\r\nfunction replaceUnsafeChar(ch) {\r\n  return HTML_REPLACEMENTS[ch];\r\n}\r\n\r\nfunction escapeHtml(str) {\r\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\r\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\r\n  }\r\n  return str;\r\n}\r\n\r\nvar utils = /*#__PURE__*/Object.freeze({\r\n  isString: isString,\r\n  has: has,\r\n  assign: assign,\r\n  unescapeMd: unescapeMd,\r\n  isValidEntityCode: isValidEntityCode,\r\n  fromCodePoint: fromCodePoint,\r\n  replaceEntities: replaceEntities,\r\n  escapeHtml: escapeHtml\r\n});\r\n\r\n/**\r\n * Renderer rules cache\r\n */\r\n\r\nvar rules = {};\r\n\r\n/**\r\n * Blockquotes\r\n */\r\n\r\nrules.blockquote_open = function(/* tokens, idx, options, env */) {\r\n  return '<blockquote>\\n';\r\n};\r\n\r\nrules.blockquote_close = function(tokens, idx /*, options, env */) {\r\n  return '</blockquote>' + getBreak(tokens, idx);\r\n};\r\n\r\n/**\r\n * Code\r\n */\r\n\r\nrules.code = function(tokens, idx /*, options, env */) {\r\n  if (tokens[idx].block) {\r\n    return '<pre><code>' + escapeHtml(tokens[idx].content) + '</code></pre>' + getBreak(tokens, idx);\r\n  }\r\n  return '<code>' + escapeHtml(tokens[idx].content) + '</code>';\r\n};\r\n\r\n/**\r\n * Fenced code blocks\r\n */\r\n\r\nrules.fence = function(tokens, idx, options, env, instance) {\r\n  var token = tokens[idx];\r\n  var langClass = '';\r\n  var langPrefix = options.langPrefix;\r\n  var langName = '', fences, fenceName;\r\n  var highlighted;\r\n\r\n  if (token.params) {\r\n\r\n    //\r\n    // ```foo bar\r\n    //\r\n    // Try custom renderer \"foo\" first. That will simplify overwrite\r\n    // for diagrams, latex, and any other fenced block with custom look\r\n    //\r\n\r\n    fences = token.params.split(/\\s+/g);\r\n    fenceName = fences.join(' ');\r\n\r\n    if (has(instance.rules.fence_custom, fences[0])) {\r\n      return instance.rules.fence_custom[fences[0]](tokens, idx, options, env, instance);\r\n    }\r\n\r\n    langName = escapeHtml(replaceEntities(unescapeMd(fenceName)));\r\n    langClass = ' class=\"' + langPrefix + langName + '\"';\r\n  }\r\n\r\n  if (options.highlight) {\r\n    highlighted = options.highlight.apply(options.highlight, [ token.content ].concat(fences))\r\n      || escapeHtml(token.content);\r\n  } else {\r\n    highlighted = escapeHtml(token.content);\r\n  }\r\n\r\n  return '<pre><code' + langClass + '>'\r\n        + highlighted\r\n        + '</code></pre>'\r\n        + getBreak(tokens, idx);\r\n};\r\n\r\nrules.fence_custom = {};\r\n\r\n/**\r\n * Headings\r\n */\r\n\r\nrules.heading_open = function(tokens, idx /*, options, env */) {\r\n  return '<h' + tokens[idx].hLevel + '>';\r\n};\r\nrules.heading_close = function(tokens, idx /*, options, env */) {\r\n  return '</h' + tokens[idx].hLevel + '>\\n';\r\n};\r\n\r\n/**\r\n * Horizontal rules\r\n */\r\n\r\nrules.hr = function(tokens, idx, options /*, env */) {\r\n  return (options.xhtmlOut ? '<hr />' : '<hr>') + getBreak(tokens, idx);\r\n};\r\n\r\n/**\r\n * Bullets\r\n */\r\n\r\nrules.bullet_list_open = function(/* tokens, idx, options, env */) {\r\n  return '<ul>\\n';\r\n};\r\nrules.bullet_list_close = function(tokens, idx /*, options, env */) {\r\n  return '</ul>' + getBreak(tokens, idx);\r\n};\r\n\r\n/**\r\n * List items\r\n */\r\n\r\nrules.list_item_open = function(/* tokens, idx, options, env */) {\r\n  return '<li>';\r\n};\r\nrules.list_item_close = function(/* tokens, idx, options, env */) {\r\n  return '</li>\\n';\r\n};\r\n\r\n/**\r\n * Ordered list items\r\n */\r\n\r\nrules.ordered_list_open = function(tokens, idx /*, options, env */) {\r\n  var token = tokens[idx];\r\n  var order = token.order > 1 ? ' start=\"' + token.order + '\"' : '';\r\n  return '<ol' + order + '>\\n';\r\n};\r\nrules.ordered_list_close = function(tokens, idx /*, options, env */) {\r\n  return '</ol>' + getBreak(tokens, idx);\r\n};\r\n\r\n/**\r\n * Paragraphs\r\n */\r\n\r\nrules.paragraph_open = function(tokens, idx /*, options, env */) {\r\n  return tokens[idx].tight ? '' : '<p>';\r\n};\r\nrules.paragraph_close = function(tokens, idx /*, options, env */) {\r\n  var addBreak = !(tokens[idx].tight && idx && tokens[idx - 1].type === 'inline' && !tokens[idx - 1].content);\r\n  return (tokens[idx].tight ? '' : '</p>') + (addBreak ? getBreak(tokens, idx) : '');\r\n};\r\n\r\n/**\r\n * Links\r\n */\r\n\r\nrules.link_open = function(tokens, idx, options /* env */) {\r\n  var title = tokens[idx].title ? (' title=\"' + escapeHtml(replaceEntities(tokens[idx].title)) + '\"') : '';\r\n  var target = options.linkTarget ? (' target=\"' + options.linkTarget + '\"') : '';\r\n  return '<a href=\"' + escapeHtml(tokens[idx].href) + '\"' + title + target + '>';\r\n};\r\nrules.link_close = function(/* tokens, idx, options, env */) {\r\n  return '</a>';\r\n};\r\n\r\n/**\r\n * Images\r\n */\r\n\r\nrules.image = function(tokens, idx, options /*, env */) {\r\n  var src = ' src=\"' + escapeHtml(tokens[idx].src) + '\"';\r\n  var title = tokens[idx].title ? (' title=\"' + escapeHtml(replaceEntities(tokens[idx].title)) + '\"') : '';\r\n  var alt = ' alt=\"' + (tokens[idx].alt ? escapeHtml(replaceEntities(unescapeMd(tokens[idx].alt))) : '') + '\"';\r\n  var suffix = options.xhtmlOut ? ' /' : '';\r\n  return '<img' + src + alt + title + suffix + '>';\r\n};\r\n\r\n/**\r\n * Tables\r\n */\r\n\r\nrules.table_open = function(/* tokens, idx, options, env */) {\r\n  return '<table>\\n';\r\n};\r\nrules.table_close = function(/* tokens, idx, options, env */) {\r\n  return '</table>\\n';\r\n};\r\nrules.thead_open = function(/* tokens, idx, options, env */) {\r\n  return '<thead>\\n';\r\n};\r\nrules.thead_close = function(/* tokens, idx, options, env */) {\r\n  return '</thead>\\n';\r\n};\r\nrules.tbody_open = function(/* tokens, idx, options, env */) {\r\n  return '<tbody>\\n';\r\n};\r\nrules.tbody_close = function(/* tokens, idx, options, env */) {\r\n  return '</tbody>\\n';\r\n};\r\nrules.tr_open = function(/* tokens, idx, options, env */) {\r\n  return '<tr>';\r\n};\r\nrules.tr_close = function(/* tokens, idx, options, env */) {\r\n  return '</tr>\\n';\r\n};\r\nrules.th_open = function(tokens, idx /*, options, env */) {\r\n  var token = tokens[idx];\r\n  return '<th'\r\n    + (token.align ? ' style=\"text-align:' + token.align + '\"' : '')\r\n    + '>';\r\n};\r\nrules.th_close = function(/* tokens, idx, options, env */) {\r\n  return '</th>';\r\n};\r\nrules.td_open = function(tokens, idx /*, options, env */) {\r\n  var token = tokens[idx];\r\n  return '<td'\r\n    + (token.align ? ' style=\"text-align:' + token.align + '\"' : '')\r\n    + '>';\r\n};\r\nrules.td_close = function(/* tokens, idx, options, env */) {\r\n  return '</td>';\r\n};\r\n\r\n/**\r\n * Bold\r\n */\r\n\r\nrules.strong_open = function(/* tokens, idx, options, env */) {\r\n  return '<strong>';\r\n};\r\nrules.strong_close = function(/* tokens, idx, options, env */) {\r\n  return '</strong>';\r\n};\r\n\r\n/**\r\n * Italicize\r\n */\r\n\r\nrules.em_open = function(/* tokens, idx, options, env */) {\r\n  return '<em>';\r\n};\r\nrules.em_close = function(/* tokens, idx, options, env */) {\r\n  return '</em>';\r\n};\r\n\r\n/**\r\n * Strikethrough\r\n */\r\n\r\nrules.del_open = function(/* tokens, idx, options, env */) {\r\n  return '<del>';\r\n};\r\nrules.del_close = function(/* tokens, idx, options, env */) {\r\n  return '</del>';\r\n};\r\n\r\n/**\r\n * Insert\r\n */\r\n\r\nrules.ins_open = function(/* tokens, idx, options, env */) {\r\n  return '<ins>';\r\n};\r\nrules.ins_close = function(/* tokens, idx, options, env */) {\r\n  return '</ins>';\r\n};\r\n\r\n/**\r\n * Highlight\r\n */\r\n\r\nrules.mark_open = function(/* tokens, idx, options, env */) {\r\n  return '<mark>';\r\n};\r\nrules.mark_close = function(/* tokens, idx, options, env */) {\r\n  return '</mark>';\r\n};\r\n\r\n/**\r\n * Super- and sub-script\r\n */\r\n\r\nrules.sub = function(tokens, idx /*, options, env */) {\r\n  return '<sub>' + escapeHtml(tokens[idx].content) + '</sub>';\r\n};\r\nrules.sup = function(tokens, idx /*, options, env */) {\r\n  return '<sup>' + escapeHtml(tokens[idx].content) + '</sup>';\r\n};\r\n\r\n/**\r\n * Breaks\r\n */\r\n\r\nrules.hardbreak = function(tokens, idx, options /*, env */) {\r\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\r\n};\r\nrules.softbreak = function(tokens, idx, options /*, env */) {\r\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\r\n};\r\n\r\n/**\r\n * Text\r\n */\r\n\r\nrules.text = function(tokens, idx /*, options, env */) {\r\n  return escapeHtml(tokens[idx].content);\r\n};\r\n\r\n/**\r\n * Content\r\n */\r\n\r\nrules.htmlblock = function(tokens, idx /*, options, env */) {\r\n  return tokens[idx].content;\r\n};\r\nrules.htmltag = function(tokens, idx /*, options, env */) {\r\n  return tokens[idx].content;\r\n};\r\n\r\n/**\r\n * Abbreviations, initialism\r\n */\r\n\r\nrules.abbr_open = function(tokens, idx /*, options, env */) {\r\n  return '<abbr title=\"' + escapeHtml(replaceEntities(tokens[idx].title)) + '\">';\r\n};\r\nrules.abbr_close = function(/* tokens, idx, options, env */) {\r\n  return '</abbr>';\r\n};\r\n\r\n/**\r\n * Footnotes\r\n */\r\n\r\nrules.footnote_ref = function(tokens, idx) {\r\n  var n = Number(tokens[idx].id + 1).toString();\r\n  var id = 'fnref' + n;\r\n  if (tokens[idx].subId > 0) {\r\n    id += ':' + tokens[idx].subId;\r\n  }\r\n  return '<sup class=\"footnote-ref\"><a href=\"#fn' + n + '\" id=\"' + id + '\">[' + n + ']</a></sup>';\r\n};\r\nrules.footnote_block_open = function(tokens, idx, options) {\r\n  var hr = options.xhtmlOut\r\n    ? '<hr class=\"footnotes-sep\" />\\n'\r\n    : '<hr class=\"footnotes-sep\">\\n';\r\n  return hr + '<section class=\"footnotes\">\\n<ol class=\"footnotes-list\">\\n';\r\n};\r\nrules.footnote_block_close = function() {\r\n  return '</ol>\\n</section>\\n';\r\n};\r\nrules.footnote_open = function(tokens, idx) {\r\n  var id = Number(tokens[idx].id + 1).toString();\r\n  return '<li id=\"fn' + id + '\"  class=\"footnote-item\">';\r\n};\r\nrules.footnote_close = function() {\r\n  return '</li>\\n';\r\n};\r\nrules.footnote_anchor = function(tokens, idx) {\r\n  var n = Number(tokens[idx].id + 1).toString();\r\n  var id = 'fnref' + n;\r\n  if (tokens[idx].subId > 0) {\r\n    id += ':' + tokens[idx].subId;\r\n  }\r\n  return ' <a href=\"#' + id + '\" class=\"footnote-backref\">↩</a>';\r\n};\r\n\r\n/**\r\n * Definition lists\r\n */\r\n\r\nrules.dl_open = function() {\r\n  return '<dl>\\n';\r\n};\r\nrules.dt_open = function() {\r\n  return '<dt>';\r\n};\r\nrules.dd_open = function() {\r\n  return '<dd>';\r\n};\r\nrules.dl_close = function() {\r\n  return '</dl>\\n';\r\n};\r\nrules.dt_close = function() {\r\n  return '</dt>\\n';\r\n};\r\nrules.dd_close = function() {\r\n  return '</dd>\\n';\r\n};\r\n\r\n/**\r\n * Helper functions\r\n */\r\n\r\nfunction nextToken(tokens, idx) {\r\n  if (++idx >= tokens.length - 2) {\r\n    return idx;\r\n  }\r\n  if ((tokens[idx].type === 'paragraph_open' && tokens[idx].tight) &&\r\n      (tokens[idx + 1].type === 'inline' && tokens[idx + 1].content.length === 0) &&\r\n      (tokens[idx + 2].type === 'paragraph_close' && tokens[idx + 2].tight)) {\r\n    return nextToken(tokens, idx + 2);\r\n  }\r\n  return idx;\r\n}\r\n\r\n/**\r\n * Check to see if `\\n` is needed before the next token.\r\n *\r\n * @param  {Array} `tokens`\r\n * @param  {Number} `idx`\r\n * @return {String} Empty string or newline\r\n * @api private\r\n */\r\n\r\nvar getBreak = rules.getBreak = function getBreak(tokens, idx) {\r\n  idx = nextToken(tokens, idx);\r\n  if (idx < tokens.length && tokens[idx].type === 'list_item_close') {\r\n    return '';\r\n  }\r\n  return '\\n';\r\n};\r\n\r\n/**\r\n * Renderer class. Renders HTML and exposes `rules` to allow\r\n * local modifications.\r\n */\r\n\r\nfunction Renderer() {\r\n  this.rules = assign({}, rules);\r\n\r\n  // exported helper, for custom rules only\r\n  this.getBreak = rules.getBreak;\r\n}\r\n\r\n/**\r\n * Render a string of inline HTML with the given `tokens` and\r\n * `options`.\r\n *\r\n * @param  {Array} `tokens`\r\n * @param  {Object} `options`\r\n * @param  {Object} `env`\r\n * @return {String}\r\n * @api public\r\n */\r\n\r\nRenderer.prototype.renderInline = function (tokens, options, env) {\r\n  var _rules = this.rules;\r\n  var len = tokens.length, i = 0;\r\n  var result = '';\r\n\r\n  while (len--) {\r\n    result += _rules[tokens[i].type](tokens, i++, options, env, this);\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Render a string of HTML with the given `tokens` and\r\n * `options`.\r\n *\r\n * @param  {Array} `tokens`\r\n * @param  {Object} `options`\r\n * @param  {Object} `env`\r\n * @return {String}\r\n * @api public\r\n */\r\n\r\nRenderer.prototype.render = function (tokens, options, env) {\r\n  var _rules = this.rules;\r\n  var len = tokens.length, i = -1;\r\n  var result = '';\r\n\r\n  while (++i < len) {\r\n    if (tokens[i].type === 'inline') {\r\n      result += this.renderInline(tokens[i].children, options, env);\r\n    } else {\r\n      result += _rules[tokens[i].type](tokens, i, options, env, this);\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\n/**\r\n * Ruler is a helper class for building responsibility chains from\r\n * parse rules. It allows:\r\n *\r\n *   - easy stack rules chains\r\n *   - getting main chain and named chains content (as arrays of functions)\r\n *\r\n * Helper methods, should not be used directly.\r\n * @api private\r\n */\r\n\r\nfunction Ruler() {\r\n  // List of added rules. Each element is:\r\n  //\r\n  // { name: XXX,\r\n  //   enabled: Boolean,\r\n  //   fn: Function(),\r\n  //   alt: [ name2, name3 ] }\r\n  //\r\n  this.__rules__ = [];\r\n\r\n  // Cached rule chains.\r\n  //\r\n  // First level - chain name, '' for default.\r\n  // Second level - digital anchor for fast filtering by charcodes.\r\n  //\r\n  this.__cache__ = null;\r\n}\r\n\r\n/**\r\n * Find the index of a rule by `name`.\r\n *\r\n * @param  {String} `name`\r\n * @return {Number} Index of the given `name`\r\n * @api private\r\n */\r\n\r\nRuler.prototype.__find__ = function (name) {\r\n  var len = this.__rules__.length;\r\n  var i = -1;\r\n\r\n  while (len--) {\r\n    if (this.__rules__[++i].name === name) {\r\n      return i;\r\n    }\r\n  }\r\n  return -1;\r\n};\r\n\r\n/**\r\n * Build the rules lookup cache\r\n *\r\n * @api private\r\n */\r\n\r\nRuler.prototype.__compile__ = function () {\r\n  var self = this;\r\n  var chains = [ '' ];\r\n\r\n  // collect unique names\r\n  self.__rules__.forEach(function (rule) {\r\n    if (!rule.enabled) {\r\n      return;\r\n    }\r\n\r\n    rule.alt.forEach(function (altName) {\r\n      if (chains.indexOf(altName) < 0) {\r\n        chains.push(altName);\r\n      }\r\n    });\r\n  });\r\n\r\n  self.__cache__ = {};\r\n\r\n  chains.forEach(function (chain) {\r\n    self.__cache__[chain] = [];\r\n    self.__rules__.forEach(function (rule) {\r\n      if (!rule.enabled) {\r\n        return;\r\n      }\r\n\r\n      if (chain && rule.alt.indexOf(chain) < 0) {\r\n        return;\r\n      }\r\n      self.__cache__[chain].push(rule.fn);\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * Ruler public methods\r\n * ------------------------------------------------\r\n */\r\n\r\n/**\r\n * Replace rule function\r\n *\r\n * @param  {String} `name` Rule name\r\n * @param  {Function `fn`\r\n * @param  {Object} `options`\r\n * @api private\r\n */\r\n\r\nRuler.prototype.at = function (name, fn, options) {\r\n  var idx = this.__find__(name);\r\n  var opt = options || {};\r\n\r\n  if (idx === -1) {\r\n    throw new Error('Parser rule not found: ' + name);\r\n  }\r\n\r\n  this.__rules__[idx].fn = fn;\r\n  this.__rules__[idx].alt = opt.alt || [];\r\n  this.__cache__ = null;\r\n};\r\n\r\n/**\r\n * Add a rule to the chain before given the `ruleName`.\r\n *\r\n * @param  {String}   `beforeName`\r\n * @param  {String}   `ruleName`\r\n * @param  {Function} `fn`\r\n * @param  {Object}   `options`\r\n * @api private\r\n */\r\n\r\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\r\n  var idx = this.__find__(beforeName);\r\n  var opt = options || {};\r\n\r\n  if (idx === -1) {\r\n    throw new Error('Parser rule not found: ' + beforeName);\r\n  }\r\n\r\n  this.__rules__.splice(idx, 0, {\r\n    name: ruleName,\r\n    enabled: true,\r\n    fn: fn,\r\n    alt: opt.alt || []\r\n  });\r\n\r\n  this.__cache__ = null;\r\n};\r\n\r\n/**\r\n * Add a rule to the chain after the given `ruleName`.\r\n *\r\n * @param  {String}   `afterName`\r\n * @param  {String}   `ruleName`\r\n * @param  {Function} `fn`\r\n * @param  {Object}   `options`\r\n * @api private\r\n */\r\n\r\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\r\n  var idx = this.__find__(afterName);\r\n  var opt = options || {};\r\n\r\n  if (idx === -1) {\r\n    throw new Error('Parser rule not found: ' + afterName);\r\n  }\r\n\r\n  this.__rules__.splice(idx + 1, 0, {\r\n    name: ruleName,\r\n    enabled: true,\r\n    fn: fn,\r\n    alt: opt.alt || []\r\n  });\r\n\r\n  this.__cache__ = null;\r\n};\r\n\r\n/**\r\n * Add a rule to the end of chain.\r\n *\r\n * @param  {String}   `ruleName`\r\n * @param  {Function} `fn`\r\n * @param  {Object}   `options`\r\n * @return {String}\r\n */\r\n\r\nRuler.prototype.push = function (ruleName, fn, options) {\r\n  var opt = options || {};\r\n\r\n  this.__rules__.push({\r\n    name: ruleName,\r\n    enabled: true,\r\n    fn: fn,\r\n    alt: opt.alt || []\r\n  });\r\n\r\n  this.__cache__ = null;\r\n};\r\n\r\n/**\r\n * Enable a rule or list of rules.\r\n *\r\n * @param  {String|Array} `list` Name or array of rule names to enable\r\n * @param  {Boolean} `strict` If `true`, all non listed rules will be disabled.\r\n * @api private\r\n */\r\n\r\nRuler.prototype.enable = function (list, strict) {\r\n  list = !Array.isArray(list)\r\n    ? [ list ]\r\n    : list;\r\n\r\n  // In strict mode disable all existing rules first\r\n  if (strict) {\r\n    this.__rules__.forEach(function (rule) {\r\n      rule.enabled = false;\r\n    });\r\n  }\r\n\r\n  // Search by name and enable\r\n  list.forEach(function (name) {\r\n    var idx = this.__find__(name);\r\n    if (idx < 0) {\r\n      throw new Error('Rules manager: invalid rule name ' + name);\r\n    }\r\n    this.__rules__[idx].enabled = true;\r\n  }, this);\r\n\r\n  this.__cache__ = null;\r\n};\r\n\r\n\r\n/**\r\n * Disable a rule or list of rules.\r\n *\r\n * @param  {String|Array} `list` Name or array of rule names to disable\r\n * @api private\r\n */\r\n\r\nRuler.prototype.disable = function (list) {\r\n  list = !Array.isArray(list)\r\n    ? [ list ]\r\n    : list;\r\n\r\n  // Search by name and disable\r\n  list.forEach(function (name) {\r\n    var idx = this.__find__(name);\r\n    if (idx < 0) {\r\n      throw new Error('Rules manager: invalid rule name ' + name);\r\n    }\r\n    this.__rules__[idx].enabled = false;\r\n  }, this);\r\n\r\n  this.__cache__ = null;\r\n};\r\n\r\n/**\r\n * Get a rules list as an array of functions.\r\n *\r\n * @param  {String} `chainName`\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nRuler.prototype.getRules = function (chainName) {\r\n  if (this.__cache__ === null) {\r\n    this.__compile__();\r\n  }\r\n  return this.__cache__[chainName] || [];\r\n};\r\n\r\nfunction block(state) {\r\n\r\n  if (state.inlineMode) {\r\n    state.tokens.push({\r\n      type: 'inline',\r\n      content: state.src.replace(/\\n/g, ' ').trim(),\r\n      level: 0,\r\n      lines: [ 0, 1 ],\r\n      children: []\r\n    });\r\n\r\n  } else {\r\n    state.block.parse(state.src, state.options, state.env, state.tokens);\r\n  }\r\n}\r\n\r\n// Inline parser state\r\n\r\nfunction StateInline(src, parserInline, options, env, outTokens) {\r\n  this.src = src;\r\n  this.env = env;\r\n  this.options = options;\r\n  this.parser = parserInline;\r\n  this.tokens = outTokens;\r\n  this.pos = 0;\r\n  this.posMax = this.src.length;\r\n  this.level = 0;\r\n  this.pending = '';\r\n  this.pendingLevel = 0;\r\n\r\n  this.cache = [];        // Stores { start: end } pairs. Useful for backtrack\r\n                          // optimization of pairs parse (emphasis, strikes).\r\n\r\n  // Link parser state vars\r\n\r\n  this.isInLabel = false; // Set true when seek link label - we should disable\r\n                          // \"paired\" rules (emphasis, strikes) to not skip\r\n                          // tailing `]`\r\n\r\n  this.linkLevel = 0;     // Increment for each nesting link. Used to prevent\r\n                          // nesting in definitions\r\n\r\n  this.linkContent = '';  // Temporary storage for link url\r\n\r\n  this.labelUnmatchedScopes = 0; // Track unpaired `[` for link labels\r\n                                 // (backtrack optimization)\r\n}\r\n\r\n// Flush pending text\r\n//\r\nStateInline.prototype.pushPending = function () {\r\n  this.tokens.push({\r\n    type: 'text',\r\n    content: this.pending,\r\n    level: this.pendingLevel\r\n  });\r\n  this.pending = '';\r\n};\r\n\r\n// Push new token to \"stream\".\r\n// If pending text exists - flush it as text token\r\n//\r\nStateInline.prototype.push = function (token) {\r\n  if (this.pending) {\r\n    this.pushPending();\r\n  }\r\n\r\n  this.tokens.push(token);\r\n  this.pendingLevel = this.level;\r\n};\r\n\r\n// Store value to cache.\r\n// !!! Implementation has parser-specific optimizations\r\n// !!! keys MUST be integer, >= 0; values MUST be integer, > 0\r\n//\r\nStateInline.prototype.cacheSet = function (key, val) {\r\n  for (var i = this.cache.length; i <= key; i++) {\r\n    this.cache.push(0);\r\n  }\r\n\r\n  this.cache[key] = val;\r\n};\r\n\r\n// Get cache value\r\n//\r\nStateInline.prototype.cacheGet = function (key) {\r\n  return key < this.cache.length ? this.cache[key] : 0;\r\n};\r\n\r\n/**\r\n * Parse link labels\r\n *\r\n * This function assumes that first character (`[`) already matches;\r\n * returns the end of the label.\r\n *\r\n * @param  {Object} state\r\n * @param  {Number} start\r\n * @api private\r\n */\r\n\r\nfunction parseLinkLabel(state, start) {\r\n  var level, found, marker,\r\n      labelEnd = -1,\r\n      max = state.posMax,\r\n      oldPos = state.pos,\r\n      oldFlag = state.isInLabel;\r\n\r\n  if (state.isInLabel) { return -1; }\r\n\r\n  if (state.labelUnmatchedScopes) {\r\n    state.labelUnmatchedScopes--;\r\n    return -1;\r\n  }\r\n\r\n  state.pos = start + 1;\r\n  state.isInLabel = true;\r\n  level = 1;\r\n\r\n  while (state.pos < max) {\r\n    marker = state.src.charCodeAt(state.pos);\r\n    if (marker === 0x5B /* [ */) {\r\n      level++;\r\n    } else if (marker === 0x5D /* ] */) {\r\n      level--;\r\n      if (level === 0) {\r\n        found = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    state.parser.skipToken(state);\r\n  }\r\n\r\n  if (found) {\r\n    labelEnd = state.pos;\r\n    state.labelUnmatchedScopes = 0;\r\n  } else {\r\n    state.labelUnmatchedScopes = level - 1;\r\n  }\r\n\r\n  // restore old state\r\n  state.pos = oldPos;\r\n  state.isInLabel = oldFlag;\r\n\r\n  return labelEnd;\r\n}\r\n\r\n// Parse abbreviation definitions, i.e. `*[abbr]: description`\r\n\r\n\r\nfunction parseAbbr(str, parserInline, options, env) {\r\n  var state, labelEnd, pos, max, label, title;\r\n\r\n  if (str.charCodeAt(0) !== 0x2A/* * */) { return -1; }\r\n  if (str.charCodeAt(1) !== 0x5B/* [ */) { return -1; }\r\n\r\n  if (str.indexOf(']:') === -1) { return -1; }\r\n\r\n  state = new StateInline(str, parserInline, options, env, []);\r\n  labelEnd = parseLinkLabel(state, 1);\r\n\r\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return -1; }\r\n\r\n  max = state.posMax;\r\n\r\n  // abbr title is always one line, so looking for ending \"\\n\" here\r\n  for (pos = labelEnd + 2; pos < max; pos++) {\r\n    if (state.src.charCodeAt(pos) === 0x0A) { break; }\r\n  }\r\n\r\n  label = str.slice(2, labelEnd);\r\n  title = str.slice(labelEnd + 2, pos).trim();\r\n  if (title.length === 0) { return -1; }\r\n  if (!env.abbreviations) { env.abbreviations = {}; }\r\n  // prepend ':' to avoid conflict with Object.prototype members\r\n  if (typeof env.abbreviations[':' + label] === 'undefined') {\r\n    env.abbreviations[':' + label] = title;\r\n  }\r\n\r\n  return pos;\r\n}\r\n\r\nfunction abbr(state) {\r\n  var tokens = state.tokens, i, l, content, pos;\r\n\r\n  if (state.inlineMode) {\r\n    return;\r\n  }\r\n\r\n  // Parse inlines\r\n  for (i = 1, l = tokens.length - 1; i < l; i++) {\r\n    if (tokens[i - 1].type === 'paragraph_open' &&\r\n        tokens[i].type === 'inline' &&\r\n        tokens[i + 1].type === 'paragraph_close') {\r\n\r\n      content = tokens[i].content;\r\n      while (content.length) {\r\n        pos = parseAbbr(content, state.inline, state.options, state.env);\r\n        if (pos < 0) { break; }\r\n        content = content.slice(pos).trim();\r\n      }\r\n\r\n      tokens[i].content = content;\r\n      if (!content.length) {\r\n        tokens[i - 1].tight = true;\r\n        tokens[i + 1].tight = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction normalizeLink(url) {\r\n  var normalized = replaceEntities(url);\r\n  // We shouldn't care about the result of malformed URIs,\r\n  // and should not throw an exception.\r\n  try {\r\n    normalized = decodeURI(normalized);\r\n  } catch (err) {}\r\n  return encodeURI(normalized);\r\n}\r\n\r\n/**\r\n * Parse link destination\r\n *\r\n *   - on success it returns a string and updates state.pos;\r\n *   - on failure it returns null\r\n *\r\n * @param  {Object} state\r\n * @param  {Number} pos\r\n * @api private\r\n */\r\n\r\nfunction parseLinkDestination(state, pos) {\r\n  var code, level, link,\r\n      start = pos,\r\n      max = state.posMax;\r\n\r\n  if (state.src.charCodeAt(pos) === 0x3C /* < */) {\r\n    pos++;\r\n    while (pos < max) {\r\n      code = state.src.charCodeAt(pos);\r\n      if (code === 0x0A /* \\n */) { return false; }\r\n      if (code === 0x3E /* > */) {\r\n        link = normalizeLink(unescapeMd(state.src.slice(start + 1, pos)));\r\n        if (!state.parser.validateLink(link)) { return false; }\r\n        state.pos = pos + 1;\r\n        state.linkContent = link;\r\n        return true;\r\n      }\r\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\r\n        pos += 2;\r\n        continue;\r\n      }\r\n\r\n      pos++;\r\n    }\r\n\r\n    // no closing '>'\r\n    return false;\r\n  }\r\n\r\n  // this should be ... } else { ... branch\r\n\r\n  level = 0;\r\n  while (pos < max) {\r\n    code = state.src.charCodeAt(pos);\r\n\r\n    if (code === 0x20) { break; }\r\n\r\n    // ascii control chars\r\n    if (code < 0x20 || code === 0x7F) { break; }\r\n\r\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\r\n      pos += 2;\r\n      continue;\r\n    }\r\n\r\n    if (code === 0x28 /* ( */) {\r\n      level++;\r\n      if (level > 1) { break; }\r\n    }\r\n\r\n    if (code === 0x29 /* ) */) {\r\n      level--;\r\n      if (level < 0) { break; }\r\n    }\r\n\r\n    pos++;\r\n  }\r\n\r\n  if (start === pos) { return false; }\r\n\r\n  link = unescapeMd(state.src.slice(start, pos));\r\n  if (!state.parser.validateLink(link)) { return false; }\r\n\r\n  state.linkContent = link;\r\n  state.pos = pos;\r\n  return true;\r\n}\r\n\r\n/**\r\n * Parse link title\r\n *\r\n *   - on success it returns a string and updates state.pos;\r\n *   - on failure it returns null\r\n *\r\n * @param  {Object} state\r\n * @param  {Number} pos\r\n * @api private\r\n */\r\n\r\nfunction parseLinkTitle(state, pos) {\r\n  var code,\r\n      start = pos,\r\n      max = state.posMax,\r\n      marker = state.src.charCodeAt(pos);\r\n\r\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return false; }\r\n\r\n  pos++;\r\n\r\n  // if opening marker is \"(\", switch it to closing marker \")\"\r\n  if (marker === 0x28) { marker = 0x29; }\r\n\r\n  while (pos < max) {\r\n    code = state.src.charCodeAt(pos);\r\n    if (code === marker) {\r\n      state.pos = pos + 1;\r\n      state.linkContent = unescapeMd(state.src.slice(start + 1, pos));\r\n      return true;\r\n    }\r\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\r\n      pos += 2;\r\n      continue;\r\n    }\r\n\r\n    pos++;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction normalizeReference(str) {\r\n  // use .toUpperCase() instead of .toLowerCase()\r\n  // here to avoid a conflict with Object.prototype\r\n  // members (most notably, `__proto__`)\r\n  return str.trim().replace(/\\s+/g, ' ').toUpperCase();\r\n}\r\n\r\nfunction parseReference(str, parser, options, env) {\r\n  var state, labelEnd, pos, max, code, start, href, title, label;\r\n\r\n  if (str.charCodeAt(0) !== 0x5B/* [ */) { return -1; }\r\n\r\n  if (str.indexOf(']:') === -1) { return -1; }\r\n\r\n  state = new StateInline(str, parser, options, env, []);\r\n  labelEnd = parseLinkLabel(state, 0);\r\n\r\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return -1; }\r\n\r\n  max = state.posMax;\r\n\r\n  // [label]:   destination   'title'\r\n  //         ^^^ skip optional whitespace here\r\n  for (pos = labelEnd + 2; pos < max; pos++) {\r\n    code = state.src.charCodeAt(pos);\r\n    if (code !== 0x20 && code !== 0x0A) { break; }\r\n  }\r\n\r\n  // [label]:   destination   'title'\r\n  //            ^^^^^^^^^^^ parse this\r\n  if (!parseLinkDestination(state, pos)) { return -1; }\r\n  href = state.linkContent;\r\n  pos = state.pos;\r\n\r\n  // [label]:   destination   'title'\r\n  //                       ^^^ skipping those spaces\r\n  start = pos;\r\n  for (pos = pos + 1; pos < max; pos++) {\r\n    code = state.src.charCodeAt(pos);\r\n    if (code !== 0x20 && code !== 0x0A) { break; }\r\n  }\r\n\r\n  // [label]:   destination   'title'\r\n  //                          ^^^^^^^ parse this\r\n  if (pos < max && start !== pos && parseLinkTitle(state, pos)) {\r\n    title = state.linkContent;\r\n    pos = state.pos;\r\n  } else {\r\n    title = '';\r\n    pos = start;\r\n  }\r\n\r\n  // ensure that the end of the line is empty\r\n  while (pos < max && state.src.charCodeAt(pos) === 0x20/* space */) { pos++; }\r\n  if (pos < max && state.src.charCodeAt(pos) !== 0x0A) { return -1; }\r\n\r\n  label = normalizeReference(str.slice(1, labelEnd));\r\n  if (typeof env.references[label] === 'undefined') {\r\n    env.references[label] = { title: title, href: href };\r\n  }\r\n\r\n  return pos;\r\n}\r\n\r\n\r\nfunction references(state) {\r\n  var tokens = state.tokens, i, l, content, pos;\r\n\r\n  state.env.references = state.env.references || {};\r\n\r\n  if (state.inlineMode) {\r\n    return;\r\n  }\r\n\r\n  // Scan definitions in paragraph inlines\r\n  for (i = 1, l = tokens.length - 1; i < l; i++) {\r\n    if (tokens[i].type === 'inline' &&\r\n        tokens[i - 1].type === 'paragraph_open' &&\r\n        tokens[i + 1].type === 'paragraph_close') {\r\n\r\n      content = tokens[i].content;\r\n      while (content.length) {\r\n        pos = parseReference(content, state.inline, state.options, state.env);\r\n        if (pos < 0) { break; }\r\n        content = content.slice(pos).trim();\r\n      }\r\n\r\n      tokens[i].content = content;\r\n      if (!content.length) {\r\n        tokens[i - 1].tight = true;\r\n        tokens[i + 1].tight = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction inline(state) {\r\n  var tokens = state.tokens, tok, i, l;\r\n\r\n  // Parse inlines\r\n  for (i = 0, l = tokens.length; i < l; i++) {\r\n    tok = tokens[i];\r\n    if (tok.type === 'inline') {\r\n      state.inline.parse(tok.content, state.options, state.env, tok.children);\r\n    }\r\n  }\r\n}\r\n\r\nfunction footnote_block(state) {\r\n  var i, l, j, t, lastParagraph, list, tokens, current, currentLabel,\r\n      level = 0,\r\n      insideRef = false,\r\n      refTokens = {};\r\n\r\n  if (!state.env.footnotes) { return; }\r\n\r\n  state.tokens = state.tokens.filter(function(tok) {\r\n    if (tok.type === 'footnote_reference_open') {\r\n      insideRef = true;\r\n      current = [];\r\n      currentLabel = tok.label;\r\n      return false;\r\n    }\r\n    if (tok.type === 'footnote_reference_close') {\r\n      insideRef = false;\r\n      // prepend ':' to avoid conflict with Object.prototype members\r\n      refTokens[':' + currentLabel] = current;\r\n      return false;\r\n    }\r\n    if (insideRef) { current.push(tok); }\r\n    return !insideRef;\r\n  });\r\n\r\n  if (!state.env.footnotes.list) { return; }\r\n  list = state.env.footnotes.list;\r\n\r\n  state.tokens.push({\r\n    type: 'footnote_block_open',\r\n    level: level++\r\n  });\r\n  for (i = 0, l = list.length; i < l; i++) {\r\n    state.tokens.push({\r\n      type: 'footnote_open',\r\n      id: i,\r\n      level: level++\r\n    });\r\n\r\n    if (list[i].tokens) {\r\n      tokens = [];\r\n      tokens.push({\r\n        type: 'paragraph_open',\r\n        tight: false,\r\n        level: level++\r\n      });\r\n      tokens.push({\r\n        type: 'inline',\r\n        content: '',\r\n        level: level,\r\n        children: list[i].tokens\r\n      });\r\n      tokens.push({\r\n        type: 'paragraph_close',\r\n        tight: false,\r\n        level: --level\r\n      });\r\n    } else if (list[i].label) {\r\n      tokens = refTokens[':' + list[i].label];\r\n    }\r\n\r\n    state.tokens = state.tokens.concat(tokens);\r\n    if (state.tokens[state.tokens.length - 1].type === 'paragraph_close') {\r\n      lastParagraph = state.tokens.pop();\r\n    } else {\r\n      lastParagraph = null;\r\n    }\r\n\r\n    t = list[i].count > 0 ? list[i].count : 1;\r\n    for (j = 0; j < t; j++) {\r\n      state.tokens.push({\r\n        type: 'footnote_anchor',\r\n        id: i,\r\n        subId: j,\r\n        level: level\r\n      });\r\n    }\r\n\r\n    if (lastParagraph) {\r\n      state.tokens.push(lastParagraph);\r\n    }\r\n\r\n    state.tokens.push({\r\n      type: 'footnote_close',\r\n      level: --level\r\n    });\r\n  }\r\n  state.tokens.push({\r\n    type: 'footnote_block_close',\r\n    level: --level\r\n  });\r\n}\r\n\r\n// Enclose abbreviations in <abbr> tags\r\n//\r\n\r\nvar PUNCT_CHARS = ' \\n()[]\\'\".,!?-';\r\n\r\n\r\n// from Google closure library\r\n// http://closure-library.googlecode.com/git-history/docs/local_closure_goog_string_string.js.source.html#line1021\r\nfunction regEscape(s) {\r\n  return s.replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1');\r\n}\r\n\r\n\r\nfunction abbr2(state) {\r\n  var i, j, l, tokens, token, text, nodes, pos, level, reg, m, regText,\r\n      blockTokens = state.tokens;\r\n\r\n  if (!state.env.abbreviations) { return; }\r\n  if (!state.env.abbrRegExp) {\r\n    regText = '(^|[' + PUNCT_CHARS.split('').map(regEscape).join('') + '])'\r\n            + '(' + Object.keys(state.env.abbreviations).map(function (x) {\r\n                      return x.substr(1);\r\n                    }).sort(function (a, b) {\r\n                      return b.length - a.length;\r\n                    }).map(regEscape).join('|') + ')'\r\n            + '($|[' + PUNCT_CHARS.split('').map(regEscape).join('') + '])';\r\n    state.env.abbrRegExp = new RegExp(regText, 'g');\r\n  }\r\n  reg = state.env.abbrRegExp;\r\n\r\n  for (j = 0, l = blockTokens.length; j < l; j++) {\r\n    if (blockTokens[j].type !== 'inline') { continue; }\r\n    tokens = blockTokens[j].children;\r\n\r\n    // We scan from the end, to keep position when new tags added.\r\n    for (i = tokens.length - 1; i >= 0; i--) {\r\n      token = tokens[i];\r\n      if (token.type !== 'text') { continue; }\r\n\r\n      pos = 0;\r\n      text = token.content;\r\n      reg.lastIndex = 0;\r\n      level = token.level;\r\n      nodes = [];\r\n\r\n      while ((m = reg.exec(text))) {\r\n        if (reg.lastIndex > pos) {\r\n          nodes.push({\r\n            type: 'text',\r\n            content: text.slice(pos, m.index + m[1].length),\r\n            level: level\r\n          });\r\n        }\r\n\r\n        nodes.push({\r\n          type: 'abbr_open',\r\n          title: state.env.abbreviations[':' + m[2]],\r\n          level: level++\r\n        });\r\n        nodes.push({\r\n          type: 'text',\r\n          content: m[2],\r\n          level: level\r\n        });\r\n        nodes.push({\r\n          type: 'abbr_close',\r\n          level: --level\r\n        });\r\n        pos = reg.lastIndex - m[3].length;\r\n      }\r\n\r\n      if (!nodes.length) { continue; }\r\n\r\n      if (pos < text.length) {\r\n        nodes.push({\r\n          type: 'text',\r\n          content: text.slice(pos),\r\n          level: level\r\n        });\r\n      }\r\n\r\n      // replace current node\r\n      blockTokens[j].children = tokens = [].concat(tokens.slice(0, i), nodes, tokens.slice(i + 1));\r\n    }\r\n  }\r\n}\r\n\r\n// Simple typographical replacements\r\n//\r\n// TODO:\r\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\r\n// - miltiplication 2 x 4 -> 2 × 4\r\n\r\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\r\n\r\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\r\nvar SCOPED_ABBR = {\r\n  'c': '©',\r\n  'r': '®',\r\n  'p': '§',\r\n  'tm': '™'\r\n};\r\n\r\nfunction replaceScopedAbbr(str) {\r\n  if (str.indexOf('(') < 0) { return str; }\r\n\r\n  return str.replace(SCOPED_ABBR_RE, function(match, name) {\r\n    return SCOPED_ABBR[name.toLowerCase()];\r\n  });\r\n}\r\n\r\n\r\nfunction replace(state) {\r\n  var i, token, text, inlineTokens, blkIdx;\r\n\r\n  if (!state.options.typographer) { return; }\r\n\r\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\r\n\r\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\r\n\r\n    inlineTokens = state.tokens[blkIdx].children;\r\n\r\n    for (i = inlineTokens.length - 1; i >= 0; i--) {\r\n      token = inlineTokens[i];\r\n      if (token.type === 'text') {\r\n        text = token.content;\r\n\r\n        text = replaceScopedAbbr(text);\r\n\r\n        if (RARE_RE.test(text)) {\r\n          text = text\r\n            .replace(/\\+-/g, '±')\r\n            // .., ..., ....... -> …\r\n            // but ?..... & !..... -> ?.. & !..\r\n            .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\r\n            .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\r\n            // em-dash\r\n            .replace(/(^|[^-])---([^-]|$)/mg, '$1\\u2014$2')\r\n            // en-dash\r\n            .replace(/(^|\\s)--(\\s|$)/mg, '$1\\u2013$2')\r\n            .replace(/(^|[^-\\s])--([^-\\s]|$)/mg, '$1\\u2013$2');\r\n        }\r\n\r\n        token.content = text;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Convert straight quotation marks to typographic ones\r\n//\r\n\r\nvar QUOTE_TEST_RE = /['\"]/;\r\nvar QUOTE_RE = /['\"]/g;\r\nvar PUNCT_RE = /[-\\s()\\[\\]]/;\r\nvar APOSTROPHE = '’';\r\n\r\n// This function returns true if the character at `pos`\r\n// could be inside a word.\r\nfunction isLetter(str, pos) {\r\n  if (pos < 0 || pos >= str.length) { return false; }\r\n  return !PUNCT_RE.test(str[pos]);\r\n}\r\n\r\n\r\nfunction replaceAt(str, index, ch) {\r\n  return str.substr(0, index) + ch + str.substr(index + 1);\r\n}\r\n\r\n\r\nfunction smartquotes(state) {\r\n  /*eslint max-depth:0*/\r\n  var i, token, text, t, pos, max, thisLevel, lastSpace, nextSpace, item,\r\n      canOpen, canClose, j, isSingle, blkIdx, tokens,\r\n      stack;\r\n\r\n  if (!state.options.typographer) { return; }\r\n\r\n  stack = [];\r\n\r\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\r\n\r\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\r\n\r\n    tokens = state.tokens[blkIdx].children;\r\n    stack.length = 0;\r\n\r\n    for (i = 0; i < tokens.length; i++) {\r\n      token = tokens[i];\r\n\r\n      if (token.type !== 'text' || QUOTE_TEST_RE.test(token.text)) { continue; }\r\n\r\n      thisLevel = tokens[i].level;\r\n\r\n      for (j = stack.length - 1; j >= 0; j--) {\r\n        if (stack[j].level <= thisLevel) { break; }\r\n      }\r\n      stack.length = j + 1;\r\n\r\n      text = token.content;\r\n      pos = 0;\r\n      max = text.length;\r\n\r\n      /*eslint no-labels:0,block-scoped-var:0*/\r\n      OUTER:\r\n      while (pos < max) {\r\n        QUOTE_RE.lastIndex = pos;\r\n        t = QUOTE_RE.exec(text);\r\n        if (!t) { break; }\r\n\r\n        lastSpace = !isLetter(text, t.index - 1);\r\n        pos = t.index + 1;\r\n        isSingle = (t[0] === \"'\");\r\n        nextSpace = !isLetter(text, pos);\r\n\r\n        if (!nextSpace && !lastSpace) {\r\n          // middle of word\r\n          if (isSingle) {\r\n            token.content = replaceAt(token.content, t.index, APOSTROPHE);\r\n          }\r\n          continue;\r\n        }\r\n\r\n        canOpen = !nextSpace;\r\n        canClose = !lastSpace;\r\n\r\n        if (canClose) {\r\n          // this could be a closing quote, rewind the stack to get a match\r\n          for (j = stack.length - 1; j >= 0; j--) {\r\n            item = stack[j];\r\n            if (stack[j].level < thisLevel) { break; }\r\n            if (item.single === isSingle && stack[j].level === thisLevel) {\r\n              item = stack[j];\r\n              if (isSingle) {\r\n                tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, state.options.quotes[2]);\r\n                token.content = replaceAt(token.content, t.index, state.options.quotes[3]);\r\n              } else {\r\n                tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, state.options.quotes[0]);\r\n                token.content = replaceAt(token.content, t.index, state.options.quotes[1]);\r\n              }\r\n              stack.length = j;\r\n              continue OUTER;\r\n            }\r\n          }\r\n        }\r\n\r\n        if (canOpen) {\r\n          stack.push({\r\n            token: i,\r\n            pos: t.index,\r\n            single: isSingle,\r\n            level: thisLevel\r\n          });\r\n        } else if (canClose && isSingle) {\r\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Core parser `rules`\r\n */\r\n\r\nvar _rules = [\r\n  [ 'block',          block          ],\r\n  [ 'abbr',           abbr           ],\r\n  [ 'references',     references     ],\r\n  [ 'inline',         inline         ],\r\n  [ 'footnote_tail',  footnote_block  ],\r\n  [ 'abbr2',          abbr2          ],\r\n  [ 'replacements',   replace   ],\r\n  [ 'smartquotes',    smartquotes    ],\r\n];\r\n\r\n/**\r\n * Class for top level (`core`) parser rules\r\n *\r\n * @api private\r\n */\r\n\r\nfunction Core() {\r\n  this.options = {};\r\n  this.ruler = new Ruler();\r\n  for (var i = 0; i < _rules.length; i++) {\r\n    this.ruler.push(_rules[i][0], _rules[i][1]);\r\n  }\r\n}\r\n\r\n/**\r\n * Process rules with the given `state`\r\n *\r\n * @param  {Object} `state`\r\n * @api private\r\n */\r\n\r\nCore.prototype.process = function (state) {\r\n  var i, l, rules;\r\n  rules = this.ruler.getRules('');\r\n  for (i = 0, l = rules.length; i < l; i++) {\r\n    rules[i](state);\r\n  }\r\n};\r\n\r\n// Parser state class\r\n\r\nfunction StateBlock(src, parser, options, env, tokens) {\r\n  var ch, s, start, pos, len, indent, indent_found;\r\n\r\n  this.src = src;\r\n\r\n  // Shortcuts to simplify nested calls\r\n  this.parser = parser;\r\n\r\n  this.options = options;\r\n\r\n  this.env = env;\r\n\r\n  //\r\n  // Internal state vartiables\r\n  //\r\n\r\n  this.tokens = tokens;\r\n\r\n  this.bMarks = [];  // line begin offsets for fast jumps\r\n  this.eMarks = [];  // line end offsets for fast jumps\r\n  this.tShift = [];  // indent for each line\r\n\r\n  // block parser variables\r\n  this.blkIndent  = 0; // required block content indent\r\n                       // (for example, if we are in list)\r\n  this.line       = 0; // line index in src\r\n  this.lineMax    = 0; // lines count\r\n  this.tight      = false;  // loose/tight mode for lists\r\n  this.parentType = 'root'; // if `list`, block parser stops on two newlines\r\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\r\n\r\n  this.level = 0;\r\n\r\n  // renderer\r\n  this.result = '';\r\n\r\n  // Create caches\r\n  // Generate markers.\r\n  s = this.src;\r\n  indent = 0;\r\n  indent_found = false;\r\n\r\n  for (start = pos = indent = 0, len = s.length; pos < len; pos++) {\r\n    ch = s.charCodeAt(pos);\r\n\r\n    if (!indent_found) {\r\n      if (ch === 0x20/* space */) {\r\n        indent++;\r\n        continue;\r\n      } else {\r\n        indent_found = true;\r\n      }\r\n    }\r\n\r\n    if (ch === 0x0A || pos === len - 1) {\r\n      if (ch !== 0x0A) { pos++; }\r\n      this.bMarks.push(start);\r\n      this.eMarks.push(pos);\r\n      this.tShift.push(indent);\r\n\r\n      indent_found = false;\r\n      indent = 0;\r\n      start = pos + 1;\r\n    }\r\n  }\r\n\r\n  // Push fake entry to simplify cache bounds checks\r\n  this.bMarks.push(s.length);\r\n  this.eMarks.push(s.length);\r\n  this.tShift.push(0);\r\n\r\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\r\n}\r\n\r\nStateBlock.prototype.isEmpty = function isEmpty(line) {\r\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\r\n};\r\n\r\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\r\n  for (var max = this.lineMax; from < max; from++) {\r\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\r\n      break;\r\n    }\r\n  }\r\n  return from;\r\n};\r\n\r\n// Skip spaces from given position.\r\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\r\n  for (var max = this.src.length; pos < max; pos++) {\r\n    if (this.src.charCodeAt(pos) !== 0x20/* space */) { break; }\r\n  }\r\n  return pos;\r\n};\r\n\r\n// Skip char codes from given position\r\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\r\n  for (var max = this.src.length; pos < max; pos++) {\r\n    if (this.src.charCodeAt(pos) !== code) { break; }\r\n  }\r\n  return pos;\r\n};\r\n\r\n// Skip char codes reverse from given position - 1\r\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\r\n  if (pos <= min) { return pos; }\r\n\r\n  while (pos > min) {\r\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\r\n  }\r\n  return pos;\r\n};\r\n\r\n// cut lines range from source.\r\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\r\n  var i, first, last, queue, shift,\r\n      line = begin;\r\n\r\n  if (begin >= end) {\r\n    return '';\r\n  }\r\n\r\n  // Opt: don't use push queue for single line;\r\n  if (line + 1 === end) {\r\n    first = this.bMarks[line] + Math.min(this.tShift[line], indent);\r\n    last = keepLastLF ? this.eMarks[line] + 1 : this.eMarks[line];\r\n    return this.src.slice(first, last);\r\n  }\r\n\r\n  queue = new Array(end - begin);\r\n\r\n  for (i = 0; line < end; line++, i++) {\r\n    shift = this.tShift[line];\r\n    if (shift > indent) { shift = indent; }\r\n    if (shift < 0) { shift = 0; }\r\n\r\n    first = this.bMarks[line] + shift;\r\n\r\n    if (line + 1 < end || keepLastLF) {\r\n      // No need for bounds check because we have fake entry on tail.\r\n      last = this.eMarks[line] + 1;\r\n    } else {\r\n      last = this.eMarks[line];\r\n    }\r\n\r\n    queue[i] = this.src.slice(first, last);\r\n  }\r\n\r\n  return queue.join('');\r\n};\r\n\r\n// Code block (4 spaces padded)\r\n\r\nfunction code(state, startLine, endLine/*, silent*/) {\r\n  var nextLine, last;\r\n\r\n  if (state.tShift[startLine] - state.blkIndent < 4) { return false; }\r\n\r\n  last = nextLine = startLine + 1;\r\n\r\n  while (nextLine < endLine) {\r\n    if (state.isEmpty(nextLine)) {\r\n      nextLine++;\r\n      continue;\r\n    }\r\n    if (state.tShift[nextLine] - state.blkIndent >= 4) {\r\n      nextLine++;\r\n      last = nextLine;\r\n      continue;\r\n    }\r\n    break;\r\n  }\r\n\r\n  state.line = nextLine;\r\n  state.tokens.push({\r\n    type: 'code',\r\n    content: state.getLines(startLine, last, 4 + state.blkIndent, true),\r\n    block: true,\r\n    lines: [ startLine, state.line ],\r\n    level: state.level\r\n  });\r\n\r\n  return true;\r\n}\r\n\r\n// fences (``` lang, ~~~ lang)\r\n\r\nfunction fences(state, startLine, endLine, silent) {\r\n  var marker, len, params, nextLine, mem,\r\n      haveEndMarker = false,\r\n      pos = state.bMarks[startLine] + state.tShift[startLine],\r\n      max = state.eMarks[startLine];\r\n\r\n  if (pos + 3 > max) { return false; }\r\n\r\n  marker = state.src.charCodeAt(pos);\r\n\r\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\r\n    return false;\r\n  }\r\n\r\n  // scan marker length\r\n  mem = pos;\r\n  pos = state.skipChars(pos, marker);\r\n\r\n  len = pos - mem;\r\n\r\n  if (len < 3) { return false; }\r\n\r\n  params = state.src.slice(pos, max).trim();\r\n\r\n  if (params.indexOf('`') >= 0) { return false; }\r\n\r\n  // Since start is found, we can report success here in validation mode\r\n  if (silent) { return true; }\r\n\r\n  // search end of block\r\n  nextLine = startLine;\r\n\r\n  for (;;) {\r\n    nextLine++;\r\n    if (nextLine >= endLine) {\r\n      // unclosed block should be autoclosed by end of document.\r\n      // also block seems to be autoclosed by end of parent\r\n      break;\r\n    }\r\n\r\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\r\n    max = state.eMarks[nextLine];\r\n\r\n    if (pos < max && state.tShift[nextLine] < state.blkIndent) {\r\n      // non-empty line with negative indent should stop the list:\r\n      // - ```\r\n      //  test\r\n      break;\r\n    }\r\n\r\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\r\n\r\n    if (state.tShift[nextLine] - state.blkIndent >= 4) {\r\n      // closing fence should be indented less than 4 spaces\r\n      continue;\r\n    }\r\n\r\n    pos = state.skipChars(pos, marker);\r\n\r\n    // closing code fence must be at least as long as the opening one\r\n    if (pos - mem < len) { continue; }\r\n\r\n    // make sure tail has spaces only\r\n    pos = state.skipSpaces(pos);\r\n\r\n    if (pos < max) { continue; }\r\n\r\n    haveEndMarker = true;\r\n    // found!\r\n    break;\r\n  }\r\n\r\n  // If a fence has heading spaces, they should be removed from its inner block\r\n  len = state.tShift[startLine];\r\n\r\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\r\n  state.tokens.push({\r\n    type: 'fence',\r\n    params: params,\r\n    content: state.getLines(startLine + 1, nextLine, len, true),\r\n    lines: [ startLine, state.line ],\r\n    level: state.level\r\n  });\r\n\r\n  return true;\r\n}\r\n\r\n// Block quotes\r\n\r\nfunction blockquote(state, startLine, endLine, silent) {\r\n  var nextLine, lastLineEmpty, oldTShift, oldBMarks, oldIndent, oldParentType, lines,\r\n      terminatorRules,\r\n      i, l, terminate,\r\n      pos = state.bMarks[startLine] + state.tShift[startLine],\r\n      max = state.eMarks[startLine];\r\n\r\n  if (pos > max) { return false; }\r\n\r\n  // check the block quote marker\r\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\r\n\r\n  if (state.level >= state.options.maxNesting) { return false; }\r\n\r\n  // we know that it's going to be a valid blockquote,\r\n  // so no point trying to find the end of it in silent mode\r\n  if (silent) { return true; }\r\n\r\n  // skip one optional space after '>'\r\n  if (state.src.charCodeAt(pos) === 0x20) { pos++; }\r\n\r\n  oldIndent = state.blkIndent;\r\n  state.blkIndent = 0;\r\n\r\n  oldBMarks = [ state.bMarks[startLine] ];\r\n  state.bMarks[startLine] = pos;\r\n\r\n  // check if we have an empty blockquote\r\n  pos = pos < max ? state.skipSpaces(pos) : pos;\r\n  lastLineEmpty = pos >= max;\r\n\r\n  oldTShift = [ state.tShift[startLine] ];\r\n  state.tShift[startLine] = pos - state.bMarks[startLine];\r\n\r\n  terminatorRules = state.parser.ruler.getRules('blockquote');\r\n\r\n  // Search the end of the block\r\n  //\r\n  // Block ends with either:\r\n  //  1. an empty line outside:\r\n  //     ```\r\n  //     > test\r\n  //\r\n  //     ```\r\n  //  2. an empty line inside:\r\n  //     ```\r\n  //     >\r\n  //     test\r\n  //     ```\r\n  //  3. another tag\r\n  //     ```\r\n  //     > test\r\n  //      - - -\r\n  //     ```\r\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\r\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\r\n    max = state.eMarks[nextLine];\r\n\r\n    if (pos >= max) {\r\n      // Case 1: line is not inside the blockquote, and this line is empty.\r\n      break;\r\n    }\r\n\r\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */) {\r\n      // This line is inside the blockquote.\r\n\r\n      // skip one optional space after '>'\r\n      if (state.src.charCodeAt(pos) === 0x20) { pos++; }\r\n\r\n      oldBMarks.push(state.bMarks[nextLine]);\r\n      state.bMarks[nextLine] = pos;\r\n\r\n      pos = pos < max ? state.skipSpaces(pos) : pos;\r\n      lastLineEmpty = pos >= max;\r\n\r\n      oldTShift.push(state.tShift[nextLine]);\r\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\r\n      continue;\r\n    }\r\n\r\n    // Case 2: line is not inside the blockquote, and the last line was empty.\r\n    if (lastLineEmpty) { break; }\r\n\r\n    // Case 3: another tag found.\r\n    terminate = false;\r\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\r\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\r\n        terminate = true;\r\n        break;\r\n      }\r\n    }\r\n    if (terminate) { break; }\r\n\r\n    oldBMarks.push(state.bMarks[nextLine]);\r\n    oldTShift.push(state.tShift[nextLine]);\r\n\r\n    // A negative number means that this is a paragraph continuation;\r\n    //\r\n    // Any negative number will do the job here, but it's better for it\r\n    // to be large enough to make any bugs obvious.\r\n    state.tShift[nextLine] = -1337;\r\n  }\r\n\r\n  oldParentType = state.parentType;\r\n  state.parentType = 'blockquote';\r\n  state.tokens.push({\r\n    type: 'blockquote_open',\r\n    lines: lines = [ startLine, 0 ],\r\n    level: state.level++\r\n  });\r\n  state.parser.tokenize(state, startLine, nextLine);\r\n  state.tokens.push({\r\n    type: 'blockquote_close',\r\n    level: --state.level\r\n  });\r\n  state.parentType = oldParentType;\r\n  lines[1] = state.line;\r\n\r\n  // Restore original tShift; this might not be necessary since the parser\r\n  // has already been here, but just to make sure we can do that.\r\n  for (i = 0; i < oldTShift.length; i++) {\r\n    state.bMarks[i + startLine] = oldBMarks[i];\r\n    state.tShift[i + startLine] = oldTShift[i];\r\n  }\r\n  state.blkIndent = oldIndent;\r\n\r\n  return true;\r\n}\r\n\r\n// Horizontal rule\r\n\r\nfunction hr(state, startLine, endLine, silent) {\r\n  var marker, cnt, ch,\r\n      pos = state.bMarks[startLine],\r\n      max = state.eMarks[startLine];\r\n\r\n  pos += state.tShift[startLine];\r\n\r\n  if (pos > max) { return false; }\r\n\r\n  marker = state.src.charCodeAt(pos++);\r\n\r\n  // Check hr marker\r\n  if (marker !== 0x2A/* * */ &&\r\n      marker !== 0x2D/* - */ &&\r\n      marker !== 0x5F/* _ */) {\r\n    return false;\r\n  }\r\n\r\n  // markers can be mixed with spaces, but there should be at least 3 one\r\n\r\n  cnt = 1;\r\n  while (pos < max) {\r\n    ch = state.src.charCodeAt(pos++);\r\n    if (ch !== marker && ch !== 0x20/* space */) { return false; }\r\n    if (ch === marker) { cnt++; }\r\n  }\r\n\r\n  if (cnt < 3) { return false; }\r\n\r\n  if (silent) { return true; }\r\n\r\n  state.line = startLine + 1;\r\n  state.tokens.push({\r\n    type: 'hr',\r\n    lines: [ startLine, state.line ],\r\n    level: state.level\r\n  });\r\n\r\n  return true;\r\n}\r\n\r\n// Lists\r\n\r\n// Search `[-+*][\\n ]`, returns next pos arter marker on success\r\n// or -1 on fail.\r\nfunction skipBulletListMarker(state, startLine) {\r\n  var marker, pos, max;\r\n\r\n  pos = state.bMarks[startLine] + state.tShift[startLine];\r\n  max = state.eMarks[startLine];\r\n\r\n  if (pos >= max) { return -1; }\r\n\r\n  marker = state.src.charCodeAt(pos++);\r\n  // Check bullet\r\n  if (marker !== 0x2A/* * */ &&\r\n      marker !== 0x2D/* - */ &&\r\n      marker !== 0x2B/* + */) {\r\n    return -1;\r\n  }\r\n\r\n  if (pos < max && state.src.charCodeAt(pos) !== 0x20) {\r\n    // \" 1.test \" - is not a list item\r\n    return -1;\r\n  }\r\n\r\n  return pos;\r\n}\r\n\r\n// Search `\\d+[.)][\\n ]`, returns next pos arter marker on success\r\n// or -1 on fail.\r\nfunction skipOrderedListMarker(state, startLine) {\r\n  var ch,\r\n      pos = state.bMarks[startLine] + state.tShift[startLine],\r\n      max = state.eMarks[startLine];\r\n\r\n  if (pos + 1 >= max) { return -1; }\r\n\r\n  ch = state.src.charCodeAt(pos++);\r\n\r\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\r\n\r\n  for (;;) {\r\n    // EOL -> fail\r\n    if (pos >= max) { return -1; }\r\n\r\n    ch = state.src.charCodeAt(pos++);\r\n\r\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\r\n      continue;\r\n    }\r\n\r\n    // found valid marker\r\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\r\n      break;\r\n    }\r\n\r\n    return -1;\r\n  }\r\n\r\n\r\n  if (pos < max && state.src.charCodeAt(pos) !== 0x20/* space */) {\r\n    // \" 1.test \" - is not a list item\r\n    return -1;\r\n  }\r\n  return pos;\r\n}\r\n\r\nfunction markTightParagraphs(state, idx) {\r\n  var i, l,\r\n      level = state.level + 2;\r\n\r\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\r\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\r\n      state.tokens[i + 2].tight = true;\r\n      state.tokens[i].tight = true;\r\n      i += 2;\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction list(state, startLine, endLine, silent) {\r\n  var nextLine,\r\n      indent,\r\n      oldTShift,\r\n      oldIndent,\r\n      oldTight,\r\n      oldParentType,\r\n      start,\r\n      posAfterMarker,\r\n      max,\r\n      indentAfterMarker,\r\n      markerValue,\r\n      markerCharCode,\r\n      isOrdered,\r\n      contentStart,\r\n      listTokIdx,\r\n      prevEmptyEnd,\r\n      listLines,\r\n      itemLines,\r\n      tight = true,\r\n      terminatorRules,\r\n      i, l, terminate;\r\n\r\n  // Detect list type and position after marker\r\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\r\n    isOrdered = true;\r\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\r\n    isOrdered = false;\r\n  } else {\r\n    return false;\r\n  }\r\n\r\n  if (state.level >= state.options.maxNesting) { return false; }\r\n\r\n  // We should terminate list on style change. Remember first one to compare.\r\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\r\n\r\n  // For validation mode we can terminate immediately\r\n  if (silent) { return true; }\r\n\r\n  // Start list\r\n  listTokIdx = state.tokens.length;\r\n\r\n  if (isOrdered) {\r\n    start = state.bMarks[startLine] + state.tShift[startLine];\r\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));\r\n\r\n    state.tokens.push({\r\n      type: 'ordered_list_open',\r\n      order: markerValue,\r\n      lines: listLines = [ startLine, 0 ],\r\n      level: state.level++\r\n    });\r\n\r\n  } else {\r\n    state.tokens.push({\r\n      type: 'bullet_list_open',\r\n      lines: listLines = [ startLine, 0 ],\r\n      level: state.level++\r\n    });\r\n  }\r\n\r\n  //\r\n  // Iterate list items\r\n  //\r\n\r\n  nextLine = startLine;\r\n  prevEmptyEnd = false;\r\n  terminatorRules = state.parser.ruler.getRules('list');\r\n\r\n  while (nextLine < endLine) {\r\n    contentStart = state.skipSpaces(posAfterMarker);\r\n    max = state.eMarks[nextLine];\r\n\r\n    if (contentStart >= max) {\r\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\r\n      indentAfterMarker = 1;\r\n    } else {\r\n      indentAfterMarker = contentStart - posAfterMarker;\r\n    }\r\n\r\n    // If we have more than 4 spaces, the indent is 1\r\n    // (the rest is just indented code block)\r\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\r\n\r\n    // If indent is less than 1, assume that it's one, example:\r\n    //  \"-\\n  test\"\r\n    if (indentAfterMarker < 1) { indentAfterMarker = 1; }\r\n\r\n    // \"  -  test\"\r\n    //  ^^^^^ - calculating total length of this thing\r\n    indent = (posAfterMarker - state.bMarks[nextLine]) + indentAfterMarker;\r\n\r\n    // Run subparser & write tokens\r\n    state.tokens.push({\r\n      type: 'list_item_open',\r\n      lines: itemLines = [ startLine, 0 ],\r\n      level: state.level++\r\n    });\r\n\r\n    oldIndent = state.blkIndent;\r\n    oldTight = state.tight;\r\n    oldTShift = state.tShift[startLine];\r\n    oldParentType = state.parentType;\r\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\r\n    state.blkIndent = indent;\r\n    state.tight = true;\r\n    state.parentType = 'list';\r\n\r\n    state.parser.tokenize(state, startLine, endLine, true);\r\n\r\n    // If any of list item is tight, mark list as tight\r\n    if (!state.tight || prevEmptyEnd) {\r\n      tight = false;\r\n    }\r\n    // Item become loose if finish with empty line,\r\n    // but we should filter last element, because it means list finish\r\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\r\n\r\n    state.blkIndent = oldIndent;\r\n    state.tShift[startLine] = oldTShift;\r\n    state.tight = oldTight;\r\n    state.parentType = oldParentType;\r\n\r\n    state.tokens.push({\r\n      type: 'list_item_close',\r\n      level: --state.level\r\n    });\r\n\r\n    nextLine = startLine = state.line;\r\n    itemLines[1] = nextLine;\r\n    contentStart = state.bMarks[startLine];\r\n\r\n    if (nextLine >= endLine) { break; }\r\n\r\n    if (state.isEmpty(nextLine)) {\r\n      break;\r\n    }\r\n\r\n    //\r\n    // Try to check if list is terminated or continued.\r\n    //\r\n    if (state.tShift[nextLine] < state.blkIndent) { break; }\r\n\r\n    // fail if terminating block found\r\n    terminate = false;\r\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\r\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\r\n        terminate = true;\r\n        break;\r\n      }\r\n    }\r\n    if (terminate) { break; }\r\n\r\n    // fail if list has another type\r\n    if (isOrdered) {\r\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\r\n      if (posAfterMarker < 0) { break; }\r\n    } else {\r\n      posAfterMarker = skipBulletListMarker(state, nextLine);\r\n      if (posAfterMarker < 0) { break; }\r\n    }\r\n\r\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\r\n  }\r\n\r\n  // Finilize list\r\n  state.tokens.push({\r\n    type: isOrdered ? 'ordered_list_close' : 'bullet_list_close',\r\n    level: --state.level\r\n  });\r\n  listLines[1] = nextLine;\r\n\r\n  state.line = nextLine;\r\n\r\n  // mark paragraphs tight if needed\r\n  if (tight) {\r\n    markTightParagraphs(state, listTokIdx);\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n// Process footnote reference list\r\n\r\nfunction footnote(state, startLine, endLine, silent) {\r\n  var oldBMark, oldTShift, oldParentType, pos, label,\r\n      start = state.bMarks[startLine] + state.tShift[startLine],\r\n      max = state.eMarks[startLine];\r\n\r\n  // line should be at least 5 chars - \"[^x]:\"\r\n  if (start + 4 > max) { return false; }\r\n\r\n  if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\r\n  if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\r\n  if (state.level >= state.options.maxNesting) { return false; }\r\n\r\n  for (pos = start + 2; pos < max; pos++) {\r\n    if (state.src.charCodeAt(pos) === 0x20) { return false; }\r\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (pos === start + 2) { return false; } // no empty footnote labels\r\n  if (pos + 1 >= max || state.src.charCodeAt(++pos) !== 0x3A /* : */) { return false; }\r\n  if (silent) { return true; }\r\n  pos++;\r\n\r\n  if (!state.env.footnotes) { state.env.footnotes = {}; }\r\n  if (!state.env.footnotes.refs) { state.env.footnotes.refs = {}; }\r\n  label = state.src.slice(start + 2, pos - 2);\r\n  state.env.footnotes.refs[':' + label] = -1;\r\n\r\n  state.tokens.push({\r\n    type: 'footnote_reference_open',\r\n    label: label,\r\n    level: state.level++\r\n  });\r\n\r\n  oldBMark = state.bMarks[startLine];\r\n  oldTShift = state.tShift[startLine];\r\n  oldParentType = state.parentType;\r\n  state.tShift[startLine] = state.skipSpaces(pos) - pos;\r\n  state.bMarks[startLine] = pos;\r\n  state.blkIndent += 4;\r\n  state.parentType = 'footnote';\r\n\r\n  if (state.tShift[startLine] < state.blkIndent) {\r\n    state.tShift[startLine] += state.blkIndent;\r\n    state.bMarks[startLine] -= state.blkIndent;\r\n  }\r\n\r\n  state.parser.tokenize(state, startLine, endLine, true);\r\n\r\n  state.parentType = oldParentType;\r\n  state.blkIndent -= 4;\r\n  state.tShift[startLine] = oldTShift;\r\n  state.bMarks[startLine] = oldBMark;\r\n\r\n  state.tokens.push({\r\n    type: 'footnote_reference_close',\r\n    level: --state.level\r\n  });\r\n\r\n  return true;\r\n}\r\n\r\n// heading (#, ##, ...)\r\n\r\nfunction heading(state, startLine, endLine, silent) {\r\n  var ch, level, tmp,\r\n      pos = state.bMarks[startLine] + state.tShift[startLine],\r\n      max = state.eMarks[startLine];\r\n\r\n  if (pos >= max) { return false; }\r\n\r\n  ch  = state.src.charCodeAt(pos);\r\n\r\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\r\n\r\n  // count heading level\r\n  level = 1;\r\n  ch = state.src.charCodeAt(++pos);\r\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\r\n    level++;\r\n    ch = state.src.charCodeAt(++pos);\r\n  }\r\n\r\n  if (level > 6 || (pos < max && ch !== 0x20/* space */)) { return false; }\r\n\r\n  if (silent) { return true; }\r\n\r\n  // Let's cut tails like '    ###  ' from the end of string\r\n\r\n  max = state.skipCharsBack(max, 0x20, pos); // space\r\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\r\n  if (tmp > pos && state.src.charCodeAt(tmp - 1) === 0x20/* space */) {\r\n    max = tmp;\r\n  }\r\n\r\n  state.line = startLine + 1;\r\n\r\n  state.tokens.push({ type: 'heading_open',\r\n    hLevel: level,\r\n    lines: [ startLine, state.line ],\r\n    level: state.level\r\n  });\r\n\r\n  // only if header is not empty\r\n  if (pos < max) {\r\n    state.tokens.push({\r\n      type: 'inline',\r\n      content: state.src.slice(pos, max).trim(),\r\n      level: state.level + 1,\r\n      lines: [ startLine, state.line ],\r\n      children: []\r\n    });\r\n  }\r\n  state.tokens.push({ type: 'heading_close', hLevel: level, level: state.level });\r\n\r\n  return true;\r\n}\r\n\r\n// lheading (---, ===)\r\n\r\nfunction lheading(state, startLine, endLine/*, silent*/) {\r\n  var marker, pos, max,\r\n      next = startLine + 1;\r\n\r\n  if (next >= endLine) { return false; }\r\n  if (state.tShift[next] < state.blkIndent) { return false; }\r\n\r\n  // Scan next line\r\n\r\n  if (state.tShift[next] - state.blkIndent > 3) { return false; }\r\n\r\n  pos = state.bMarks[next] + state.tShift[next];\r\n  max = state.eMarks[next];\r\n\r\n  if (pos >= max) { return false; }\r\n\r\n  marker = state.src.charCodeAt(pos);\r\n\r\n  if (marker !== 0x2D/* - */ && marker !== 0x3D/* = */) { return false; }\r\n\r\n  pos = state.skipChars(pos, marker);\r\n\r\n  pos = state.skipSpaces(pos);\r\n\r\n  if (pos < max) { return false; }\r\n\r\n  pos = state.bMarks[startLine] + state.tShift[startLine];\r\n\r\n  state.line = next + 1;\r\n  state.tokens.push({\r\n    type: 'heading_open',\r\n    hLevel: marker === 0x3D/* = */ ? 1 : 2,\r\n    lines: [ startLine, state.line ],\r\n    level: state.level\r\n  });\r\n  state.tokens.push({\r\n    type: 'inline',\r\n    content: state.src.slice(pos, state.eMarks[startLine]).trim(),\r\n    level: state.level + 1,\r\n    lines: [ startLine, state.line - 1 ],\r\n    children: []\r\n  });\r\n  state.tokens.push({\r\n    type: 'heading_close',\r\n    hLevel: marker === 0x3D/* = */ ? 1 : 2,\r\n    level: state.level\r\n  });\r\n\r\n  return true;\r\n}\r\n\r\n// List of valid html blocks names, accorting to commonmark spec\r\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\r\n\r\nvar html_blocks = {};\r\n\r\n[\r\n  'article',\r\n  'aside',\r\n  'button',\r\n  'blockquote',\r\n  'body',\r\n  'canvas',\r\n  'caption',\r\n  'col',\r\n  'colgroup',\r\n  'dd',\r\n  'div',\r\n  'dl',\r\n  'dt',\r\n  'embed',\r\n  'fieldset',\r\n  'figcaption',\r\n  'figure',\r\n  'footer',\r\n  'form',\r\n  'h1',\r\n  'h2',\r\n  'h3',\r\n  'h4',\r\n  'h5',\r\n  'h6',\r\n  'header',\r\n  'hgroup',\r\n  'hr',\r\n  'iframe',\r\n  'li',\r\n  'map',\r\n  'object',\r\n  'ol',\r\n  'output',\r\n  'p',\r\n  'pre',\r\n  'progress',\r\n  'script',\r\n  'section',\r\n  'style',\r\n  'table',\r\n  'tbody',\r\n  'td',\r\n  'textarea',\r\n  'tfoot',\r\n  'th',\r\n  'tr',\r\n  'thead',\r\n  'ul',\r\n  'video'\r\n].forEach(function (name) { html_blocks[name] = true; });\r\n\r\n// HTML block\r\n\r\n\r\nvar HTML_TAG_OPEN_RE = /^<([a-zA-Z]{1,15})[\\s\\/>]/;\r\nvar HTML_TAG_CLOSE_RE = /^<\\/([a-zA-Z]{1,15})[\\s>]/;\r\n\r\nfunction isLetter$1(ch) {\r\n  /*eslint no-bitwise:0*/\r\n  var lc = ch | 0x20; // to lower case\r\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\r\n}\r\n\r\nfunction htmlblock(state, startLine, endLine, silent) {\r\n  var ch, match, nextLine,\r\n      pos = state.bMarks[startLine],\r\n      max = state.eMarks[startLine],\r\n      shift = state.tShift[startLine];\r\n\r\n  pos += shift;\r\n\r\n  if (!state.options.html) { return false; }\r\n\r\n  if (shift > 3 || pos + 2 >= max) { return false; }\r\n\r\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\r\n\r\n  ch = state.src.charCodeAt(pos + 1);\r\n\r\n  if (ch === 0x21/* ! */ || ch === 0x3F/* ? */) {\r\n    // Directive start / comment start / processing instruction start\r\n    if (silent) { return true; }\r\n\r\n  } else if (ch === 0x2F/* / */ || isLetter$1(ch)) {\r\n\r\n    // Probably start or end of tag\r\n    if (ch === 0x2F/* \\ */) {\r\n      // closing tag\r\n      match = state.src.slice(pos, max).match(HTML_TAG_CLOSE_RE);\r\n      if (!match) { return false; }\r\n    } else {\r\n      // opening tag\r\n      match = state.src.slice(pos, max).match(HTML_TAG_OPEN_RE);\r\n      if (!match) { return false; }\r\n    }\r\n    // Make sure tag name is valid\r\n    if (html_blocks[match[1].toLowerCase()] !== true) { return false; }\r\n    if (silent) { return true; }\r\n\r\n  } else {\r\n    return false;\r\n  }\r\n\r\n  // If we are here - we detected HTML block.\r\n  // Let's roll down till empty line (block end).\r\n  nextLine = startLine + 1;\r\n  while (nextLine < state.lineMax && !state.isEmpty(nextLine)) {\r\n    nextLine++;\r\n  }\r\n\r\n  state.line = nextLine;\r\n  state.tokens.push({\r\n    type: 'htmlblock',\r\n    level: state.level,\r\n    lines: [ startLine, state.line ],\r\n    content: state.getLines(startLine, nextLine, 0, true)\r\n  });\r\n\r\n  return true;\r\n}\r\n\r\n// GFM table, non-standard\r\n\r\nfunction getLine(state, line) {\r\n  var pos = state.bMarks[line] + state.blkIndent,\r\n      max = state.eMarks[line];\r\n\r\n  return state.src.substr(pos, max - pos);\r\n}\r\n\r\nfunction table(state, startLine, endLine, silent) {\r\n  var ch, lineText, pos, i, nextLine, rows, cell,\r\n      aligns, t, tableLines, tbodyLines;\r\n\r\n  // should have at least three lines\r\n  if (startLine + 2 > endLine) { return false; }\r\n\r\n  nextLine = startLine + 1;\r\n\r\n  if (state.tShift[nextLine] < state.blkIndent) { return false; }\r\n\r\n  // first character of the second line should be '|' or '-'\r\n\r\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\r\n  if (pos >= state.eMarks[nextLine]) { return false; }\r\n\r\n  ch = state.src.charCodeAt(pos);\r\n  if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */) { return false; }\r\n\r\n  lineText = getLine(state, startLine + 1);\r\n  if (!/^[-:| ]+$/.test(lineText)) { return false; }\r\n\r\n  rows = lineText.split('|');\r\n  if (rows <= 2) { return false; }\r\n  aligns = [];\r\n  for (i = 0; i < rows.length; i++) {\r\n    t = rows[i].trim();\r\n    if (!t) {\r\n      // allow empty columns before and after table, but not in between columns;\r\n      // e.g. allow ` |---| `, disallow ` ---||--- `\r\n      if (i === 0 || i === rows.length - 1) {\r\n        continue;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (!/^:?-+:?$/.test(t)) { return false; }\r\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\r\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\r\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\r\n      aligns.push('left');\r\n    } else {\r\n      aligns.push('');\r\n    }\r\n  }\r\n\r\n  lineText = getLine(state, startLine).trim();\r\n  if (lineText.indexOf('|') === -1) { return false; }\r\n  rows = lineText.replace(/^\\||\\|$/g, '').split('|');\r\n  if (aligns.length !== rows.length) { return false; }\r\n  if (silent) { return true; }\r\n\r\n  state.tokens.push({\r\n    type: 'table_open',\r\n    lines: tableLines = [ startLine, 0 ],\r\n    level: state.level++\r\n  });\r\n  state.tokens.push({\r\n    type: 'thead_open',\r\n    lines: [ startLine, startLine + 1 ],\r\n    level: state.level++\r\n  });\r\n\r\n  state.tokens.push({\r\n    type: 'tr_open',\r\n    lines: [ startLine, startLine + 1 ],\r\n    level: state.level++\r\n  });\r\n  for (i = 0; i < rows.length; i++) {\r\n    state.tokens.push({\r\n      type: 'th_open',\r\n      align: aligns[i],\r\n      lines: [ startLine, startLine + 1 ],\r\n      level: state.level++\r\n    });\r\n    state.tokens.push({\r\n      type: 'inline',\r\n      content: rows[i].trim(),\r\n      lines: [ startLine, startLine + 1 ],\r\n      level: state.level,\r\n      children: []\r\n    });\r\n    state.tokens.push({ type: 'th_close', level: --state.level });\r\n  }\r\n  state.tokens.push({ type: 'tr_close', level: --state.level });\r\n  state.tokens.push({ type: 'thead_close', level: --state.level });\r\n\r\n  state.tokens.push({\r\n    type: 'tbody_open',\r\n    lines: tbodyLines = [ startLine + 2, 0 ],\r\n    level: state.level++\r\n  });\r\n\r\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\r\n    if (state.tShift[nextLine] < state.blkIndent) { break; }\r\n\r\n    lineText = getLine(state, nextLine).trim();\r\n    if (lineText.indexOf('|') === -1) { break; }\r\n    rows = lineText.replace(/^\\||\\|$/g, '').split('|');\r\n\r\n    state.tokens.push({ type: 'tr_open', level: state.level++ });\r\n    for (i = 0; i < rows.length; i++) {\r\n      state.tokens.push({ type: 'td_open', align: aligns[i], level: state.level++ });\r\n      // 0x7c === '|'\r\n      cell = rows[i].substring(\r\n          rows[i].charCodeAt(0) === 0x7c ? 1 : 0,\r\n          rows[i].charCodeAt(rows[i].length - 1) === 0x7c ? rows[i].length - 1 : rows[i].length\r\n      ).trim();\r\n      state.tokens.push({\r\n        type: 'inline',\r\n        content: cell,\r\n        level: state.level,\r\n        children: []\r\n      });\r\n      state.tokens.push({ type: 'td_close', level: --state.level });\r\n    }\r\n    state.tokens.push({ type: 'tr_close', level: --state.level });\r\n  }\r\n  state.tokens.push({ type: 'tbody_close', level: --state.level });\r\n  state.tokens.push({ type: 'table_close', level: --state.level });\r\n\r\n  tableLines[1] = tbodyLines[1] = nextLine;\r\n  state.line = nextLine;\r\n  return true;\r\n}\r\n\r\n// Definition lists\r\n\r\n// Search `[:~][\\n ]`, returns next pos after marker on success\r\n// or -1 on fail.\r\nfunction skipMarker(state, line) {\r\n  var pos, marker,\r\n      start = state.bMarks[line] + state.tShift[line],\r\n      max = state.eMarks[line];\r\n\r\n  if (start >= max) { return -1; }\r\n\r\n  // Check bullet\r\n  marker = state.src.charCodeAt(start++);\r\n  if (marker !== 0x7E/* ~ */ && marker !== 0x3A/* : */) { return -1; }\r\n\r\n  pos = state.skipSpaces(start);\r\n\r\n  // require space after \":\"\r\n  if (start === pos) { return -1; }\r\n\r\n  // no empty definitions, e.g. \"  : \"\r\n  if (pos >= max) { return -1; }\r\n\r\n  return pos;\r\n}\r\n\r\nfunction markTightParagraphs$1(state, idx) {\r\n  var i, l,\r\n      level = state.level + 2;\r\n\r\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\r\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\r\n      state.tokens[i + 2].tight = true;\r\n      state.tokens[i].tight = true;\r\n      i += 2;\r\n    }\r\n  }\r\n}\r\n\r\nfunction deflist(state, startLine, endLine, silent) {\r\n  var contentStart,\r\n      ddLine,\r\n      dtLine,\r\n      itemLines,\r\n      listLines,\r\n      listTokIdx,\r\n      nextLine,\r\n      oldIndent,\r\n      oldDDIndent,\r\n      oldParentType,\r\n      oldTShift,\r\n      oldTight,\r\n      prevEmptyEnd,\r\n      tight;\r\n\r\n  if (silent) {\r\n    // quirk: validation mode validates a dd block only, not a whole deflist\r\n    if (state.ddIndent < 0) { return false; }\r\n    return skipMarker(state, startLine) >= 0;\r\n  }\r\n\r\n  nextLine = startLine + 1;\r\n  if (state.isEmpty(nextLine)) {\r\n    if (++nextLine > endLine) { return false; }\r\n  }\r\n\r\n  if (state.tShift[nextLine] < state.blkIndent) { return false; }\r\n  contentStart = skipMarker(state, nextLine);\r\n  if (contentStart < 0) { return false; }\r\n\r\n  if (state.level >= state.options.maxNesting) { return false; }\r\n\r\n  // Start list\r\n  listTokIdx = state.tokens.length;\r\n\r\n  state.tokens.push({\r\n    type: 'dl_open',\r\n    lines: listLines = [ startLine, 0 ],\r\n    level: state.level++\r\n  });\r\n\r\n  //\r\n  // Iterate list items\r\n  //\r\n\r\n  dtLine = startLine;\r\n  ddLine = nextLine;\r\n\r\n  // One definition list can contain multiple DTs,\r\n  // and one DT can be followed by multiple DDs.\r\n  //\r\n  // Thus, there is two loops here, and label is\r\n  // needed to break out of the second one\r\n  //\r\n  /*eslint no-labels:0,block-scoped-var:0*/\r\n  OUTER:\r\n  for (;;) {\r\n    tight = true;\r\n    prevEmptyEnd = false;\r\n\r\n    state.tokens.push({\r\n      type: 'dt_open',\r\n      lines: [ dtLine, dtLine ],\r\n      level: state.level++\r\n    });\r\n    state.tokens.push({\r\n      type: 'inline',\r\n      content: state.getLines(dtLine, dtLine + 1, state.blkIndent, false).trim(),\r\n      level: state.level + 1,\r\n      lines: [ dtLine, dtLine ],\r\n      children: []\r\n    });\r\n    state.tokens.push({\r\n      type: 'dt_close',\r\n      level: --state.level\r\n    });\r\n\r\n    for (;;) {\r\n      state.tokens.push({\r\n        type: 'dd_open',\r\n        lines: itemLines = [ nextLine, 0 ],\r\n        level: state.level++\r\n      });\r\n\r\n      oldTight = state.tight;\r\n      oldDDIndent = state.ddIndent;\r\n      oldIndent = state.blkIndent;\r\n      oldTShift = state.tShift[ddLine];\r\n      oldParentType = state.parentType;\r\n      state.blkIndent = state.ddIndent = state.tShift[ddLine] + 2;\r\n      state.tShift[ddLine] = contentStart - state.bMarks[ddLine];\r\n      state.tight = true;\r\n      state.parentType = 'deflist';\r\n\r\n      state.parser.tokenize(state, ddLine, endLine, true);\r\n\r\n      // If any of list item is tight, mark list as tight\r\n      if (!state.tight || prevEmptyEnd) {\r\n        tight = false;\r\n      }\r\n      // Item become loose if finish with empty line,\r\n      // but we should filter last element, because it means list finish\r\n      prevEmptyEnd = (state.line - ddLine) > 1 && state.isEmpty(state.line - 1);\r\n\r\n      state.tShift[ddLine] = oldTShift;\r\n      state.tight = oldTight;\r\n      state.parentType = oldParentType;\r\n      state.blkIndent = oldIndent;\r\n      state.ddIndent = oldDDIndent;\r\n\r\n      state.tokens.push({\r\n        type: 'dd_close',\r\n        level: --state.level\r\n      });\r\n\r\n      itemLines[1] = nextLine = state.line;\r\n\r\n      if (nextLine >= endLine) { break OUTER; }\r\n\r\n      if (state.tShift[nextLine] < state.blkIndent) { break OUTER; }\r\n      contentStart = skipMarker(state, nextLine);\r\n      if (contentStart < 0) { break; }\r\n\r\n      ddLine = nextLine;\r\n\r\n      // go to the next loop iteration:\r\n      // insert DD tag and repeat checking\r\n    }\r\n\r\n    if (nextLine >= endLine) { break; }\r\n    dtLine = nextLine;\r\n\r\n    if (state.isEmpty(dtLine)) { break; }\r\n    if (state.tShift[dtLine] < state.blkIndent) { break; }\r\n\r\n    ddLine = dtLine + 1;\r\n    if (ddLine >= endLine) { break; }\r\n    if (state.isEmpty(ddLine)) { ddLine++; }\r\n    if (ddLine >= endLine) { break; }\r\n\r\n    if (state.tShift[ddLine] < state.blkIndent) { break; }\r\n    contentStart = skipMarker(state, ddLine);\r\n    if (contentStart < 0) { break; }\r\n\r\n    // go to the next loop iteration:\r\n    // insert DT and DD tags and repeat checking\r\n  }\r\n\r\n  // Finilize list\r\n  state.tokens.push({\r\n    type: 'dl_close',\r\n    level: --state.level\r\n  });\r\n  listLines[1] = nextLine;\r\n\r\n  state.line = nextLine;\r\n\r\n  // mark paragraphs tight if needed\r\n  if (tight) {\r\n    markTightParagraphs$1(state, listTokIdx);\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n// Paragraph\r\n\r\nfunction paragraph(state, startLine/*, endLine*/) {\r\n  var endLine, content, terminate, i, l,\r\n      nextLine = startLine + 1,\r\n      terminatorRules;\r\n\r\n  endLine = state.lineMax;\r\n\r\n  // jump line-by-line until empty one or EOF\r\n  if (nextLine < endLine && !state.isEmpty(nextLine)) {\r\n    terminatorRules = state.parser.ruler.getRules('paragraph');\r\n\r\n    for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\r\n      // this would be a code block normally, but after paragraph\r\n      // it's considered a lazy continuation regardless of what's there\r\n      if (state.tShift[nextLine] - state.blkIndent > 3) { continue; }\r\n\r\n      // Some tags can terminate paragraph without empty line.\r\n      terminate = false;\r\n      for (i = 0, l = terminatorRules.length; i < l; i++) {\r\n        if (terminatorRules[i](state, nextLine, endLine, true)) {\r\n          terminate = true;\r\n          break;\r\n        }\r\n      }\r\n      if (terminate) { break; }\r\n    }\r\n  }\r\n\r\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\r\n\r\n  state.line = nextLine;\r\n  if (content.length) {\r\n    state.tokens.push({\r\n      type: 'paragraph_open',\r\n      tight: false,\r\n      lines: [ startLine, state.line ],\r\n      level: state.level\r\n    });\r\n    state.tokens.push({\r\n      type: 'inline',\r\n      content: content,\r\n      level: state.level + 1,\r\n      lines: [ startLine, state.line ],\r\n      children: []\r\n    });\r\n    state.tokens.push({\r\n      type: 'paragraph_close',\r\n      tight: false,\r\n      level: state.level\r\n    });\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * Parser rules\r\n */\r\n\r\nvar _rules$1 = [\r\n  [ 'code',       code ],\r\n  [ 'fences',     fences,     [ 'paragraph', 'blockquote', 'list' ] ],\r\n  [ 'blockquote', blockquote, [ 'paragraph', 'blockquote', 'list' ] ],\r\n  [ 'hr',         hr,         [ 'paragraph', 'blockquote', 'list' ] ],\r\n  [ 'list',       list,       [ 'paragraph', 'blockquote' ] ],\r\n  [ 'footnote',   footnote,   [ 'paragraph' ] ],\r\n  [ 'heading',    heading,    [ 'paragraph', 'blockquote' ] ],\r\n  [ 'lheading',   lheading ],\r\n  [ 'htmlblock',  htmlblock,  [ 'paragraph', 'blockquote' ] ],\r\n  [ 'table',      table,      [ 'paragraph' ] ],\r\n  [ 'deflist',    deflist,    [ 'paragraph' ] ],\r\n  [ 'paragraph',  paragraph ]\r\n];\r\n\r\n/**\r\n * Block Parser class\r\n *\r\n * @api private\r\n */\r\n\r\nfunction ParserBlock() {\r\n  this.ruler = new Ruler();\r\n  for (var i = 0; i < _rules$1.length; i++) {\r\n    this.ruler.push(_rules$1[i][0], _rules$1[i][1], {\r\n      alt: (_rules$1[i][2] || []).slice()\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Generate tokens for the given input range.\r\n *\r\n * @param  {Object} `state` Has properties like `src`, `parser`, `options` etc\r\n * @param  {Number} `startLine`\r\n * @param  {Number} `endLine`\r\n * @api private\r\n */\r\n\r\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\r\n  var rules = this.ruler.getRules('');\r\n  var len = rules.length;\r\n  var line = startLine;\r\n  var hasEmptyLines = false;\r\n  var ok, i;\r\n\r\n  while (line < endLine) {\r\n    state.line = line = state.skipEmptyLines(line);\r\n    if (line >= endLine) {\r\n      break;\r\n    }\r\n\r\n    // Termination condition for nested calls.\r\n    // Nested calls currently used for blockquotes & lists\r\n    if (state.tShift[line] < state.blkIndent) {\r\n      break;\r\n    }\r\n\r\n    // Try all possible rules.\r\n    // On success, rule should:\r\n    //\r\n    // - update `state.line`\r\n    // - update `state.tokens`\r\n    // - return true\r\n\r\n    for (i = 0; i < len; i++) {\r\n      ok = rules[i](state, line, endLine, false);\r\n      if (ok) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    // set state.tight iff we had an empty line before current tag\r\n    // i.e. latest empty line should not count\r\n    state.tight = !hasEmptyLines;\r\n\r\n    // paragraph might \"eat\" one newline after it in nested lists\r\n    if (state.isEmpty(state.line - 1)) {\r\n      hasEmptyLines = true;\r\n    }\r\n\r\n    line = state.line;\r\n\r\n    if (line < endLine && state.isEmpty(line)) {\r\n      hasEmptyLines = true;\r\n      line++;\r\n\r\n      // two empty lines should stop the parser in list mode\r\n      if (line < endLine && state.parentType === 'list' && state.isEmpty(line)) { break; }\r\n      state.line = line;\r\n    }\r\n  }\r\n};\r\n\r\nvar TABS_SCAN_RE = /[\\n\\t]/g;\r\nvar NEWLINES_RE  = /\\r[\\n\\u0085]|[\\u2424\\u2028\\u0085]/g;\r\nvar SPACES_RE    = /\\u00a0/g;\r\n\r\n/**\r\n * Tokenize the given `str`.\r\n *\r\n * @param  {String} `str` Source string\r\n * @param  {Object} `options`\r\n * @param  {Object} `env`\r\n * @param  {Array} `outTokens`\r\n * @api private\r\n */\r\n\r\nParserBlock.prototype.parse = function (str, options, env, outTokens) {\r\n  var state, lineStart = 0, lastTabPos = 0;\r\n  if (!str) { return []; }\r\n\r\n  // Normalize spaces\r\n  str = str.replace(SPACES_RE, ' ');\r\n\r\n  // Normalize newlines\r\n  str = str.replace(NEWLINES_RE, '\\n');\r\n\r\n  // Replace tabs with proper number of spaces (1..4)\r\n  if (str.indexOf('\\t') >= 0) {\r\n    str = str.replace(TABS_SCAN_RE, function (match, offset) {\r\n      var result;\r\n      if (str.charCodeAt(offset) === 0x0A) {\r\n        lineStart = offset + 1;\r\n        lastTabPos = 0;\r\n        return match;\r\n      }\r\n      result = '    '.slice((offset - lineStart - lastTabPos) % 4);\r\n      lastTabPos = offset - lineStart + 1;\r\n      return result;\r\n    });\r\n  }\r\n\r\n  state = new StateBlock(str, this, options, env, outTokens);\r\n  this.tokenize(state, state.line, state.lineMax);\r\n};\r\n\r\n// Skip text characters for text token, place those to pending buffer\r\n// and increment current pos\r\n\r\n// Rule to skip pure text\r\n// '{}$%@~+=:' reserved for extentions\r\n\r\nfunction isTerminatorChar(ch) {\r\n  switch (ch) {\r\n    case 0x0A/* \\n */:\r\n    case 0x5C/* \\ */:\r\n    case 0x60/* ` */:\r\n    case 0x2A/* * */:\r\n    case 0x5F/* _ */:\r\n    case 0x5E/* ^ */:\r\n    case 0x5B/* [ */:\r\n    case 0x5D/* ] */:\r\n    case 0x21/* ! */:\r\n    case 0x26/* & */:\r\n    case 0x3C/* < */:\r\n    case 0x3E/* > */:\r\n    case 0x7B/* { */:\r\n    case 0x7D/* } */:\r\n    case 0x24/* $ */:\r\n    case 0x25/* % */:\r\n    case 0x40/* @ */:\r\n    case 0x7E/* ~ */:\r\n    case 0x2B/* + */:\r\n    case 0x3D/* = */:\r\n    case 0x3A/* : */:\r\n      return true;\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n\r\nfunction text(state, silent) {\r\n  var pos = state.pos;\r\n\r\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\r\n    pos++;\r\n  }\r\n\r\n  if (pos === state.pos) { return false; }\r\n\r\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\r\n\r\n  state.pos = pos;\r\n\r\n  return true;\r\n}\r\n\r\n// Proceess '\\n'\r\n\r\nfunction newline(state, silent) {\r\n  var pmax, max, pos = state.pos;\r\n\r\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\r\n\r\n  pmax = state.pending.length - 1;\r\n  max = state.posMax;\r\n\r\n  // '  \\n' -> hardbreak\r\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\r\n  // Pending string is stored in concat mode, indexed lookups will cause\r\n  // convertion to flat mode.\r\n  if (!silent) {\r\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\r\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\r\n        // Strip out all trailing spaces on this line.\r\n        for (var i = pmax - 2; i >= 0; i--) {\r\n          if (state.pending.charCodeAt(i) !== 0x20) {\r\n            state.pending = state.pending.substring(0, i + 1);\r\n            break;\r\n          }\r\n        }\r\n        state.push({\r\n          type: 'hardbreak',\r\n          level: state.level\r\n        });\r\n      } else {\r\n        state.pending = state.pending.slice(0, -1);\r\n        state.push({\r\n          type: 'softbreak',\r\n          level: state.level\r\n        });\r\n      }\r\n\r\n    } else {\r\n      state.push({\r\n        type: 'softbreak',\r\n        level: state.level\r\n      });\r\n    }\r\n  }\r\n\r\n  pos++;\r\n\r\n  // skip heading spaces for next line\r\n  while (pos < max && state.src.charCodeAt(pos) === 0x20) { pos++; }\r\n\r\n  state.pos = pos;\r\n  return true;\r\n}\r\n\r\n// Proceess escaped chars and hardbreaks\r\n\r\nvar ESCAPED = [];\r\n\r\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\r\n\r\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\r\n  .split('').forEach(function(ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\r\n\r\n\r\nfunction escape(state, silent) {\r\n  var ch, pos = state.pos, max = state.posMax;\r\n\r\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\r\n\r\n  pos++;\r\n\r\n  if (pos < max) {\r\n    ch = state.src.charCodeAt(pos);\r\n\r\n    if (ch < 256 && ESCAPED[ch] !== 0) {\r\n      if (!silent) { state.pending += state.src[pos]; }\r\n      state.pos += 2;\r\n      return true;\r\n    }\r\n\r\n    if (ch === 0x0A) {\r\n      if (!silent) {\r\n        state.push({\r\n          type: 'hardbreak',\r\n          level: state.level\r\n        });\r\n      }\r\n\r\n      pos++;\r\n      // skip leading whitespaces from next line\r\n      while (pos < max && state.src.charCodeAt(pos) === 0x20) { pos++; }\r\n\r\n      state.pos = pos;\r\n      return true;\r\n    }\r\n  }\r\n\r\n  if (!silent) { state.pending += '\\\\'; }\r\n  state.pos++;\r\n  return true;\r\n}\r\n\r\n// Parse backticks\r\n\r\nfunction backticks(state, silent) {\r\n  var start, max, marker, matchStart, matchEnd,\r\n      pos = state.pos,\r\n      ch = state.src.charCodeAt(pos);\r\n\r\n  if (ch !== 0x60/* ` */) { return false; }\r\n\r\n  start = pos;\r\n  pos++;\r\n  max = state.posMax;\r\n\r\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\r\n\r\n  marker = state.src.slice(start, pos);\r\n\r\n  matchStart = matchEnd = pos;\r\n\r\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\r\n    matchEnd = matchStart + 1;\r\n\r\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\r\n\r\n    if (matchEnd - matchStart === marker.length) {\r\n      if (!silent) {\r\n        state.push({\r\n          type: 'code',\r\n          content: state.src.slice(pos, matchStart)\r\n                              .replace(/[ \\n]+/g, ' ')\r\n                              .trim(),\r\n          block: false,\r\n          level: state.level\r\n        });\r\n      }\r\n      state.pos = matchEnd;\r\n      return true;\r\n    }\r\n  }\r\n\r\n  if (!silent) { state.pending += marker; }\r\n  state.pos += marker.length;\r\n  return true;\r\n}\r\n\r\n// Process ~~deleted text~~\r\n\r\nfunction del(state, silent) {\r\n  var found,\r\n      pos,\r\n      stack,\r\n      max = state.posMax,\r\n      start = state.pos,\r\n      lastChar,\r\n      nextChar;\r\n\r\n  if (state.src.charCodeAt(start) !== 0x7E/* ~ */) { return false; }\r\n  if (silent) { return false; } // don't run any pairs in validation mode\r\n  if (start + 4 >= max) { return false; }\r\n  if (state.src.charCodeAt(start + 1) !== 0x7E/* ~ */) { return false; }\r\n  if (state.level >= state.options.maxNesting) { return false; }\r\n\r\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\r\n  nextChar = state.src.charCodeAt(start + 2);\r\n\r\n  if (lastChar === 0x7E/* ~ */) { return false; }\r\n  if (nextChar === 0x7E/* ~ */) { return false; }\r\n  if (nextChar === 0x20 || nextChar === 0x0A) { return false; }\r\n\r\n  pos = start + 2;\r\n  while (pos < max && state.src.charCodeAt(pos) === 0x7E/* ~ */) { pos++; }\r\n  if (pos > start + 3) {\r\n    // sequence of 4+ markers taking as literal, same as in a emphasis\r\n    state.pos += pos - start;\r\n    if (!silent) { state.pending += state.src.slice(start, pos); }\r\n    return true;\r\n  }\r\n\r\n  state.pos = start + 2;\r\n  stack = 1;\r\n\r\n  while (state.pos + 1 < max) {\r\n    if (state.src.charCodeAt(state.pos) === 0x7E/* ~ */) {\r\n      if (state.src.charCodeAt(state.pos + 1) === 0x7E/* ~ */) {\r\n        lastChar = state.src.charCodeAt(state.pos - 1);\r\n        nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\r\n        if (nextChar !== 0x7E/* ~ */ && lastChar !== 0x7E/* ~ */) {\r\n          if (lastChar !== 0x20 && lastChar !== 0x0A) {\r\n            // closing '~~'\r\n            stack--;\r\n          } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\r\n            // opening '~~'\r\n            stack++;\r\n          } // else {\r\n            //  // standalone ' ~~ ' indented with spaces\r\n            // }\r\n          if (stack <= 0) {\r\n            found = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    state.parser.skipToken(state);\r\n  }\r\n\r\n  if (!found) {\r\n    // parser failed to find ending tag, so it's not valid emphasis\r\n    state.pos = start;\r\n    return false;\r\n  }\r\n\r\n  // found!\r\n  state.posMax = state.pos;\r\n  state.pos = start + 2;\r\n\r\n  if (!silent) {\r\n    state.push({ type: 'del_open', level: state.level++ });\r\n    state.parser.tokenize(state);\r\n    state.push({ type: 'del_close', level: --state.level });\r\n  }\r\n\r\n  state.pos = state.posMax + 2;\r\n  state.posMax = max;\r\n  return true;\r\n}\r\n\r\n// Process ++inserted text++\r\n\r\nfunction ins(state, silent) {\r\n  var found,\r\n      pos,\r\n      stack,\r\n      max = state.posMax,\r\n      start = state.pos,\r\n      lastChar,\r\n      nextChar;\r\n\r\n  if (state.src.charCodeAt(start) !== 0x2B/* + */) { return false; }\r\n  if (silent) { return false; } // don't run any pairs in validation mode\r\n  if (start + 4 >= max) { return false; }\r\n  if (state.src.charCodeAt(start + 1) !== 0x2B/* + */) { return false; }\r\n  if (state.level >= state.options.maxNesting) { return false; }\r\n\r\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\r\n  nextChar = state.src.charCodeAt(start + 2);\r\n\r\n  if (lastChar === 0x2B/* + */) { return false; }\r\n  if (nextChar === 0x2B/* + */) { return false; }\r\n  if (nextChar === 0x20 || nextChar === 0x0A) { return false; }\r\n\r\n  pos = start + 2;\r\n  while (pos < max && state.src.charCodeAt(pos) === 0x2B/* + */) { pos++; }\r\n  if (pos !== start + 2) {\r\n    // sequence of 3+ markers taking as literal, same as in a emphasis\r\n    state.pos += pos - start;\r\n    if (!silent) { state.pending += state.src.slice(start, pos); }\r\n    return true;\r\n  }\r\n\r\n  state.pos = start + 2;\r\n  stack = 1;\r\n\r\n  while (state.pos + 1 < max) {\r\n    if (state.src.charCodeAt(state.pos) === 0x2B/* + */) {\r\n      if (state.src.charCodeAt(state.pos + 1) === 0x2B/* + */) {\r\n        lastChar = state.src.charCodeAt(state.pos - 1);\r\n        nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\r\n        if (nextChar !== 0x2B/* + */ && lastChar !== 0x2B/* + */) {\r\n          if (lastChar !== 0x20 && lastChar !== 0x0A) {\r\n            // closing '++'\r\n            stack--;\r\n          } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\r\n            // opening '++'\r\n            stack++;\r\n          } // else {\r\n            //  // standalone ' ++ ' indented with spaces\r\n            // }\r\n          if (stack <= 0) {\r\n            found = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    state.parser.skipToken(state);\r\n  }\r\n\r\n  if (!found) {\r\n    // parser failed to find ending tag, so it's not valid emphasis\r\n    state.pos = start;\r\n    return false;\r\n  }\r\n\r\n  // found!\r\n  state.posMax = state.pos;\r\n  state.pos = start + 2;\r\n\r\n  if (!silent) {\r\n    state.push({ type: 'ins_open', level: state.level++ });\r\n    state.parser.tokenize(state);\r\n    state.push({ type: 'ins_close', level: --state.level });\r\n  }\r\n\r\n  state.pos = state.posMax + 2;\r\n  state.posMax = max;\r\n  return true;\r\n}\r\n\r\n// Process ==highlighted text==\r\n\r\nfunction mark(state, silent) {\r\n  var found,\r\n      pos,\r\n      stack,\r\n      max = state.posMax,\r\n      start = state.pos,\r\n      lastChar,\r\n      nextChar;\r\n\r\n  if (state.src.charCodeAt(start) !== 0x3D/* = */) { return false; }\r\n  if (silent) { return false; } // don't run any pairs in validation mode\r\n  if (start + 4 >= max) { return false; }\r\n  if (state.src.charCodeAt(start + 1) !== 0x3D/* = */) { return false; }\r\n  if (state.level >= state.options.maxNesting) { return false; }\r\n\r\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\r\n  nextChar = state.src.charCodeAt(start + 2);\r\n\r\n  if (lastChar === 0x3D/* = */) { return false; }\r\n  if (nextChar === 0x3D/* = */) { return false; }\r\n  if (nextChar === 0x20 || nextChar === 0x0A) { return false; }\r\n\r\n  pos = start + 2;\r\n  while (pos < max && state.src.charCodeAt(pos) === 0x3D/* = */) { pos++; }\r\n  if (pos !== start + 2) {\r\n    // sequence of 3+ markers taking as literal, same as in a emphasis\r\n    state.pos += pos - start;\r\n    if (!silent) { state.pending += state.src.slice(start, pos); }\r\n    return true;\r\n  }\r\n\r\n  state.pos = start + 2;\r\n  stack = 1;\r\n\r\n  while (state.pos + 1 < max) {\r\n    if (state.src.charCodeAt(state.pos) === 0x3D/* = */) {\r\n      if (state.src.charCodeAt(state.pos + 1) === 0x3D/* = */) {\r\n        lastChar = state.src.charCodeAt(state.pos - 1);\r\n        nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\r\n        if (nextChar !== 0x3D/* = */ && lastChar !== 0x3D/* = */) {\r\n          if (lastChar !== 0x20 && lastChar !== 0x0A) {\r\n            // closing '=='\r\n            stack--;\r\n          } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\r\n            // opening '=='\r\n            stack++;\r\n          } // else {\r\n            //  // standalone ' == ' indented with spaces\r\n            // }\r\n          if (stack <= 0) {\r\n            found = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    state.parser.skipToken(state);\r\n  }\r\n\r\n  if (!found) {\r\n    // parser failed to find ending tag, so it's not valid emphasis\r\n    state.pos = start;\r\n    return false;\r\n  }\r\n\r\n  // found!\r\n  state.posMax = state.pos;\r\n  state.pos = start + 2;\r\n\r\n  if (!silent) {\r\n    state.push({ type: 'mark_open', level: state.level++ });\r\n    state.parser.tokenize(state);\r\n    state.push({ type: 'mark_close', level: --state.level });\r\n  }\r\n\r\n  state.pos = state.posMax + 2;\r\n  state.posMax = max;\r\n  return true;\r\n}\r\n\r\n// Process *this* and _that_\r\n\r\nfunction isAlphaNum(code) {\r\n  return (code >= 0x30 /* 0 */ && code <= 0x39 /* 9 */) ||\r\n         (code >= 0x41 /* A */ && code <= 0x5A /* Z */) ||\r\n         (code >= 0x61 /* a */ && code <= 0x7A /* z */);\r\n}\r\n\r\n// parse sequence of emphasis markers,\r\n// \"start\" should point at a valid marker\r\nfunction scanDelims(state, start) {\r\n  var pos = start, lastChar, nextChar, count,\r\n      can_open = true,\r\n      can_close = true,\r\n      max = state.posMax,\r\n      marker = state.src.charCodeAt(start);\r\n\r\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\r\n\r\n  while (pos < max && state.src.charCodeAt(pos) === marker) { pos++; }\r\n  if (pos >= max) { can_open = false; }\r\n  count = pos - start;\r\n\r\n  if (count >= 4) {\r\n    // sequence of four or more unescaped markers can't start/end an emphasis\r\n    can_open = can_close = false;\r\n  } else {\r\n    nextChar = pos < max ? state.src.charCodeAt(pos) : -1;\r\n\r\n    // check whitespace conditions\r\n    if (nextChar === 0x20 || nextChar === 0x0A) { can_open = false; }\r\n    if (lastChar === 0x20 || lastChar === 0x0A) { can_close = false; }\r\n\r\n    if (marker === 0x5F /* _ */) {\r\n      // check if we aren't inside the word\r\n      if (isAlphaNum(lastChar)) { can_open = false; }\r\n      if (isAlphaNum(nextChar)) { can_close = false; }\r\n    }\r\n  }\r\n\r\n  return {\r\n    can_open: can_open,\r\n    can_close: can_close,\r\n    delims: count\r\n  };\r\n}\r\n\r\nfunction emphasis(state, silent) {\r\n  var startCount,\r\n      count,\r\n      found,\r\n      oldCount,\r\n      newCount,\r\n      stack,\r\n      res,\r\n      max = state.posMax,\r\n      start = state.pos,\r\n      marker = state.src.charCodeAt(start);\r\n\r\n  if (marker !== 0x5F/* _ */ && marker !== 0x2A /* * */) { return false; }\r\n  if (silent) { return false; } // don't run any pairs in validation mode\r\n\r\n  res = scanDelims(state, start);\r\n  startCount = res.delims;\r\n  if (!res.can_open) {\r\n    state.pos += startCount;\r\n    if (!silent) { state.pending += state.src.slice(start, state.pos); }\r\n    return true;\r\n  }\r\n\r\n  if (state.level >= state.options.maxNesting) { return false; }\r\n\r\n  state.pos = start + startCount;\r\n  stack = [ startCount ];\r\n\r\n  while (state.pos < max) {\r\n    if (state.src.charCodeAt(state.pos) === marker) {\r\n      res = scanDelims(state, state.pos);\r\n      count = res.delims;\r\n      if (res.can_close) {\r\n        oldCount = stack.pop();\r\n        newCount = count;\r\n\r\n        while (oldCount !== newCount) {\r\n          if (newCount < oldCount) {\r\n            stack.push(oldCount - newCount);\r\n            break;\r\n          }\r\n\r\n          // assert(newCount > oldCount)\r\n          newCount -= oldCount;\r\n\r\n          if (stack.length === 0) { break; }\r\n          state.pos += oldCount;\r\n          oldCount = stack.pop();\r\n        }\r\n\r\n        if (stack.length === 0) {\r\n          startCount = oldCount;\r\n          found = true;\r\n          break;\r\n        }\r\n        state.pos += count;\r\n        continue;\r\n      }\r\n\r\n      if (res.can_open) { stack.push(count); }\r\n      state.pos += count;\r\n      continue;\r\n    }\r\n\r\n    state.parser.skipToken(state);\r\n  }\r\n\r\n  if (!found) {\r\n    // parser failed to find ending tag, so it's not valid emphasis\r\n    state.pos = start;\r\n    return false;\r\n  }\r\n\r\n  // found!\r\n  state.posMax = state.pos;\r\n  state.pos = start + startCount;\r\n\r\n  if (!silent) {\r\n    if (startCount === 2 || startCount === 3) {\r\n      state.push({ type: 'strong_open', level: state.level++ });\r\n    }\r\n    if (startCount === 1 || startCount === 3) {\r\n      state.push({ type: 'em_open', level: state.level++ });\r\n    }\r\n\r\n    state.parser.tokenize(state);\r\n\r\n    if (startCount === 1 || startCount === 3) {\r\n      state.push({ type: 'em_close', level: --state.level });\r\n    }\r\n    if (startCount === 2 || startCount === 3) {\r\n      state.push({ type: 'strong_close', level: --state.level });\r\n    }\r\n  }\r\n\r\n  state.pos = state.posMax + startCount;\r\n  state.posMax = max;\r\n  return true;\r\n}\r\n\r\n// Process ~subscript~\r\n\r\n// same as UNESCAPE_MD_RE plus a space\r\nvar UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\r\n\r\nfunction sub(state, silent) {\r\n  var found,\r\n      content,\r\n      max = state.posMax,\r\n      start = state.pos;\r\n\r\n  if (state.src.charCodeAt(start) !== 0x7E/* ~ */) { return false; }\r\n  if (silent) { return false; } // don't run any pairs in validation mode\r\n  if (start + 2 >= max) { return false; }\r\n  if (state.level >= state.options.maxNesting) { return false; }\r\n\r\n  state.pos = start + 1;\r\n\r\n  while (state.pos < max) {\r\n    if (state.src.charCodeAt(state.pos) === 0x7E/* ~ */) {\r\n      found = true;\r\n      break;\r\n    }\r\n\r\n    state.parser.skipToken(state);\r\n  }\r\n\r\n  if (!found || start + 1 === state.pos) {\r\n    state.pos = start;\r\n    return false;\r\n  }\r\n\r\n  content = state.src.slice(start + 1, state.pos);\r\n\r\n  // don't allow unescaped spaces/newlines inside\r\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\r\n    state.pos = start;\r\n    return false;\r\n  }\r\n\r\n  // found!\r\n  state.posMax = state.pos;\r\n  state.pos = start + 1;\r\n\r\n  if (!silent) {\r\n    state.push({\r\n      type: 'sub',\r\n      level: state.level,\r\n      content: content.replace(UNESCAPE_RE, '$1')\r\n    });\r\n  }\r\n\r\n  state.pos = state.posMax + 1;\r\n  state.posMax = max;\r\n  return true;\r\n}\r\n\r\n// Process ^superscript^\r\n\r\n// same as UNESCAPE_MD_RE plus a space\r\nvar UNESCAPE_RE$1 = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\r\n\r\nfunction sup(state, silent) {\r\n  var found,\r\n      content,\r\n      max = state.posMax,\r\n      start = state.pos;\r\n\r\n  if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\r\n  if (silent) { return false; } // don't run any pairs in validation mode\r\n  if (start + 2 >= max) { return false; }\r\n  if (state.level >= state.options.maxNesting) { return false; }\r\n\r\n  state.pos = start + 1;\r\n\r\n  while (state.pos < max) {\r\n    if (state.src.charCodeAt(state.pos) === 0x5E/* ^ */) {\r\n      found = true;\r\n      break;\r\n    }\r\n\r\n    state.parser.skipToken(state);\r\n  }\r\n\r\n  if (!found || start + 1 === state.pos) {\r\n    state.pos = start;\r\n    return false;\r\n  }\r\n\r\n  content = state.src.slice(start + 1, state.pos);\r\n\r\n  // don't allow unescaped spaces/newlines inside\r\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\r\n    state.pos = start;\r\n    return false;\r\n  }\r\n\r\n  // found!\r\n  state.posMax = state.pos;\r\n  state.pos = start + 1;\r\n\r\n  if (!silent) {\r\n    state.push({\r\n      type: 'sup',\r\n      level: state.level,\r\n      content: content.replace(UNESCAPE_RE$1, '$1')\r\n    });\r\n  }\r\n\r\n  state.pos = state.posMax + 1;\r\n  state.posMax = max;\r\n  return true;\r\n}\r\n\r\n// Process [links](<to> \"stuff\")\r\n\r\n\r\nfunction links(state, silent) {\r\n  var labelStart,\r\n      labelEnd,\r\n      label,\r\n      href,\r\n      title,\r\n      pos,\r\n      ref,\r\n      code,\r\n      isImage = false,\r\n      oldPos = state.pos,\r\n      max = state.posMax,\r\n      start = state.pos,\r\n      marker = state.src.charCodeAt(start);\r\n\r\n  if (marker === 0x21/* ! */) {\r\n    isImage = true;\r\n    marker = state.src.charCodeAt(++start);\r\n  }\r\n\r\n  if (marker !== 0x5B/* [ */) { return false; }\r\n  if (state.level >= state.options.maxNesting) { return false; }\r\n\r\n  labelStart = start + 1;\r\n  labelEnd = parseLinkLabel(state, start);\r\n\r\n  // parser failed to find ']', so it's not a valid link\r\n  if (labelEnd < 0) { return false; }\r\n\r\n  pos = labelEnd + 1;\r\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\r\n    //\r\n    // Inline link\r\n    //\r\n\r\n    // [link](  <href>  \"title\"  )\r\n    //        ^^ skipping these spaces\r\n    pos++;\r\n    for (; pos < max; pos++) {\r\n      code = state.src.charCodeAt(pos);\r\n      if (code !== 0x20 && code !== 0x0A) { break; }\r\n    }\r\n    if (pos >= max) { return false; }\r\n\r\n    // [link](  <href>  \"title\"  )\r\n    //          ^^^^^^ parsing link destination\r\n    start = pos;\r\n    if (parseLinkDestination(state, pos)) {\r\n      href = state.linkContent;\r\n      pos = state.pos;\r\n    } else {\r\n      href = '';\r\n    }\r\n\r\n    // [link](  <href>  \"title\"  )\r\n    //                ^^ skipping these spaces\r\n    start = pos;\r\n    for (; pos < max; pos++) {\r\n      code = state.src.charCodeAt(pos);\r\n      if (code !== 0x20 && code !== 0x0A) { break; }\r\n    }\r\n\r\n    // [link](  <href>  \"title\"  )\r\n    //                  ^^^^^^^ parsing link title\r\n    if (pos < max && start !== pos && parseLinkTitle(state, pos)) {\r\n      title = state.linkContent;\r\n      pos = state.pos;\r\n\r\n      // [link](  <href>  \"title\"  )\r\n      //                         ^^ skipping these spaces\r\n      for (; pos < max; pos++) {\r\n        code = state.src.charCodeAt(pos);\r\n        if (code !== 0x20 && code !== 0x0A) { break; }\r\n      }\r\n    } else {\r\n      title = '';\r\n    }\r\n\r\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\r\n      state.pos = oldPos;\r\n      return false;\r\n    }\r\n    pos++;\r\n  } else {\r\n    //\r\n    // Link reference\r\n    //\r\n\r\n    // do not allow nested reference links\r\n    if (state.linkLevel > 0) { return false; }\r\n\r\n    // [foo]  [bar]\r\n    //      ^^ optional whitespace (can include newlines)\r\n    for (; pos < max; pos++) {\r\n      code = state.src.charCodeAt(pos);\r\n      if (code !== 0x20 && code !== 0x0A) { break; }\r\n    }\r\n\r\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\r\n      start = pos + 1;\r\n      pos = parseLinkLabel(state, pos);\r\n      if (pos >= 0) {\r\n        label = state.src.slice(start, pos++);\r\n      } else {\r\n        pos = start - 1;\r\n      }\r\n    }\r\n\r\n    // covers label === '' and label === undefined\r\n    // (collapsed reference link and shortcut reference link respectively)\r\n    if (!label) {\r\n      if (typeof label === 'undefined') {\r\n        pos = labelEnd + 1;\r\n      }\r\n      label = state.src.slice(labelStart, labelEnd);\r\n    }\r\n\r\n    ref = state.env.references[normalizeReference(label)];\r\n    if (!ref) {\r\n      state.pos = oldPos;\r\n      return false;\r\n    }\r\n    href = ref.href;\r\n    title = ref.title;\r\n  }\r\n\r\n  //\r\n  // We found the end of the link, and know for a fact it's a valid link;\r\n  // so all that's left to do is to call tokenizer.\r\n  //\r\n  if (!silent) {\r\n    state.pos = labelStart;\r\n    state.posMax = labelEnd;\r\n\r\n    if (isImage) {\r\n      state.push({\r\n        type: 'image',\r\n        src: href,\r\n        title: title,\r\n        alt: state.src.substr(labelStart, labelEnd - labelStart),\r\n        level: state.level\r\n      });\r\n    } else {\r\n      state.push({\r\n        type: 'link_open',\r\n        href: href,\r\n        title: title,\r\n        level: state.level++\r\n      });\r\n      state.linkLevel++;\r\n      state.parser.tokenize(state);\r\n      state.linkLevel--;\r\n      state.push({ type: 'link_close', level: --state.level });\r\n    }\r\n  }\r\n\r\n  state.pos = pos;\r\n  state.posMax = max;\r\n  return true;\r\n}\r\n\r\n// Process inline footnotes (^[...])\r\n\r\n\r\nfunction footnote_inline(state, silent) {\r\n  var labelStart,\r\n      labelEnd,\r\n      footnoteId,\r\n      oldLength,\r\n      max = state.posMax,\r\n      start = state.pos;\r\n\r\n  if (start + 2 >= max) { return false; }\r\n  if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\r\n  if (state.src.charCodeAt(start + 1) !== 0x5B/* [ */) { return false; }\r\n  if (state.level >= state.options.maxNesting) { return false; }\r\n\r\n  labelStart = start + 2;\r\n  labelEnd = parseLinkLabel(state, start + 1);\r\n\r\n  // parser failed to find ']', so it's not a valid note\r\n  if (labelEnd < 0) { return false; }\r\n\r\n  // We found the end of the link, and know for a fact it's a valid link;\r\n  // so all that's left to do is to call tokenizer.\r\n  //\r\n  if (!silent) {\r\n    if (!state.env.footnotes) { state.env.footnotes = {}; }\r\n    if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\r\n    footnoteId = state.env.footnotes.list.length;\r\n\r\n    state.pos = labelStart;\r\n    state.posMax = labelEnd;\r\n\r\n    state.push({\r\n      type: 'footnote_ref',\r\n      id: footnoteId,\r\n      level: state.level\r\n    });\r\n    state.linkLevel++;\r\n    oldLength = state.tokens.length;\r\n    state.parser.tokenize(state);\r\n    state.env.footnotes.list[footnoteId] = { tokens: state.tokens.splice(oldLength) };\r\n    state.linkLevel--;\r\n  }\r\n\r\n  state.pos = labelEnd + 1;\r\n  state.posMax = max;\r\n  return true;\r\n}\r\n\r\n// Process footnote references ([^...])\r\n\r\nfunction footnote_ref(state, silent) {\r\n  var label,\r\n      pos,\r\n      footnoteId,\r\n      footnoteSubId,\r\n      max = state.posMax,\r\n      start = state.pos;\r\n\r\n  // should be at least 4 chars - \"[^x]\"\r\n  if (start + 3 > max) { return false; }\r\n\r\n  if (!state.env.footnotes || !state.env.footnotes.refs) { return false; }\r\n  if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\r\n  if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\r\n  if (state.level >= state.options.maxNesting) { return false; }\r\n\r\n  for (pos = start + 2; pos < max; pos++) {\r\n    if (state.src.charCodeAt(pos) === 0x20) { return false; }\r\n    if (state.src.charCodeAt(pos) === 0x0A) { return false; }\r\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (pos === start + 2) { return false; } // no empty footnote labels\r\n  if (pos >= max) { return false; }\r\n  pos++;\r\n\r\n  label = state.src.slice(start + 2, pos - 1);\r\n  if (typeof state.env.footnotes.refs[':' + label] === 'undefined') { return false; }\r\n\r\n  if (!silent) {\r\n    if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\r\n\r\n    if (state.env.footnotes.refs[':' + label] < 0) {\r\n      footnoteId = state.env.footnotes.list.length;\r\n      state.env.footnotes.list[footnoteId] = { label: label, count: 0 };\r\n      state.env.footnotes.refs[':' + label] = footnoteId;\r\n    } else {\r\n      footnoteId = state.env.footnotes.refs[':' + label];\r\n    }\r\n\r\n    footnoteSubId = state.env.footnotes.list[footnoteId].count;\r\n    state.env.footnotes.list[footnoteId].count++;\r\n\r\n    state.push({\r\n      type: 'footnote_ref',\r\n      id: footnoteId,\r\n      subId: footnoteSubId,\r\n      level: state.level\r\n    });\r\n  }\r\n\r\n  state.pos = pos;\r\n  state.posMax = max;\r\n  return true;\r\n}\r\n\r\n// List of valid url schemas, accorting to commonmark spec\r\n// http://jgm.github.io/CommonMark/spec.html#autolinks\r\n\r\nvar url_schemas = [\r\n  'coap',\r\n  'doi',\r\n  'javascript',\r\n  'aaa',\r\n  'aaas',\r\n  'about',\r\n  'acap',\r\n  'cap',\r\n  'cid',\r\n  'crid',\r\n  'data',\r\n  'dav',\r\n  'dict',\r\n  'dns',\r\n  'file',\r\n  'ftp',\r\n  'geo',\r\n  'go',\r\n  'gopher',\r\n  'h323',\r\n  'http',\r\n  'https',\r\n  'iax',\r\n  'icap',\r\n  'im',\r\n  'imap',\r\n  'info',\r\n  'ipp',\r\n  'iris',\r\n  'iris.beep',\r\n  'iris.xpc',\r\n  'iris.xpcs',\r\n  'iris.lwz',\r\n  'ldap',\r\n  'mailto',\r\n  'mid',\r\n  'msrp',\r\n  'msrps',\r\n  'mtqp',\r\n  'mupdate',\r\n  'news',\r\n  'nfs',\r\n  'ni',\r\n  'nih',\r\n  'nntp',\r\n  'opaquelocktoken',\r\n  'pop',\r\n  'pres',\r\n  'rtsp',\r\n  'service',\r\n  'session',\r\n  'shttp',\r\n  'sieve',\r\n  'sip',\r\n  'sips',\r\n  'sms',\r\n  'snmp',\r\n  'soap.beep',\r\n  'soap.beeps',\r\n  'tag',\r\n  'tel',\r\n  'telnet',\r\n  'tftp',\r\n  'thismessage',\r\n  'tn3270',\r\n  'tip',\r\n  'tv',\r\n  'urn',\r\n  'vemmi',\r\n  'ws',\r\n  'wss',\r\n  'xcon',\r\n  'xcon-userid',\r\n  'xmlrpc.beep',\r\n  'xmlrpc.beeps',\r\n  'xmpp',\r\n  'z39.50r',\r\n  'z39.50s',\r\n  'adiumxtra',\r\n  'afp',\r\n  'afs',\r\n  'aim',\r\n  'apt',\r\n  'attachment',\r\n  'aw',\r\n  'beshare',\r\n  'bitcoin',\r\n  'bolo',\r\n  'callto',\r\n  'chrome',\r\n  'chrome-extension',\r\n  'com-eventbrite-attendee',\r\n  'content',\r\n  'cvs',\r\n  'dlna-playsingle',\r\n  'dlna-playcontainer',\r\n  'dtn',\r\n  'dvb',\r\n  'ed2k',\r\n  'facetime',\r\n  'feed',\r\n  'finger',\r\n  'fish',\r\n  'gg',\r\n  'git',\r\n  'gizmoproject',\r\n  'gtalk',\r\n  'hcp',\r\n  'icon',\r\n  'ipn',\r\n  'irc',\r\n  'irc6',\r\n  'ircs',\r\n  'itms',\r\n  'jar',\r\n  'jms',\r\n  'keyparc',\r\n  'lastfm',\r\n  'ldaps',\r\n  'magnet',\r\n  'maps',\r\n  'market',\r\n  'message',\r\n  'mms',\r\n  'ms-help',\r\n  'msnim',\r\n  'mumble',\r\n  'mvn',\r\n  'notes',\r\n  'oid',\r\n  'palm',\r\n  'paparazzi',\r\n  'platform',\r\n  'proxy',\r\n  'psyc',\r\n  'query',\r\n  'res',\r\n  'resource',\r\n  'rmi',\r\n  'rsync',\r\n  'rtmp',\r\n  'secondlife',\r\n  'sftp',\r\n  'sgn',\r\n  'skype',\r\n  'smb',\r\n  'soldat',\r\n  'spotify',\r\n  'ssh',\r\n  'steam',\r\n  'svn',\r\n  'teamspeak',\r\n  'things',\r\n  'udp',\r\n  'unreal',\r\n  'ut2004',\r\n  'ventrilo',\r\n  'view-source',\r\n  'webcal',\r\n  'wtai',\r\n  'wyciwyg',\r\n  'xfire',\r\n  'xri',\r\n  'ymsgr'\r\n];\r\n\r\n// Process autolinks '<protocol:...>'\r\n\r\n\r\n/*eslint max-len:0*/\r\nvar EMAIL_RE    = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\r\nvar AUTOLINK_RE = /^<([a-zA-Z.\\-]{1,25}):([^<>\\x00-\\x20]*)>/;\r\n\r\n\r\nfunction autolink(state, silent) {\r\n  var tail, linkMatch, emailMatch, url, fullUrl, pos = state.pos;\r\n\r\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\r\n\r\n  tail = state.src.slice(pos);\r\n\r\n  if (tail.indexOf('>') < 0) { return false; }\r\n\r\n  linkMatch = tail.match(AUTOLINK_RE);\r\n\r\n  if (linkMatch) {\r\n    if (url_schemas.indexOf(linkMatch[1].toLowerCase()) < 0) { return false; }\r\n\r\n    url = linkMatch[0].slice(1, -1);\r\n    fullUrl = normalizeLink(url);\r\n    if (!state.parser.validateLink(url)) { return false; }\r\n\r\n    if (!silent) {\r\n      state.push({\r\n        type: 'link_open',\r\n        href: fullUrl,\r\n        level: state.level\r\n      });\r\n      state.push({\r\n        type: 'text',\r\n        content: url,\r\n        level: state.level + 1\r\n      });\r\n      state.push({ type: 'link_close', level: state.level });\r\n    }\r\n\r\n    state.pos += linkMatch[0].length;\r\n    return true;\r\n  }\r\n\r\n  emailMatch = tail.match(EMAIL_RE);\r\n\r\n  if (emailMatch) {\r\n\r\n    url = emailMatch[0].slice(1, -1);\r\n\r\n    fullUrl = normalizeLink('mailto:' + url);\r\n    if (!state.parser.validateLink(fullUrl)) { return false; }\r\n\r\n    if (!silent) {\r\n      state.push({\r\n        type: 'link_open',\r\n        href: fullUrl,\r\n        level: state.level\r\n      });\r\n      state.push({\r\n        type: 'text',\r\n        content: url,\r\n        level: state.level + 1\r\n      });\r\n      state.push({ type: 'link_close', level: state.level });\r\n    }\r\n\r\n    state.pos += emailMatch[0].length;\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n// Regexps to match html elements\r\n\r\nfunction replace$1(regex, options) {\r\n  regex = regex.source;\r\n  options = options || '';\r\n\r\n  return function self(name, val) {\r\n    if (!name) {\r\n      return new RegExp(regex, options);\r\n    }\r\n    val = val.source || val;\r\n    regex = regex.replace(name, val);\r\n    return self;\r\n  };\r\n}\r\n\r\n\r\nvar attr_name     = /[a-zA-Z_:][a-zA-Z0-9:._-]*/;\r\n\r\nvar unquoted      = /[^\"'=<>`\\x00-\\x20]+/;\r\nvar single_quoted = /'[^']*'/;\r\nvar double_quoted = /\"[^\"]*\"/;\r\n\r\n/*eslint no-spaced-func:0*/\r\nvar attr_value  = replace$1(/(?:unquoted|single_quoted|double_quoted)/)\r\n                    ('unquoted', unquoted)\r\n                    ('single_quoted', single_quoted)\r\n                    ('double_quoted', double_quoted)\r\n                    ();\r\n\r\nvar attribute   = replace$1(/(?:\\s+attr_name(?:\\s*=\\s*attr_value)?)/)\r\n                    ('attr_name', attr_name)\r\n                    ('attr_value', attr_value)\r\n                    ();\r\n\r\nvar open_tag    = replace$1(/<[A-Za-z][A-Za-z0-9]*attribute*\\s*\\/?>/)\r\n                    ('attribute', attribute)\r\n                    ();\r\n\r\nvar close_tag   = /<\\/[A-Za-z][A-Za-z0-9]*\\s*>/;\r\nvar comment     = /<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->/;\r\nvar processing  = /<[?].*?[?]>/;\r\nvar declaration = /<![A-Z]+\\s+[^>]*>/;\r\nvar cdata       = /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/;\r\n\r\nvar HTML_TAG_RE = replace$1(/^(?:open_tag|close_tag|comment|processing|declaration|cdata)/)\r\n  ('open_tag', open_tag)\r\n  ('close_tag', close_tag)\r\n  ('comment', comment)\r\n  ('processing', processing)\r\n  ('declaration', declaration)\r\n  ('cdata', cdata)\r\n  ();\r\n\r\n// Process html tags\r\n\r\n\r\nfunction isLetter$2(ch) {\r\n  /*eslint no-bitwise:0*/\r\n  var lc = ch | 0x20; // to lower case\r\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\r\n}\r\n\r\n\r\nfunction htmltag(state, silent) {\r\n  var ch, match, max, pos = state.pos;\r\n\r\n  if (!state.options.html) { return false; }\r\n\r\n  // Check start\r\n  max = state.posMax;\r\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\r\n      pos + 2 >= max) {\r\n    return false;\r\n  }\r\n\r\n  // Quick fail on second char\r\n  ch = state.src.charCodeAt(pos + 1);\r\n  if (ch !== 0x21/* ! */ &&\r\n      ch !== 0x3F/* ? */ &&\r\n      ch !== 0x2F/* / */ &&\r\n      !isLetter$2(ch)) {\r\n    return false;\r\n  }\r\n\r\n  match = state.src.slice(pos).match(HTML_TAG_RE);\r\n  if (!match) { return false; }\r\n\r\n  if (!silent) {\r\n    state.push({\r\n      type: 'htmltag',\r\n      content: state.src.slice(pos, pos + match[0].length),\r\n      level: state.level\r\n    });\r\n  }\r\n  state.pos += match[0].length;\r\n  return true;\r\n}\r\n\r\n// Process html entity - &#123;, &#xAF;, &quot;, ...\r\n\r\n\r\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,8}|[0-9]{1,8}));/i;\r\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\r\n\r\n\r\nfunction entity(state, silent) {\r\n  var ch, code, match, pos = state.pos, max = state.posMax;\r\n\r\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\r\n\r\n  if (pos + 1 < max) {\r\n    ch = state.src.charCodeAt(pos + 1);\r\n\r\n    if (ch === 0x23 /* # */) {\r\n      match = state.src.slice(pos).match(DIGITAL_RE);\r\n      if (match) {\r\n        if (!silent) {\r\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\r\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\r\n        }\r\n        state.pos += match[0].length;\r\n        return true;\r\n      }\r\n    } else {\r\n      match = state.src.slice(pos).match(NAMED_RE);\r\n      if (match) {\r\n        var decoded = decodeEntity(match[1]);\r\n        if (match[1] !== decoded) {\r\n          if (!silent) { state.pending += decoded; }\r\n          state.pos += match[0].length;\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (!silent) { state.pending += '&'; }\r\n  state.pos++;\r\n  return true;\r\n}\r\n\r\n/**\r\n * Inline Parser `rules`\r\n */\r\n\r\nvar _rules$2 = [\r\n  [ 'text',            text ],\r\n  [ 'newline',         newline ],\r\n  [ 'escape',          escape ],\r\n  [ 'backticks',       backticks ],\r\n  [ 'del',             del ],\r\n  [ 'ins',             ins ],\r\n  [ 'mark',            mark ],\r\n  [ 'emphasis',        emphasis ],\r\n  [ 'sub',             sub ],\r\n  [ 'sup',             sup ],\r\n  [ 'links',           links ],\r\n  [ 'footnote_inline', footnote_inline ],\r\n  [ 'footnote_ref',    footnote_ref ],\r\n  [ 'autolink',        autolink ],\r\n  [ 'htmltag',         htmltag ],\r\n  [ 'entity',          entity ]\r\n];\r\n\r\n/**\r\n * Inline Parser class. Note that link validation is stricter\r\n * in Remarkable than what is specified by CommonMark. If you\r\n * want to change this you can use a custom validator.\r\n *\r\n * @api private\r\n */\r\n\r\nfunction ParserInline() {\r\n  this.ruler = new Ruler();\r\n  for (var i = 0; i < _rules$2.length; i++) {\r\n    this.ruler.push(_rules$2[i][0], _rules$2[i][1]);\r\n  }\r\n\r\n  // Can be overridden with a custom validator\r\n  this.validateLink = validateLink;\r\n}\r\n\r\n/**\r\n * Skip a single token by running all rules in validation mode.\r\n * Returns `true` if any rule reports success.\r\n *\r\n * @param  {Object} `state`\r\n * @api privage\r\n */\r\n\r\nParserInline.prototype.skipToken = function (state) {\r\n  var rules = this.ruler.getRules('');\r\n  var len = rules.length;\r\n  var pos = state.pos;\r\n  var i, cached_pos;\r\n\r\n  if ((cached_pos = state.cacheGet(pos)) > 0) {\r\n    state.pos = cached_pos;\r\n    return;\r\n  }\r\n\r\n  for (i = 0; i < len; i++) {\r\n    if (rules[i](state, true)) {\r\n      state.cacheSet(pos, state.pos);\r\n      return;\r\n    }\r\n  }\r\n\r\n  state.pos++;\r\n  state.cacheSet(pos, state.pos);\r\n};\r\n\r\n/**\r\n * Generate tokens for the given input range.\r\n *\r\n * @param  {Object} `state`\r\n * @api private\r\n */\r\n\r\nParserInline.prototype.tokenize = function (state) {\r\n  var rules = this.ruler.getRules('');\r\n  var len = rules.length;\r\n  var end = state.posMax;\r\n  var ok, i;\r\n\r\n  while (state.pos < end) {\r\n\r\n    // Try all possible rules.\r\n    // On success, the rule should:\r\n    //\r\n    // - update `state.pos`\r\n    // - update `state.tokens`\r\n    // - return true\r\n    for (i = 0; i < len; i++) {\r\n      ok = rules[i](state, false);\r\n\r\n      if (ok) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (ok) {\r\n      if (state.pos >= end) { break; }\r\n      continue;\r\n    }\r\n\r\n    state.pending += state.src[state.pos++];\r\n  }\r\n\r\n  if (state.pending) {\r\n    state.pushPending();\r\n  }\r\n};\r\n\r\n/**\r\n * Parse the given input string.\r\n *\r\n * @param  {String} `str`\r\n * @param  {Object} `options`\r\n * @param  {Object} `env`\r\n * @param  {Array} `outTokens`\r\n * @api private\r\n */\r\n\r\nParserInline.prototype.parse = function (str, options, env, outTokens) {\r\n  var state = new StateInline(str, this, options, env, outTokens);\r\n  this.tokenize(state);\r\n};\r\n\r\n/**\r\n * Validate the given `url` by checking for bad protocols.\r\n *\r\n * @param  {String} `url`\r\n * @return {Boolean}\r\n */\r\n\r\nfunction validateLink(url) {\r\n  var BAD_PROTOCOLS = [ 'vbscript', 'javascript', 'file', 'data' ];\r\n  var str = url.trim().toLowerCase();\r\n  // Care about digital entities \"javascript&#x3A;alert(1)\"\r\n  str = replaceEntities(str);\r\n  if (str.indexOf(':') !== -1 && BAD_PROTOCOLS.indexOf(str.split(':')[0]) !== -1) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n// Remarkable default options\r\n\r\nvar defaultConfig = {\r\n  options: {\r\n    html:         false,        // Enable HTML tags in source\r\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\r\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\r\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\r\n    linkTarget:   '',           // set target to open link in\r\n\r\n    // Enable some language-neutral replacements + quotes beautification\r\n    typographer:  false,\r\n\r\n    // Double + single quotes replacement pairs, when typographer enabled,\r\n    // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.\r\n    quotes: '“”‘’',\r\n\r\n    // Highlighter function. Should return escaped HTML,\r\n    // or '' if input not changed\r\n    //\r\n    // function (/*str, lang*/) { return ''; }\r\n    //\r\n    highlight: null,\r\n\r\n    maxNesting:   20            // Internal protection, recursion limit\r\n  },\r\n\r\n  components: {\r\n\r\n    core: {\r\n      rules: [\r\n        'block',\r\n        'inline',\r\n        'references',\r\n        'replacements',\r\n        'smartquotes',\r\n        'references',\r\n        'abbr2',\r\n        'footnote_tail'\r\n      ]\r\n    },\r\n\r\n    block: {\r\n      rules: [\r\n        'blockquote',\r\n        'code',\r\n        'fences',\r\n        'footnote',\r\n        'heading',\r\n        'hr',\r\n        'htmlblock',\r\n        'lheading',\r\n        'list',\r\n        'paragraph',\r\n        'table'\r\n      ]\r\n    },\r\n\r\n    inline: {\r\n      rules: [\r\n        'autolink',\r\n        'backticks',\r\n        'del',\r\n        'emphasis',\r\n        'entity',\r\n        'escape',\r\n        'footnote_ref',\r\n        'htmltag',\r\n        'links',\r\n        'newline',\r\n        'text'\r\n      ]\r\n    }\r\n  }\r\n};\r\n\r\n// Remarkable default options\r\n\r\nvar fullConfig = {\r\n  options: {\r\n    html:         false,        // Enable HTML tags in source\r\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\r\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\r\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\r\n    linkTarget:   '',           // set target to open link in\r\n\r\n    // Enable some language-neutral replacements + quotes beautification\r\n    typographer:  false,\r\n\r\n    // Double + single quotes replacement pairs, when typographer enabled,\r\n    // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.\r\n    quotes:       '“”‘’',\r\n\r\n    // Highlighter function. Should return escaped HTML,\r\n    // or '' if input not changed\r\n    //\r\n    // function (/*str, lang*/) { return ''; }\r\n    //\r\n    highlight:     null,\r\n\r\n    maxNesting:    20            // Internal protection, recursion limit\r\n  },\r\n\r\n  components: {\r\n    // Don't restrict core/block/inline rules\r\n    core: {},\r\n    block: {},\r\n    inline: {}\r\n  }\r\n};\r\n\r\n// Commonmark default options\r\n\r\nvar commonmarkConfig = {\r\n  options: {\r\n    html:         true,         // Enable HTML tags in source\r\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\r\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\r\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\r\n    linkTarget:   '',           // set target to open link in\r\n\r\n    // Enable some language-neutral replacements + quotes beautification\r\n    typographer:  false,\r\n\r\n    // Double + single quotes replacement pairs, when typographer enabled,\r\n    // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.\r\n    quotes: '“”‘’',\r\n\r\n    // Highlighter function. Should return escaped HTML,\r\n    // or '' if input not changed\r\n    //\r\n    // function (/*str, lang*/) { return ''; }\r\n    //\r\n    highlight: null,\r\n\r\n    maxNesting:   20            // Internal protection, recursion limit\r\n  },\r\n\r\n  components: {\r\n\r\n    core: {\r\n      rules: [\r\n        'block',\r\n        'inline',\r\n        'references',\r\n        'abbr2'\r\n      ]\r\n    },\r\n\r\n    block: {\r\n      rules: [\r\n        'blockquote',\r\n        'code',\r\n        'fences',\r\n        'heading',\r\n        'hr',\r\n        'htmlblock',\r\n        'lheading',\r\n        'list',\r\n        'paragraph'\r\n      ]\r\n    },\r\n\r\n    inline: {\r\n      rules: [\r\n        'autolink',\r\n        'backticks',\r\n        'emphasis',\r\n        'entity',\r\n        'escape',\r\n        'htmltag',\r\n        'links',\r\n        'newline',\r\n        'text'\r\n      ]\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Preset configs\r\n */\r\n\r\nvar config = {\r\n  'default': defaultConfig,\r\n  'full': fullConfig,\r\n  'commonmark': commonmarkConfig\r\n};\r\n\r\n/**\r\n * The `StateCore` class manages state.\r\n *\r\n * @param {Object} `instance` Remarkable instance\r\n * @param {String} `str` Markdown string\r\n * @param {Object} `env`\r\n */\r\n\r\nfunction StateCore(instance, str, env) {\r\n  this.src = str;\r\n  this.env = env;\r\n  this.options = instance.options;\r\n  this.tokens = [];\r\n  this.inlineMode = false;\r\n\r\n  this.inline = instance.inline;\r\n  this.block = instance.block;\r\n  this.renderer = instance.renderer;\r\n  this.typographer = instance.typographer;\r\n}\r\n\r\n/**\r\n * The main `Remarkable` class. Create an instance of\r\n * `Remarkable` with a `preset` and/or `options`.\r\n *\r\n * @param {String} `preset` If no preset is given, `default` is used.\r\n * @param {Object} `options`\r\n */\r\n\r\nfunction Remarkable(preset, options) {\r\n  if (typeof preset !== 'string') {\r\n    options = preset;\r\n    preset = 'default';\r\n  }\r\n\r\n  if (options && options.linkify != null) {\r\n    console.warn(\r\n      'linkify option is removed. Use linkify plugin instead:\\n\\n' +\r\n      'import Remarkable from \\'remarkable\\';\\n' +\r\n      'import linkify from \\'remarkable/linkify\\';\\n' +\r\n      'new Remarkable().use(linkify)\\n'\r\n    );\r\n  }\r\n\r\n  this.inline   = new ParserInline();\r\n  this.block    = new ParserBlock();\r\n  this.core     = new Core();\r\n  this.renderer = new Renderer();\r\n  this.ruler    = new Ruler();\r\n\r\n  this.options  = {};\r\n  this.configure(config[preset]);\r\n  this.set(options || {});\r\n}\r\n\r\n/**\r\n * Set options as an alternative to passing them\r\n * to the constructor.\r\n *\r\n * ```js\r\n * md.set({typographer: true});\r\n * ```\r\n * @param {Object} `options`\r\n * @api public\r\n */\r\n\r\nRemarkable.prototype.set = function (options) {\r\n  assign(this.options, options);\r\n};\r\n\r\n/**\r\n * Batch loader for components rules states, and options\r\n *\r\n * @param  {Object} `presets`\r\n */\r\n\r\nRemarkable.prototype.configure = function (presets) {\r\n  var self = this;\r\n\r\n  if (!presets) { throw new Error('Wrong `remarkable` preset, check name/content'); }\r\n  if (presets.options) { self.set(presets.options); }\r\n  if (presets.components) {\r\n    Object.keys(presets.components).forEach(function (name) {\r\n      if (presets.components[name].rules) {\r\n        self[name].ruler.enable(presets.components[name].rules, true);\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * Use a plugin.\r\n *\r\n * ```js\r\n * var md = new Remarkable();\r\n *\r\n * md.use(plugin1)\r\n *   .use(plugin2, opts)\r\n *   .use(plugin3);\r\n * ```\r\n *\r\n * @param  {Function} `plugin`\r\n * @param  {Object} `options`\r\n * @return {Object} `Remarkable` for chaining\r\n */\r\n\r\nRemarkable.prototype.use = function (plugin, options) {\r\n  plugin(this, options);\r\n  return this;\r\n};\r\n\r\n\r\n/**\r\n * Parse the input `string` and return a tokens array.\r\n * Modifies `env` with definitions data.\r\n *\r\n * @param  {String} `string`\r\n * @param  {Object} `env`\r\n * @return {Array} Array of tokens\r\n */\r\n\r\nRemarkable.prototype.parse = function (str, env) {\r\n  var state = new StateCore(this, str, env);\r\n  this.core.process(state);\r\n  return state.tokens;\r\n};\r\n\r\n/**\r\n * The main `.render()` method that does all the magic :)\r\n *\r\n * @param  {String} `string`\r\n * @param  {Object} `env`\r\n * @return {String} Rendered HTML.\r\n */\r\n\r\nRemarkable.prototype.render = function (str, env) {\r\n  env = env || {};\r\n  return this.renderer.render(this.parse(str, env), this.options, env);\r\n};\r\n\r\n/**\r\n * Parse the given content `string` as a single string.\r\n *\r\n * @param  {String} `string`\r\n * @param  {Object} `env`\r\n * @return {Array} Array of tokens\r\n */\r\n\r\nRemarkable.prototype.parseInline = function (str, env) {\r\n  var state = new StateCore(this, str, env);\r\n  state.inlineMode = true;\r\n  this.core.process(state);\r\n  return state.tokens;\r\n};\r\n\r\n/**\r\n * Render a single content `string`, without wrapping it\r\n * to paragraphs\r\n *\r\n * @param  {String} `str`\r\n * @param  {Object} `env`\r\n * @return {String}\r\n */\r\n\r\nRemarkable.prototype.renderInline = function (str, env) {\r\n  env = env || {};\r\n  return this.renderer.render(this.parseInline(str, env), this.options, env);\r\n};\r\n\r\nexport { Remarkable, utils };\r\n"],
  "mappings": "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",
  "names": ["code", "fences", "hr", "getBreak", "_rules", "list", "text", "rules"]
}
